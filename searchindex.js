Search.setIndex({"docnames": ["about_us", "api/_autosummary/blocksnet", "api/_autosummary/blocksnet.analysis", "api/_autosummary/blocksnet.analysis.centrality", "api/_autosummary/blocksnet.analysis.centrality.population", "api/_autosummary/blocksnet.analysis.centrality.population.core", "api/_autosummary/blocksnet.analysis.centrality.population.schemas", "api/_autosummary/blocksnet.analysis.centrality.services", "api/_autosummary/blocksnet.analysis.centrality.services.core", "api/_autosummary/blocksnet.analysis.indicators", "api/_autosummary/blocksnet.analysis.indicators.density", "api/_autosummary/blocksnet.analysis.indicators.density.core", "api/_autosummary/blocksnet.analysis.indicators.density.schemas", "api/_autosummary/blocksnet.analysis.indicators.development", "api/_autosummary/blocksnet.analysis.indicators.development.core", "api/_autosummary/blocksnet.analysis.indicators.development.schemas", "api/_autosummary/blocksnet.analysis.morphotypes", "api/_autosummary/blocksnet.analysis.morphotypes.schemas", "api/_autosummary/blocksnet.analysis.morphotypes.spacematrix", "api/_autosummary/blocksnet.analysis.morphotypes.strelka", "api/_autosummary/blocksnet.analysis.services", "api/_autosummary/blocksnet.analysis.services.collocation", "api/_autosummary/blocksnet.analysis.services.collocation.core", "api/_autosummary/blocksnet.analysis.services.count", "api/_autosummary/blocksnet.analysis.services.count.core", "api/_autosummary/blocksnet.analysis.services.count.schemas", "api/_autosummary/blocksnet.analysis.services.density", "api/_autosummary/blocksnet.analysis.services.density.core", "api/_autosummary/blocksnet.analysis.services.density.schemas", "api/_autosummary/blocksnet.blocks", "api/_autosummary/blocksnet.blocks.aggregation", "api/_autosummary/blocksnet.blocks.aggregation.core", "api/_autosummary/blocksnet.blocks.aggregation.schemas", "api/_autosummary/blocksnet.blocks.assignment", "api/_autosummary/blocksnet.blocks.assignment.core", "api/_autosummary/blocksnet.blocks.assignment.schemas", "api/_autosummary/blocksnet.blocks.assignment.utils", "api/_autosummary/blocksnet.blocks.postprocessing", "api/_autosummary/blocksnet.blocks.postprocessing.core", "api/_autosummary/blocksnet.blocks.postprocessing.schemas", "api/_autosummary/blocksnet.enums", "api/_autosummary/blocksnet.enums.block_category", "api/_autosummary/blocksnet.enums.land_use", "api/_autosummary/blocksnet.enums.land_use_category", "api/_autosummary/blocksnet.enums.settlement_category", "api/_autosummary/blocksnet.machine_learning", "api/_autosummary/blocksnet.machine_learning.context", "api/_autosummary/blocksnet.machine_learning.context.base_context", "api/_autosummary/blocksnet.machine_learning.strategy", "api/_autosummary/blocksnet.machine_learning.strategy.base_strategy", "api/_autosummary/blocksnet.machine_learning.strategy.catboost", "api/_autosummary/blocksnet.machine_learning.strategy.catboost.base_strategy", "api/_autosummary/blocksnet.machine_learning.strategy.catboost.classification_strategy", "api/_autosummary/blocksnet.machine_learning.strategy.catboost.regression_strategy", "api/_autosummary/blocksnet.machine_learning.strategy.classification_base", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.base_strategy", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.ensemble", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.ensemble.base_strategy", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.ensemble.voting", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.ensemble.voting.classification_strategy", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.ensemble.voting.regression_strategy", "api/_autosummary/blocksnet.machine_learning.strategy.xgboost", "api/_autosummary/blocksnet.machine_learning.strategy.xgboost.base_strategy", "api/_autosummary/blocksnet.machine_learning.strategy.xgboost.classification_strategy", "api/_autosummary/blocksnet.machine_learning.strategy.xgboost.regression_strategy", "api/_autosummary/blocksnet.optimization", "api/_autosummary/blocksnet.preprocessing", "api/_autosummary/blocksnet.relations", "api/_autosummary/blocksnet.relations.accessibility", "api/_autosummary/blocksnet.relations.accessibility.graph", "api/_autosummary/blocksnet.relations.accessibility.graph.core", "api/_autosummary/blocksnet.relations.accessibility.graph.schemas", "api/_autosummary/blocksnet.relations.accessibility.graph.utils", "api/_autosummary/blocksnet.relations.accessibility.matrix", "api/_autosummary/blocksnet.relations.accessibility.matrix.core", "api/_autosummary/blocksnet.relations.accessibility.matrix.schemas", "api/_autosummary/blocksnet.relations.adjacency", "api/_autosummary/blocksnet.relations.adjacency.core", "api/_autosummary/blocksnet.relations.adjacency.schemas", "api/_autosummary/blocksnet.relations.distance", "api/_autosummary/blocksnet.relations.distance.core", "api/_autosummary/blocksnet.relations.distance.schemas", "api/_autosummary/blocksnet.synthesis", "api/_autosummary/blocksnet.utils", "api/_autosummary/blocksnet.utils.validation", "api/_autosummary/blocksnet.utils.validation.df_schema", "api/_autosummary/blocksnet.utils.validation.gdf_schema", "api/_autosummary/blocksnet.utils.validation.land_use_schema", "api/_autosummary/blocksnet.utils.validation.utils", "api/index", "blocksnet/contributing", "blocksnet/faq", "blocksnet/index", "examples/analysis/centrality/index", "examples/analysis/centrality/population", "examples/analysis/centrality/services", "examples/analysis/diversity/index", "examples/analysis/diversity/shannon", "examples/analysis/geometry/index", "examples/analysis/geometry/shape", "examples/analysis/geometry/size", "examples/analysis/index", "examples/analysis/indicators/density", "examples/analysis/indicators/development", "examples/analysis/indicators/index", "examples/analysis/indicators/socio_economic", "examples/analysis/indicators/socio_economic/evaluation", "examples/analysis/indicators/socio_economic/index", "examples/analysis/land_use/collocation", "examples/analysis/land_use/index", "examples/analysis/land_use/indicators", "examples/analysis/land_use/prediction", "examples/analysis/land_use/share", "examples/analysis/land_use/similarity", "examples/analysis/morphotypes/index", "examples/analysis/morphotypes/spacematrix", "examples/analysis/morphotypes/strelka", "examples/analysis/network/accessibility", "examples/analysis/network/classification", "examples/analysis/network/connectivity", "examples/analysis/network/index", "examples/analysis/network/od_and_rc", "examples/analysis/provision/competitive", "examples/analysis/provision/index", "examples/analysis/provision/shared", "examples/analysis/services/collocation", "examples/analysis/services/count", "examples/analysis/services/density", "examples/analysis/services/index", "examples/analysis/vacant_area/index", "examples/analysis/vacant_area/vacant_area", "examples/blocks/aggregation", "examples/blocks/assignment", "examples/blocks/classification", "examples/blocks/cutting", "examples/blocks/index", "examples/blocks/postprocessing", "examples/index", "examples/machine_learning/classification", "examples/machine_learning/index", "examples/machine_learning/regression", "examples/machine_learning/sklearn", "examples/machine_learning/social", "examples/optimization/index", "examples/optimization/land_use/index", "examples/optimization/land_use/land_use", "examples/optimization/services/index", "examples/optimization/services/land_use_profiling", "examples/optimization/services/simulated_annealing", "examples/optimization/services/tpe_simple", "examples/pipeline", "examples/preprocessing/feature_engineering", "examples/preprocessing/imputing", "examples/preprocessing/imputing/development", "examples/preprocessing/imputing/index", "examples/preprocessing/index", "examples/relations/accessibility", "examples/relations/adjacency", "examples/relations/distance", "examples/relations/index", "examples/synthesis/index", "examples/synthesis/services_planning/area_based_tpe", "examples/synthesis/services_planning/index", "get_started/index", "get_started/linux/1_git", "get_started/linux/2_python", "get_started/linux/3_venv", "get_started/linux/4_blocksnet", "get_started/linux/index", "get_started/windows/1_git", "get_started/windows/2_python", "get_started/windows/3_venv", "get_started/windows/4_blocksnet", "get_started/windows/index", "index"], "filenames": ["about_us.md", "api/_autosummary/blocksnet.rst", "api/_autosummary/blocksnet.analysis.rst", "api/_autosummary/blocksnet.analysis.centrality.rst", "api/_autosummary/blocksnet.analysis.centrality.population.rst", "api/_autosummary/blocksnet.analysis.centrality.population.core.rst", "api/_autosummary/blocksnet.analysis.centrality.population.schemas.rst", "api/_autosummary/blocksnet.analysis.centrality.services.rst", "api/_autosummary/blocksnet.analysis.centrality.services.core.rst", "api/_autosummary/blocksnet.analysis.indicators.rst", "api/_autosummary/blocksnet.analysis.indicators.density.rst", "api/_autosummary/blocksnet.analysis.indicators.density.core.rst", "api/_autosummary/blocksnet.analysis.indicators.density.schemas.rst", "api/_autosummary/blocksnet.analysis.indicators.development.rst", "api/_autosummary/blocksnet.analysis.indicators.development.core.rst", "api/_autosummary/blocksnet.analysis.indicators.development.schemas.rst", "api/_autosummary/blocksnet.analysis.morphotypes.rst", "api/_autosummary/blocksnet.analysis.morphotypes.schemas.rst", "api/_autosummary/blocksnet.analysis.morphotypes.spacematrix.rst", "api/_autosummary/blocksnet.analysis.morphotypes.strelka.rst", "api/_autosummary/blocksnet.analysis.services.rst", "api/_autosummary/blocksnet.analysis.services.collocation.rst", "api/_autosummary/blocksnet.analysis.services.collocation.core.rst", "api/_autosummary/blocksnet.analysis.services.count.rst", "api/_autosummary/blocksnet.analysis.services.count.core.rst", "api/_autosummary/blocksnet.analysis.services.count.schemas.rst", "api/_autosummary/blocksnet.analysis.services.density.rst", "api/_autosummary/blocksnet.analysis.services.density.core.rst", "api/_autosummary/blocksnet.analysis.services.density.schemas.rst", "api/_autosummary/blocksnet.blocks.rst", "api/_autosummary/blocksnet.blocks.aggregation.rst", "api/_autosummary/blocksnet.blocks.aggregation.core.rst", "api/_autosummary/blocksnet.blocks.aggregation.schemas.rst", "api/_autosummary/blocksnet.blocks.assignment.rst", "api/_autosummary/blocksnet.blocks.assignment.core.rst", "api/_autosummary/blocksnet.blocks.assignment.schemas.rst", "api/_autosummary/blocksnet.blocks.assignment.utils.rst", "api/_autosummary/blocksnet.blocks.postprocessing.rst", "api/_autosummary/blocksnet.blocks.postprocessing.core.rst", "api/_autosummary/blocksnet.blocks.postprocessing.schemas.rst", "api/_autosummary/blocksnet.enums.rst", "api/_autosummary/blocksnet.enums.block_category.rst", "api/_autosummary/blocksnet.enums.land_use.rst", "api/_autosummary/blocksnet.enums.land_use_category.rst", "api/_autosummary/blocksnet.enums.settlement_category.rst", "api/_autosummary/blocksnet.machine_learning.rst", "api/_autosummary/blocksnet.machine_learning.context.rst", "api/_autosummary/blocksnet.machine_learning.context.base_context.rst", "api/_autosummary/blocksnet.machine_learning.strategy.rst", "api/_autosummary/blocksnet.machine_learning.strategy.base_strategy.rst", "api/_autosummary/blocksnet.machine_learning.strategy.catboost.rst", "api/_autosummary/blocksnet.machine_learning.strategy.catboost.base_strategy.rst", "api/_autosummary/blocksnet.machine_learning.strategy.catboost.classification_strategy.rst", "api/_autosummary/blocksnet.machine_learning.strategy.catboost.regression_strategy.rst", "api/_autosummary/blocksnet.machine_learning.strategy.classification_base.rst", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.rst", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.base_strategy.rst", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.ensemble.rst", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.ensemble.base_strategy.rst", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.ensemble.voting.rst", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy.rst", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.ensemble.voting.classification_strategy.rst", "api/_autosummary/blocksnet.machine_learning.strategy.sklearn.ensemble.voting.regression_strategy.rst", "api/_autosummary/blocksnet.machine_learning.strategy.xgboost.rst", "api/_autosummary/blocksnet.machine_learning.strategy.xgboost.base_strategy.rst", "api/_autosummary/blocksnet.machine_learning.strategy.xgboost.classification_strategy.rst", "api/_autosummary/blocksnet.machine_learning.strategy.xgboost.regression_strategy.rst", "api/_autosummary/blocksnet.optimization.rst", "api/_autosummary/blocksnet.preprocessing.rst", "api/_autosummary/blocksnet.relations.rst", "api/_autosummary/blocksnet.relations.accessibility.rst", "api/_autosummary/blocksnet.relations.accessibility.graph.rst", "api/_autosummary/blocksnet.relations.accessibility.graph.core.rst", "api/_autosummary/blocksnet.relations.accessibility.graph.schemas.rst", "api/_autosummary/blocksnet.relations.accessibility.graph.utils.rst", "api/_autosummary/blocksnet.relations.accessibility.matrix.rst", "api/_autosummary/blocksnet.relations.accessibility.matrix.core.rst", "api/_autosummary/blocksnet.relations.accessibility.matrix.schemas.rst", "api/_autosummary/blocksnet.relations.adjacency.rst", "api/_autosummary/blocksnet.relations.adjacency.core.rst", "api/_autosummary/blocksnet.relations.adjacency.schemas.rst", "api/_autosummary/blocksnet.relations.distance.rst", "api/_autosummary/blocksnet.relations.distance.core.rst", "api/_autosummary/blocksnet.relations.distance.schemas.rst", "api/_autosummary/blocksnet.synthesis.rst", "api/_autosummary/blocksnet.utils.rst", "api/_autosummary/blocksnet.utils.validation.rst", "api/_autosummary/blocksnet.utils.validation.df_schema.rst", "api/_autosummary/blocksnet.utils.validation.gdf_schema.rst", "api/_autosummary/blocksnet.utils.validation.land_use_schema.rst", "api/_autosummary/blocksnet.utils.validation.utils.rst", "api/index.rst", "blocksnet/contributing.md", "blocksnet/faq.md", "blocksnet/index.md", "examples/analysis/centrality/index.rst", "examples/analysis/centrality/population.nblink", "examples/analysis/centrality/services.nblink", "examples/analysis/diversity/index.rst", "examples/analysis/diversity/shannon.nblink", "examples/analysis/geometry/index.rst", "examples/analysis/geometry/shape.nblink", "examples/analysis/geometry/size.nblink", "examples/analysis/index.rst", "examples/analysis/indicators/density.nblink", "examples/analysis/indicators/development.nblink", "examples/analysis/indicators/index.rst", "examples/analysis/indicators/socio_economic.nblink", "examples/analysis/indicators/socio_economic/evaluation.nblink", "examples/analysis/indicators/socio_economic/index.rst", "examples/analysis/land_use/collocation.nblink", "examples/analysis/land_use/index.rst", "examples/analysis/land_use/indicators.nblink", "examples/analysis/land_use/prediction.nblink", "examples/analysis/land_use/share.nblink", "examples/analysis/land_use/similarity.nblink", "examples/analysis/morphotypes/index.rst", "examples/analysis/morphotypes/spacematrix.nblink", "examples/analysis/morphotypes/strelka.nblink", "examples/analysis/network/accessibility.nblink", "examples/analysis/network/classification.nblink", "examples/analysis/network/connectivity.nblink", "examples/analysis/network/index.rst", "examples/analysis/network/od_and_rc.nblink", "examples/analysis/provision/competitive.nblink", "examples/analysis/provision/index.rst", "examples/analysis/provision/shared.nblink", "examples/analysis/services/collocation.nblink", "examples/analysis/services/count.nblink", "examples/analysis/services/density.nblink", "examples/analysis/services/index.rst", "examples/analysis/vacant_area/index.rst", "examples/analysis/vacant_area/vacant_area.nblink", "examples/blocks/aggregation.nblink", "examples/blocks/assignment.nblink", "examples/blocks/classification.nblink", "examples/blocks/cutting.nblink", "examples/blocks/index.rst", "examples/blocks/postprocessing.nblink", "examples/index.rst", "examples/machine_learning/classification.nblink", "examples/machine_learning/index.rst", "examples/machine_learning/regression.nblink", "examples/machine_learning/sklearn.nblink", "examples/machine_learning/social.nblink", "examples/optimization/index.rst", "examples/optimization/land_use/index.rst", "examples/optimization/land_use/land_use.nblink", "examples/optimization/services/index.rst", "examples/optimization/services/land_use_profiling.nblink", "examples/optimization/services/simulated_annealing.nblink", "examples/optimization/services/tpe_simple.nblink", "examples/pipeline.nblink", "examples/preprocessing/feature_engineering.nblink", "examples/preprocessing/imputing.nblink", "examples/preprocessing/imputing/development.nblink", "examples/preprocessing/imputing/index.rst", "examples/preprocessing/index.rst", "examples/relations/accessibility.nblink", "examples/relations/adjacency.nblink", "examples/relations/distance.nblink", "examples/relations/index.rst", "examples/synthesis/index.rst", "examples/synthesis/services_planning/area_based_tpe.nblink", "examples/synthesis/services_planning/index.rst", "get_started/index.md", "get_started/linux/1_git.md", "get_started/linux/2_python.md", "get_started/linux/3_venv.md", "get_started/linux/4_blocksnet.md", "get_started/linux/index.md", "get_started/windows/1_git.md", "get_started/windows/2_python.md", "get_started/windows/3_venv.md", "get_started/windows/4_blocksnet.md", "get_started/windows/index.md", "index.md"], "titles": ["About us", "blocksnet", "blocksnet.analysis", "blocksnet.analysis.centrality", "blocksnet.analysis.centrality.population", "blocksnet.analysis.centrality.population.core", "blocksnet.analysis.centrality.population.schemas", "blocksnet.analysis.centrality.services", "blocksnet.analysis.centrality.services.core", "blocksnet.analysis.indicators", "blocksnet.analysis.indicators.density", "blocksnet.analysis.indicators.density.core", "blocksnet.analysis.indicators.density.schemas", "blocksnet.analysis.indicators.development", "blocksnet.analysis.indicators.development.core", "blocksnet.analysis.indicators.development.schemas", "blocksnet.analysis.morphotypes", "blocksnet.analysis.morphotypes.schemas", "blocksnet.analysis.morphotypes.spacematrix", "blocksnet.analysis.morphotypes.strelka", "blocksnet.analysis.services", "blocksnet.analysis.services.collocation", "blocksnet.analysis.services.collocation.core", "blocksnet.analysis.services.count", "blocksnet.analysis.services.count.core", "blocksnet.analysis.services.count.schemas", "blocksnet.analysis.services.density", "blocksnet.analysis.services.density.core", "blocksnet.analysis.services.density.schemas", "blocksnet.blocks", "blocksnet.blocks.aggregation", "blocksnet.blocks.aggregation.core", "blocksnet.blocks.aggregation.schemas", "blocksnet.blocks.assignment", "blocksnet.blocks.assignment.core", "blocksnet.blocks.assignment.schemas", "blocksnet.blocks.assignment.utils", "blocksnet.blocks.postprocessing", "blocksnet.blocks.postprocessing.core", "blocksnet.blocks.postprocessing.schemas", "blocksnet.enums", "blocksnet.enums.block_category", "blocksnet.enums.land_use", "blocksnet.enums.land_use_category", "blocksnet.enums.settlement_category", "blocksnet.machine_learning", "blocksnet.machine_learning.context", "blocksnet.machine_learning.context.base_context", "blocksnet.machine_learning.strategy", "blocksnet.machine_learning.strategy.base_strategy", "blocksnet.machine_learning.strategy.catboost", "blocksnet.machine_learning.strategy.catboost.base_strategy", "blocksnet.machine_learning.strategy.catboost.classification_strategy", "blocksnet.machine_learning.strategy.catboost.regression_strategy", "blocksnet.machine_learning.strategy.classification_base", "blocksnet.machine_learning.strategy.sklearn", "blocksnet.machine_learning.strategy.sklearn.base_strategy", "blocksnet.machine_learning.strategy.sklearn.ensemble", "blocksnet.machine_learning.strategy.sklearn.ensemble.base_strategy", "blocksnet.machine_learning.strategy.sklearn.ensemble.voting", "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy", "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.classification_strategy", "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.regression_strategy", "blocksnet.machine_learning.strategy.xgboost", "blocksnet.machine_learning.strategy.xgboost.base_strategy", "blocksnet.machine_learning.strategy.xgboost.classification_strategy", "blocksnet.machine_learning.strategy.xgboost.regression_strategy", "blocksnet.optimization", "blocksnet.preprocessing", "blocksnet.relations", "blocksnet.relations.accessibility", "blocksnet.relations.accessibility.graph", "blocksnet.relations.accessibility.graph.core", "blocksnet.relations.accessibility.graph.schemas", "blocksnet.relations.accessibility.graph.utils", "blocksnet.relations.accessibility.matrix", "blocksnet.relations.accessibility.matrix.core", "blocksnet.relations.accessibility.matrix.schemas", "blocksnet.relations.adjacency", "blocksnet.relations.adjacency.core", "blocksnet.relations.adjacency.schemas", "blocksnet.relations.distance", "blocksnet.relations.distance.core", "blocksnet.relations.distance.schemas", "blocksnet.synthesis", "blocksnet.utils", "blocksnet.utils.validation", "blocksnet.utils.validation.df_schema", "blocksnet.utils.validation.gdf_schema", "blocksnet.utils.validation.land_use_schema", "blocksnet.utils.validation.utils", "API documentation", "Contributing", "FAQ", "BlocksNet", "Centrality", "Population centrality", "Services centrality", "Diversity", "Shannon diversity", "Geometry", "Geometry shape", "Geometry size", "Analysis", "Density indicators", "Development indicators", "Indicators", "Socio-economic indicators", "Socio-economic indicators evaluation", "Socio economic", "Land use collocation", "Land use", "Land use indicators", "Land use prediction", "Land use share", "Land use similarity", "Morphotypes", "Spacematrix morphotypes", "Strelka morphotypes", "Network accessibility", "Network classification", "Network connectivity", "Network", "Network", "Competitive provision", "Provision", "Shared provision", "Services collocation", "Services count", "Services density", "Services", "Vacant area", "Vacant areas", "Buildings aggregation", "Land use assignment", "Classification", "Processing geometries", "Blocks", "&lt;no title&gt;", "Examples", "Classification", "Machine learning", "Regression", "&lt;no title&gt;", "Social Indicators Prediction", "Optimization", "Land use", "Optimization", "Services", "Initial parameters", "Simulated annealing", "Service optimization", "Pipeline", "Features from geometries", "Buildings", "Development imputing", "Imputing", "Preprocessing", "Accessibility relations", "Adjacency relations", "Distance relations", "Relations", "Synthesis", "Services planning", "Services planning", "Get started", "Install git", "Install Python and pip", "Create a virtual environment", "Install BlocksNet", "Linux", "Install git", "Install Python and pip", "Install and create a virtual environment", "Install BlocksNet", "Windows", "Welcome to BlocksNet documentation!"], "terms": {"The": [0, 40, 43, 91, 92, 108, 144, 152, 163, 165, 169, 171, 172, 174, 176], "blocksnet": [0, 91, 92, 93, 96, 97, 99, 101, 102, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 132, 133, 134, 135, 136, 138, 140, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 163, 165, 166, 170, 171, 175], "i": [0, 92, 93, 108, 113, 117, 124, 126, 140, 144, 151, 152, 159, 163, 166, 167, 168, 171, 173, 176], "develop": [0, 106, 156, 165, 169, 174, 176], "maintain": 0, "idu": 0, "team": 0, "institut": 0, "design": 0, "urban": [0, 1, 40, 43, 93, 108, 113, 137, 139, 151, 176], "studi": [0, 151, 163], "an": [0, 19, 40, 41, 42, 44, 92, 93, 176], "educ": 0, "project": [0, 92, 151, 166, 171, 176], "research": [0, 152, 176], "unit": [0, 92, 163, 176], "itmo": [0, 176], "univers": [0, 108, 127, 149, 151, 163, 176], "aim": [0, 176], "interdisciplinari": 0, "compet": [0, 126], "scientif": 0, "approach": 0, "solv": [0, 124, 152, 176], "complex": 0, "problem": [0, 124, 152, 165, 176], "us": [0, 40, 43, 103, 117, 121, 124, 126, 128, 132, 135, 136, 137, 139, 145, 148, 158, 159, 166, 168, 171, 173, 176], "inform": [0, 94, 176], "technologi": [0, 176], "base": [0, 6, 12, 15, 17, 19, 25, 28, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 65, 66, 73, 77, 80, 83, 86, 87, 88, 89, 108, 117, 152, 163, 176], "principl": 0, "sustain": 0, "social": [0, 139, 141], "orient": [0, 176], "you": [0, 92, 123, 144, 152, 158, 165, 166, 167, 168, 169, 171, 172, 173, 174], "can": [0, 92, 94, 121, 123, 126, 144, 152, 158, 159, 165, 172, 176], "nccr": 0, "nation": [0, 176], "center": [0, 108, 142], "cognit": 0, "tatiana": 0, "churiakova": 0, "manag": 0, "vasilii": 0, "starikov": 0, "lead": [0, 158], "softwar": 0, "engin": 0, "also": [0, 176], "ar": [0, 91, 115, 120, 123, 136, 144, 152, 158, 165], "welcom": [0, 92], "our": [0, 158], "issu": [0, 92], "section": [0, 92], "t": [0, 92, 123, 124, 126, 142, 144, 152, 167], "v": [0, 113, 171], "sudakova": 0, "morozov": 0, "A": [0, 40, 43, 151, 163], "mityagin": 0, "": [0, 97, 99, 101, 102, 110, 120, 123, 135, 136, 140, 142, 144, 147, 151, 152, 153, 155, 159, 163, 176], "digit": 0, "master": [0, 1, 93, 176], "plan": [0, 1, 93, 139, 151, 162, 176], "tool": [0, 176], "gener": [0, 1, 92, 93, 96, 110, 132, 139, 140, 142, 147, 151, 153, 155, 159, 176], "territori": [0, 123, 152, 158, 176], "requir": [0, 1, 92, 93, 123, 149, 152, 158, 165, 166, 169, 171, 174, 176], "intern": 0, "confer": 0, "advanc": [0, 165, 176], "innov": 0, "2023": 0, "artii": 0, "thi": [1, 40, 43, 92, 124, 126, 138, 152, 158, 170, 175, 176], "packag": [1, 97, 119, 121, 123, 138, 143, 151, 152, 158, 163, 165, 169, 170, 174], "help": [1, 170, 175, 176], "one": [1, 120, 126, 144, 152, 159, 170, 175, 176], "automat": [1, 92, 139], "area": [1, 93, 103, 107, 108, 112, 139, 143, 144, 147, 151, 152, 153, 155, 163, 176], "modul": [1, 2, 3, 4, 7, 9, 10, 13, 16, 20, 21, 23, 26, 29, 30, 33, 37, 40, 45, 46, 48, 50, 55, 57, 59, 63, 67, 68, 69, 70, 71, 75, 78, 81, 84, 85, 86, 91, 121, 123, 128, 152, 155, 158, 165], "population_centr": [3, 4, 5, 96], "blocks_df": [3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 69, 70, 75, 76, 77, 78, 79, 80, 124, 126, 149, 151, 163], "datafram": [3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 69, 70, 75, 76, 77, 78, 79, 80, 86, 87, 113, 117, 119, 124, 126, 142, 143, 144, 151, 152, 163, 165], "adjacency_graph": [3, 4, 5, 69, 78, 79, 96, 110, 142, 147, 159], "graph": [3, 4, 5, 69, 70, 75, 76, 78, 79, 80, 96, 108, 110, 120, 142, 147, 155, 176], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 93, 124, 152, 168, 176], "services_centr": [3, 7, 8, 97], "accessibility_matrix": [3, 7, 8, 69, 70, 75, 76, 97, 119, 121, 124, 126, 149, 150, 151, 158, 163], "panda": [3, 7, 8, 16, 18, 96, 97, 99, 101, 102, 104, 105, 108, 110, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 126, 127, 128, 129, 132, 142, 143, 144, 149, 150, 151, 152, 155, 158, 159, 160, 163, 165], "core": [3, 7, 16, 18, 50, 51, 96, 97, 99, 108, 110, 115, 120, 123, 124, 126, 132, 133, 134, 135, 136, 140, 142, 147, 152, 153, 155, 159, 163], "frame": [3, 7, 8, 16, 18, 163], "weight": [3, 7, 8, 123, 144, 150], "dict": [3, 7, 8, 33, 34, 45, 48, 49, 50, 51, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 66, 113, 149], "str": [3, 7, 8, 33, 34, 35, 45, 48, 49, 58, 60, 61, 62, 69, 70, 71, 73, 75, 76, 113, 144, 149], "float": [3, 7, 8, 50, 51, 60, 63, 64, 69, 70, 75, 76, 124, 152, 155], "none": [3, 7, 8, 40, 43, 50, 51, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 66, 69, 70, 75, 77, 86, 88, 113, 115, 117, 123, 136, 143, 147, 149, 151, 152, 154, 163], "accessibility_func": [3, 7, 8], "type": [3, 7, 8, 35, 50, 51, 56, 58, 60, 63, 64, 86, 88, 115, 124, 126, 144, 149, 152, 176], "callabl": [3, 7, 8], "function": [3, 5, 7, 8, 11, 14, 18, 19, 22, 24, 27, 31, 34, 36, 38, 72, 73, 74, 76, 77, 79, 80, 82, 87, 90, 144, 152, 165, 176], "mean_access": [3, 7, 8, 119, 121, 165], "class": [6, 12, 15, 17, 19, 25, 28, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 65, 66, 73, 77, 80, 83, 86, 87, 88, 89, 155, 165], "blocksschema": [6, 12, 15, 17, 32, 35, 39, 77, 80, 83], "arg": [6, 12, 15, 17, 25, 28, 32, 35, 39, 40, 43, 45, 46, 47, 48, 49, 54, 69, 70, 71, 72, 73, 75, 76, 77, 80, 83, 86, 87, 88, 89, 90, 113, 155], "kwarg": [6, 12, 15, 17, 25, 28, 32, 35, 39, 45, 46, 47, 48, 49, 54, 69, 70, 71, 72, 73, 75, 76, 77, 80, 83, 86, 87, 88, 89, 90, 155], "dfschema": [6, 12, 15, 17, 25, 28, 86, 87, 88, 89], "calculate_density_ind": [9, 10, 11, 104, 105, 117, 118, 152], "calculate_development_ind": [9, 13, 14, 105], "get_spacematrix_morphotyp": [16, 18, 117, 152], "n_cluster": [16, 18], "int": [16, 18, 69, 78, 79, 86, 88, 155], "11": [16, 18, 102, 108, 117, 119, 123, 133, 135, 136, 142, 144, 147, 151, 152, 163], "random_st": [16, 18, 113, 143, 144], "42": [16, 18, 113, 143, 144, 147, 151, 152, 153, 158, 163, 166], "tupl": [16, 18, 30, 31, 58, 60, 61, 62, 144], "get_strelka_morphotyp": [16, 19, 118, 152], "lowrisemorphotyp": 19, "valu": [19, 40, 41, 42, 43, 44, 117, 120, 124, 127, 142, 144, 149, 151, 152, 155, 158, 163, 176], "enum": [19, 33, 34, 107, 119, 120, 134, 142, 147, 149, 150, 151, 152, 155, 163], "enumer": [19, 40, 41, 42, 43, 44], "non_residenti": 19, "low": [19, 117, 118, 152], "rise": [19, 117, 118, 152], "non": [19, 40, 43, 92, 117, 118, 152, 176], "residenti": [19, 40, 42, 97, 110, 112, 113, 114, 115, 117, 118, 119, 134, 142, 147, 150, 151, 152, 155, 159], "individu": [19, 118], "low_rise_model": 19, "model": [19, 45, 48, 49, 118, 152, 176], "midrisemorphotyp": 19, "basic": [19, 128], "mid": [19, 117, 152], "microdistrict": [19, 152], "block": [19, 96, 97, 99, 101, 102, 104, 105, 108, 110, 112, 113, 114, 115, 117, 118, 119, 121, 124, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 142, 147, 150, 153, 155, 158, 159, 160, 176], "central_model": 19, "central": [19, 103, 139, 176], "highrisemorphotyp": 19, "high": [19, 117, 152, 176], "soviet_microdistrict": 19, "soviet": 19, "modern_microdistrict": 19, "modern": [19, 152], "services_colloc": [20, 21, 22, 127], "services_count": [20, 23, 24, 128], "services_dens": [20, 26, 27, 129], "blocksservicesschema": 25, "blocksareaschema": 28, "aggregate_object": [30, 31, 133, 152], "blocks_gdf": [30, 31, 33, 34, 69, 70, 75, 76, 78, 79, 81, 82, 96, 97, 99, 101, 102, 104, 105, 108, 110, 112, 114, 115, 117, 118, 119, 121, 123, 124, 126, 127, 128, 129, 132, 133, 134, 136, 142, 147, 153, 158, 159, 160], "geodatafram": [30, 31, 33, 34, 36, 37, 38, 69, 70, 71, 72, 75, 76, 78, 79, 81, 82, 86, 88, 90, 102, 113, 152], "objects_gdf": [30, 31, 133], "geopanda": [30, 31, 86, 88, 99, 102, 113, 119, 123, 133, 134, 135, 136, 138, 140, 142, 147, 149, 150, 153, 154, 158], "gdfschema": [32, 35, 39, 73, 77, 80, 83, 86, 88], "assign_land_us": [33, 34, 134, 152], "functional_zones_gdf": [33, 34, 134], "rule": [33, 34, 134], "land_us": [33, 34, 40, 43, 97, 110, 112, 113, 114, 115, 123, 134, 147, 149, 152, 155, 159, 163], "landus": [33, 34, 40, 42, 43, 97, 110, 112, 113, 114, 115, 119, 134, 142, 147, 149, 150, 151, 152, 155, 159, 163], "functionalzonesschema": 35, "functional_zon": [35, 134, 152], "pandera": [35, 86, 88], "seri": 35, "sjoin_intersect": 36, "left_gdf": 36, "right_gdf": 36, "postprocess_urban_block": [37, 38, 138], "busi": [40, 42, 97, 112, 113, 114, 115, 119, 134, 142, 144, 147, 152, 159], "recreat": [40, 42, 97, 112, 113, 114, 115, 119, 134, 142, 144, 147, 150, 152, 159], "industri": [40, 42, 43, 97, 112, 113, 114, 115, 119, 134, 142, 144, 147, 150, 152, 159], "transport": [40, 42, 97, 110, 112, 113, 114, 115, 119, 123, 134, 142, 144, 147, 152, 159], "special": [40, 42, 97, 108, 112, 113, 114, 115, 119, 134, 142, 144, 147, 152, 159], "agricultur": [40, 42, 97, 110, 112, 113, 114, 115, 119, 134, 142, 144, 147, 152, 159], "to_one_hot": [40, 42], "blockcategori": [40, 41, 140], "invalid": [40, 41, 140, 158], "normal": [40, 41, 140], "larg": [40, 41, 123, 140, 152, 158], "landusecategori": [40, 43], "repres": [40, 43], "differ": [40, 43, 152, 169, 174, 176], "categori": [40, 43, 120, 135, 140], "land": [40, 43, 103, 137, 139, 145, 148, 176], "defin": [40, 43, 152, 176], "three": [40, 43], "main": [40, 43, 176], "It": [40, 43, 152, 168, 173], "provid": [40, 43, 115, 126, 135, 136, 144, 159, 176], "method": [40, 43, 119, 152, 159, 165, 176], "convert": [40, 43, 144, 151, 163], "between": [40, 43, 152, 159, 176], "object": [40, 43, 86, 87, 108, 133, 136, 147, 149, 151, 152, 155, 163], "instanc": [40, 43, 144, 159], "non_urban": [40, 43, 113], "classmethod": [40, 43, 45, 46, 47, 86, 87, 88], "from_land_us": [40, 43], "lu": [40, 43, 142, 155, 163], "return": [40, 43, 113, 138, 144, 149, 151, 155, 158, 163], "correspond": [40, 43], "found": [40, 43, 94, 108, 136, 138, 152, 154], "otherwis": [40, 43, 163], "to_land_us": [40, 43], "set": [40, 43, 124, 144, 149, 151, 152, 163, 171], "revers": [40, 43], "map": [40, 43, 152], "creat": [40, 43, 136, 144, 151, 163, 165, 170, 175, 176], "first": [40, 43, 92, 144, 170], "call": [40, 43, 45, 48, 49, 163], "find": [40, 43, 176], "all": [40, 43, 92, 113, 142, 165], "belong": [40, 43], "settlementcategori": [40, 44, 120], "town": [40, 44, 120], "suburb": [40, 44, 120], "villag": [40, 44, 120], "basecontext": [45, 46, 47], "strategi": [45, 46, 47, 113, 135, 136, 143, 155], "basestrategi": [45, 46, 47, 48, 49, 50, 51, 56, 63, 64], "abc": [45, 46, 47, 48, 49, 50, 51, 54, 56, 58, 60, 63, 64, 163], "properti": [45, 46, 47, 48, 49, 58], "abstract": [45, 46, 47, 48, 49, 54], "default": [45, 46, 47, 113, 135, 136, 144, 171], "train": [45, 46, 47, 48, 49, 50, 51, 60, 63, 64, 113, 120, 143, 144], "run": [45, 46, 47, 113, 120, 135, 147, 149, 150, 155, 171, 172], "model_cl": [45, 48, 49, 50, 51, 56, 58, 60, 63, 64], "model_param": [45, 48, 49, 50, 51, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 66, 113, 143], "predict": [45, 48, 49, 50, 51, 60, 63, 64, 111, 135, 136, 139, 141, 143, 176], "ndarrai": [45, 48, 49, 50, 51, 52, 60, 63, 64, 65, 69, 81, 82], "save": [45, 48, 49, 120, 143, 144], "path": [45, 48, 49, 113, 120, 123, 136, 149, 166, 171, 172], "must": [45, 48, 49], "super": [45, 48, 49, 155, 163], "overridden": [45, 48, 49], "load": [45, 48, 49, 108, 113, 126, 143], "classificationbas": [45, 48, 50, 52, 54, 61, 63, 65], "predict_proba": [45, 48, 50, 52, 54, 61, 63, 65, 135, 136, 143], "catboostbasestrategi": [50, 51, 52, 53], "x_train": [50, 51, 60, 63, 64, 143, 144], "x_test": [50, 51, 60, 63, 64, 143, 144], "y_train": [50, 51, 60, 63, 64, 143, 144], "y_test": [50, 51, 60, 63, 64, 143, 144], "x": [50, 51, 52, 60, 61, 63, 64, 65, 92, 102, 143, 144, 147, 155, 163], "catboostclassificationstrategi": [50, 52, 120], "catboostregressionstrategi": [50, 53], "sklearnbasestrategi": [56, 58], "baseestim": [56, 58, 60, 61, 62], "sklearnensemblebasestrategi": [58, 60], "estim": [58, 60, 61, 62, 113, 143, 176], "list": [58, 60, 61, 62, 86, 87, 91, 113, 144, 147, 155], "sklearnvotingbasestrategi": [60, 61, 62], "sklearnvotingclassificationstrategi": [61, 113, 143], "sklearnvotingregressionstrategi": 62, "xgboostbasestrategi": [63, 64, 65, 66], "sklearn": [63, 64, 113, 143, 155], "xgbmodel": [63, 64], "xgboostclassificationstrategi": [63, 65], "xgboostregressionstrategi": [63, 66], "accessibility_graph_to_gdf": [69, 70, 71, 74, 123], "calculate_accessibility_matrix": [69, 70, 75, 76, 152, 158], "weight_kei": [69, 70, 71, 73, 75, 76], "time_min": [69, 70, 71, 73, 75, 76, 123], "calculate_distance_matrix": [69, 81, 82, 160], "dtype": [69, 81, 82, 155], "int32": [69, 81, 82], "generate_adjacency_graph": [69, 78, 79, 96, 110, 142, 147, 155, 159], "buffer_s": [69, 78, 79], "0": [69, 78, 79, 96, 97, 99, 101, 102, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 132, 133, 134, 138, 140, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 163, 165, 166, 169, 171, 174], "get_accessibility_context": [69, 70, 75, 76], "access": [69, 108, 121, 122, 124, 126, 139, 161, 176], "out": [69, 70, 75, 76, 119, 176], "bool": [69, 70, 75, 76, 77, 78, 79, 86, 87, 152], "true": [69, 70, 75, 76, 77, 78, 79, 86, 87, 96, 97, 99, 101, 102, 104, 105, 110, 115, 117, 118, 119, 121, 123, 124, 126, 128, 129, 133, 134, 135, 140, 142, 144, 147, 149, 151, 152, 153, 154, 155, 160, 163], "keep": [69, 70, 75, 76, 78, 79, 92, 123, 152, 171], "get_accessibility_graph": [69, 70, 71, 72, 123, 152, 158], "territory_gdf": [69, 70, 71, 72], "graph_typ": [69, 70, 71, 72], "liter": [69, 70, 71, 72], "drive": [69, 70, 71, 72, 108, 123, 152], "walk": [69, 70, 71, 72, 123, 152, 158], "intermod": [69, 70, 71, 72, 176], "get_adjacency_context": [69, 78, 79, 147, 159], "validate_accessibility_graph": [69, 70, 71, 73], "validate_accessibility_matrix": [69, 70, 75, 77], "matrix": [69, 70, 108, 127, 139, 176], "index": [69, 70, 75, 77, 97, 99, 127, 142, 144, 147, 149, 163], "column": [69, 70, 75, 77, 97, 99, 102, 108, 113, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 133, 134, 138, 140, 142, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 160, 163], "check_squar": [69, 70, 75, 77], "validate_adjacency_graph": [69, 78, 80], "territoryschema": 73, "centrifi": 83, "dataframemodel": [86, 87], "config": [86, 87, 108, 124, 126, 152, 163], "strict": [86, 87], "filter": [86, 87, 123, 132, 142, 144, 152], "add_missing_column": [86, 87], "coerc": [86, 87, 152], "df": [86, 87, 142, 143, 149, 151, 152, 163], "allow_empti": [86, 87], "fals": [86, 87, 144, 151, 152, 163], "columns_": [86, 87], "create_empti": [86, 87, 88], "geometri": [86, 88, 96, 97, 99, 103, 104, 105, 110, 113, 115, 117, 118, 119, 121, 123, 124, 126, 128, 129, 132, 133, 134, 135, 137, 138, 139, 140, 142, 147, 149, 150, 151, 154, 157, 158, 159, 163], "geoseri": [86, 88], "cr": [86, 88, 113, 123, 136, 147, 152, 158], "4326": [86, 88, 152], "landuseschema": [86, 89], "ensure_cr": [86, 90], "gdf": [86, 90, 102, 113, 119, 124, 126, 152], "validate_matrix": [86, 90], "validate_graph": [86, 90], "below": 91, "we": [92, 102, 121, 163, 165], "check": [92, 136, 152, 165, 166, 167, 171, 172], "exist": [92, 152, 176], "bug": 92, "enhanc": 92, "work": [92, 151, 166, 168, 171, 173, 176], "If": [92, 163, 166, 167, 168, 169, 171, 173, 174], "have": [92, 138, 143, 163, 165, 167, 170], "idea": 92, "extens": 92, "pleas": [92, 165], "file": [92, 113, 163, 166, 171], "new": [92, 151, 163], "so": [92, 102, 150, 176], "discuss": 92, "make": [92, 172, 176], "sure": [92, 172], "familiar": 92, "yourself": [92, 144], "layout": 92, "ani": [92, 97, 119, 121, 123, 124, 126, 151, 152, 158, 163], "major": 92, "At": [92, 170], "see": [92, 167, 168, 173], "get": [92, 102, 132, 144, 159, 169, 174, 176], "start": [92, 144, 149, 176], "setup": [92, 165], "environ": [92, 152, 165, 170, 175], "through": [92, 163], "checklist": 92, "done": 92, "everyth": [92, 167], "necessari": [92, 176], "effici": 92, "review": 92, "accept": 92, "chang": [92, 144, 166, 171], "wai": [92, 152, 160], "updat": [92, 170], "exampl": [92, 123, 124, 144, 159, 176], "directori": [92, 166, 171], "featur": [92, 120, 132, 135, 136, 138, 139, 140, 142, 143, 144, 147, 155, 157], "fix": [92, 142], "readm": 92, "md": 92, "anyth": 92, "ha": [92, 127, 144, 152], "involv": 92, "code": [92, 166, 171], "test": [92, 140, 144, 155, 165], "properli": 92, "comment": 92, "docstr": 92, "explain": [92, 144], "rational": 92, "behind": 92, "obviou": 92, "practic": 92, "librari": [92, 93, 94, 108, 152, 165, 166, 171, 176], "depend": [92, 152, 169, 174], "doubl": 92, "easi": [92, 176], "instal": [92, 170, 175, 176], "via": [92, 152], "pip": [92, 165, 169, 170, 173, 174, 175], "support": [92, 176], "python": [92, 165, 170, 173, 175], "3": [92, 96, 97, 99, 101, 102, 104, 105, 107, 108, 110, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 147, 149, 150, 151, 153, 154, 155, 158, 159, 160, 163, 165, 167, 172], "10": [92, 96, 97, 99, 101, 104, 105, 107, 108, 110, 113, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 132, 133, 134, 138, 140, 142, 143, 144, 147, 151, 152, 153, 154, 155, 158, 159, 163, 167, 172], "complic": 92, "most": [92, 124, 163], "like": 92, "won": 92, "merg": 92, "becaus": 92, "want": [92, 144], "add": [92, 107, 144, 169, 172, 174], "pyproject": [92, 169, 174], "toml": [92, 169, 174], "pass": 92, "dur": 92, "commit": 92, "back": 92, "shortli": 92, "except": [92, 113, 163], "mirror": 92, "come": 92, "red": [92, 151, 159, 163], "do": [92, 123, 152, 158], "best": [92, 151, 163], "address": 92, "error": [92, 152], "frequent": 93, "ask": [93, 171], "question": 93, "answer": 93, "what": [93, 152], "open": [93, 108, 113, 149, 176], "sorri": 93, "other": [93, 124, 126, 128, 158, 171], "were": [93, 136, 158], "some": [94, 124, 152], "import": [94, 96, 97, 99, 101, 102, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 132, 133, 134, 135, 136, 138, 140, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 163, 165], "about": [94, 171, 176], "contribut": [94, 176], "befor": 94, "submit": 94, "your": [94, 166, 169, 171, 174], "pull": 94, "request": 94, "document": [94, 165], "after": 94, "faq": [94, 176], "popul": [95, 108, 112, 124, 126, 144, 149, 150, 151, 152, 154, 163, 176], "servic": [95, 103, 108, 115, 124, 126, 132, 137, 139, 145, 150, 157, 162, 176], "1": [96, 97, 99, 101, 102, 104, 105, 107, 108, 110, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 147, 149, 150, 151, 153, 154, 155, 158, 159, 160, 163, 165, 169, 174], "pd": [96, 97, 99, 101, 102, 104, 105, 108, 110, 112, 113, 114, 115, 117, 118, 119, 121, 124, 126, 127, 128, 129, 132, 142, 143, 144, 149, 150, 151, 152, 155, 159, 160, 163, 165], "read_pickl": [96, 97, 99, 101, 102, 104, 105, 108, 110, 112, 114, 115, 117, 118, 119, 121, 124, 126, 127, 128, 129, 132, 144, 149, 150, 151, 155, 159, 160, 163], "data": [96, 97, 99, 101, 102, 104, 105, 108, 110, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 126, 127, 128, 129, 132, 133, 134, 140, 142, 144, 147, 149, 150, 151, 153, 154, 158, 159, 160, 176], "saint_petersburg": [96, 97, 99, 101, 102, 104, 105, 108, 110, 112, 114, 115, 117, 118, 119, 121, 124, 126, 127, 128, 129, 132, 159, 160], "pickl": [96, 97, 99, 101, 102, 104, 105, 108, 110, 112, 113, 114, 115, 117, 118, 119, 121, 124, 126, 127, 128, 129, 132, 144, 149, 150, 151, 155, 159, 160, 163], "site_area": [96, 97, 102, 104, 105, 110, 112, 117, 118, 123, 129, 144, 149, 150, 151, 152, 159, 163], "head": [96, 97, 99, 101, 102, 104, 105, 110, 115, 117, 118, 119, 121, 123, 124, 126, 128, 129, 132, 133, 134, 140, 144, 147, 149, 150, 151, 152, 153, 154, 158, 159, 160, 163], "polygon": [96, 97, 101, 102, 123, 132, 133, 134, 136, 138, 140, 147, 151, 152, 153, 154, 158, 159, 163], "349424": [96, 97, 101, 102, 138, 151, 159], "859": [96, 97, 101, 102, 138, 151, 159], "6631180": [96, 97, 101, 102, 138, 151, 159], "891": [96, 97, 101, 102, 138, 147, 151, 159], "751": [96, 97, 101, 102, 138, 151, 159], "6": [96, 97, 99, 101, 102, 108, 112, 118, 119, 120, 123, 126, 129, 132, 133, 134, 135, 138, 139, 140, 142, 143, 144, 147, 151, 153, 154, 155, 158, 159, 160, 163], "032316": [96, 97, 102, 104, 105, 110, 117, 118, 129, 151, 159], "352083": [96, 97, 101, 102, 138, 151, 159], "617": [96, 97, 101, 102, 138, 151, 159], "6633950": [96, 97, 101, 102, 138, 151, 159], "146": [96, 97, 101, 102, 138, 151, 159], "352240": [96, 97, 101, 102, 138, 151, 159], "448": [96, 97, 101, 102, 138, 147, 151, 154, 159, 163], "137101": [96, 97, 102, 104, 105, 110, 117, 118, 129, 151, 159], "088247": [96, 97, 102, 104, 105, 110, 117, 118, 129, 151, 159], "2": [96, 97, 99, 101, 102, 104, 105, 107, 108, 110, 112, 113, 115, 117, 118, 119, 120, 121, 123, 124, 126, 128, 129, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 147, 149, 150, 151, 153, 154, 155, 158, 159, 160, 163, 165, 166, 171], "346700": [96, 97, 101, 102, 138, 151, 159], "642": [96, 97, 101, 102, 123, 138, 151, 159], "6618453": [96, 97, 101, 102, 138, 151, 159], "176": [96, 97, 101, 102, 138, 151, 159, 163], "346681": [96, 97, 101, 102, 138, 151, 159], "107": [96, 97, 101, 102, 119, 120, 123, 138, 142, 144, 151, 159, 163], "95239": [96, 97, 102, 104, 105, 110, 117, 118, 129, 151, 159], "084434": [96, 97, 102, 104, 105, 110, 117, 118, 129, 151, 159], "109": [96, 102, 119, 126, 133, 136, 151, 158, 163], "347043": [96, 101, 102, 138], "363": [96, 101, 102, 138, 163], "6618261": [96, 101, 102, 138], "219": [96, 101, 102, 138], "347042": [96, 101, 102, 138], "608": [96, 101, 102, 138], "125919": [96, 102, 104, 105, 110, 117, 118, 129], "330984": [96, 102, 104, 105, 110, 117, 118, 129], "77": [96, 97, 108, 126, 144, 147, 151, 153, 163], "4": [96, 97, 99, 101, 102, 104, 105, 107, 108, 110, 112, 113, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 133, 134, 136, 138, 139, 140, 142, 143, 144, 147, 149, 151, 153, 154, 155, 158, 159, 160, 163, 165], "354879": [96, 101, 102, 138], "039": [96, 101, 102, 108, 138], "6618859": [96, 101, 102, 138], "116": [96, 97, 101, 102, 115, 119, 133, 134, 138, 151, 163], "354845": [96, 101, 102, 138], "405": [96, 101, 102, 138], "169860": [96, 102, 104, 105, 110, 117, 118, 129], "164494": [96, 102, 104, 105, 110, 117, 118, 129], "431": [96, 126], "from": [96, 97, 99, 101, 102, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 147, 149, 150, 151, 154, 155, 157, 158, 159, 160, 163, 165, 171, 176], "relat": [96, 110, 123, 139, 142, 147, 152, 155, 165, 176], "2025": [96, 97, 99, 108, 110, 115, 120, 123, 124, 126, 132, 133, 134, 135, 136, 140, 142, 144, 147, 151, 152, 153, 154, 155, 158, 159, 163], "09": [96, 97, 99, 108, 110, 115, 124, 126, 132, 136, 152, 159, 163], "19": [96, 97, 99, 110, 115, 123, 124, 126, 132, 133, 140, 142, 144, 147, 151, 152, 158, 159, 163], "17": [96, 97, 99, 108, 110, 115, 123, 124, 126, 132, 133, 136, 142, 144, 147, 151, 152, 153, 158, 159, 163], "13": [96, 108, 117, 119, 124, 132, 133, 136, 140, 144, 147, 151, 152, 163], "01": [96, 120, 123, 132, 136, 147, 153, 163], "194": [96, 163], "info": [96, 97, 99, 110, 115, 120, 123, 124, 126, 132, 133, 134, 135, 136, 140, 142, 144, 147, 152, 153, 155, 158, 159], "adjac": [96, 110, 139, 142, 147, 152, 155, 161], "_generate_adjacency_nod": [96, 110, 142, 147, 155, 159], "9": [96, 97, 102, 108, 110, 117, 119, 123, 124, 133, 136, 140, 143, 144, 147, 151, 152, 153, 155, 158, 159, 160, 163, 165], "node": [96, 110, 142, 147, 152, 155, 159], "202": [96, 163], "_generate_adjacency_edg": [96, 110, 142, 147, 155, 159], "14": [96, 104, 105, 108, 110, 117, 118, 119, 124, 133, 140, 142, 144, 147, 151, 152, 154, 155, 158, 159, 163], "edg": [96, 110, 142, 147, 152, 155, 159], "04": [96, 110, 135, 142, 144, 153, 163], "334": [96, 163], "success": [96, 110, 120, 124, 126, 134, 136, 142, 147, 152, 155, 159], "37": [96, 110, 120, 123, 142, 147, 152, 155, 158, 159, 163], "successfulli": [96, 110, 120, 136, 142, 147, 152, 155, 159, 169, 174], "9533": [96, 97, 99, 101, 102, 110, 159, 160], "30567": [96, 110, 159], "analysi": [96, 97, 99, 101, 102, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 132, 139, 160, 165, 176], "centrality_df": [96, 97], "degree_centr": 96, "population_norm": 96, "degree_centrality_norm": 96, "000420": 96, "000000": [96, 97, 99, 104, 105, 110, 115, 117, 118, 123, 127, 129, 133, 134, 144, 151, 152, 158, 159, 163], "086957": 96, "060606": 96, "000734": 96, "152174": 96, "106061": 96, "000839": 96, "003471": 96, "173913": 96, "124052": 96, "000629": 96, "002452": 96, "130435": 96, "092841": 96, "013723": 96, "132440": 96, "5": [96, 97, 99, 102, 104, 105, 107, 108, 110, 113, 117, 118, 119, 120, 121, 123, 124, 126, 128, 129, 132, 133, 134, 138, 139, 142, 143, 144, 147, 149, 151, 153, 154, 155, 158, 160, 163, 165], "join": [96, 97, 99, 104, 105, 110, 115, 117, 118, 119, 120, 121, 124, 126, 128, 129, 135, 136, 140, 142, 147, 152, 160], "plot": [96, 97, 99, 101, 102, 104, 105, 110, 115, 117, 118, 119, 121, 123, 124, 126, 128, 129, 132, 133, 134, 135, 136, 140, 142, 144, 151, 152, 153, 154, 155, 158, 159, 160, 163], "legend": [96, 97, 99, 101, 102, 104, 105, 110, 115, 117, 118, 119, 121, 123, 124, 126, 128, 129, 133, 134, 135, 140, 142, 144, 151, 152, 153, 155, 160, 163], "figsiz": [96, 97, 99, 102, 104, 105, 110, 115, 117, 118, 121, 123, 124, 126, 127, 128, 129, 132, 133, 134, 140, 142, 144, 153, 154, 155, 159], "8": [96, 97, 99, 102, 104, 105, 108, 110, 113, 115, 117, 118, 119, 121, 123, 124, 126, 127, 128, 129, 132, 133, 134, 136, 142, 143, 144, 147, 149, 151, 152, 153, 154, 155, 158, 160, 163], "set_axis_off": [96, 97, 99, 101, 102, 104, 105, 110, 115, 117, 118, 119, 121, 123, 124, 126, 128, 129, 132, 133, 134, 135, 140, 142, 152, 153, 154, 158, 159, 160], "capacity_prison": [97, 123, 151, 159], "count_prison": [97, 99, 128, 129, 159], "capacity_landfil": [97, 123, 151, 159], "count_landfil": [97, 99, 128, 129, 159], "capacity_plant_nurseri": [97, 123, 151, 159], "count_plant_nurseri": [97, 99, 128, 129, 159], "capacity_greenhouse_complex": [97, 123, 151, 159], "count_greenhouse_complex": [97, 99, 128, 129, 159], "capacity_warehous": [97, 123, 151, 159], "count_warehous": [97, 99, 128, 129, 159], "000": [97, 119, 121, 123, 159, 163], "099": [97, 133, 134, 151, 153, 154, 158, 159], "079912": [97, 159], "401072": [97, 159], "417018": [97, 159], "row": [97, 99, 120, 123, 127, 128, 129, 134, 138, 140, 142, 144, 149, 151, 152, 153, 158, 159, 160, 163], "137": [97, 120, 151, 159, 163], "accessibility_matrix_intermod": [97, 119, 121, 124, 126], "home": [97, 108, 119, 121, 123, 138, 151, 152, 158, 163], "vasilstar": [97, 119, 121, 123, 138, 152, 158, 163], "masterplan": [97, 119, 121, 123, 138, 152, 158, 163], "venv": [97, 119, 121, 123, 138, 143, 151, 152, 158, 163, 167, 168, 173], "lib": [97, 119, 121, 123, 138, 143, 151, 152, 158, 163], "python3": [97, 119, 121, 123, 138, 151, 152, 158, 163, 167, 168], "site": [97, 119, 121, 123, 138, 143, 151, 152, 158, 163], "io": [97, 119, 121, 123, 151, 152, 158, 163], "format": [97, 119, 121, 123, 151, 152, 158, 163], "py": [97, 119, 121, 123, 138, 143, 151, 152, 158, 163], "1458": [97, 119, 121, 123, 151, 152, 158, 163], "runtimewarn": [97, 119, 121, 123, 138, 151, 152, 158, 163], "overflow": [97, 119, 121, 123, 151, 152, 158, 163], "encount": [97, 119, 121, 123, 151, 152, 158, 163], "cast": [97, 119, 121, 123, 151, 152, 158, 163], "has_large_valu": [97, 119, 121, 123, 151, 152, 158, 163], "abs_val": [97, 119, 121, 123, 151, 152, 158, 163], "gt": [97, 112, 114, 119, 121, 123, 136, 142, 144, 151, 152, 158, 163], "1e6": [97, 119, 121, 123, 151, 152, 158, 163], "7": [97, 102, 108, 113, 119, 120, 123, 132, 133, 134, 136, 139, 140, 142, 143, 144, 147, 151, 153, 155, 158, 160, 163, 165], "9523": [97, 160], "9524": [97, 160], "9525": [97, 160], "9526": [97, 160], "9527": [97, 160], "9528": [97, 160], "9529": [97, 160], "9530": [97, 160], "9531": [97, 160], "9532": [97, 160], "0000": [97, 119, 123, 151, 158, 163], "58": [97, 115, 119, 120, 135, 136, 140, 144, 147, 151, 152, 155, 163], "15625": [97, 123, 151], "74": [97, 119, 147, 151, 152, 163], "187500": [97, 151, 152], "76": [97, 147, 151, 152, 163], "937500": [97, 119, 151, 152, 158], "66": [97, 119, 135, 136, 143, 147, 151, 152, 154, 163], "8125": [97, 119, 151, 158, 163], "80": [97, 119, 120, 124, 144, 147, 151, 158, 163], "5000": [97, 119, 151, 155, 158, 163], "92": [97, 120, 136, 147, 151, 163], "18750": [97, 151], "56250": [97, 151, 152], "65": [97, 119, 132, 133, 136, 140, 144, 147, 151, 152, 163], "68750": [97, 151, 152], "106": [97, 102, 119, 151], "875": [97, 119, 121, 123, 158, 163], "70": [97, 119, 120, 143, 144, 147, 151, 158, 163, 176], "72": [97, 123, 147, 151, 152, 163], "1875": [97, 119, 123, 151, 158, 163], "73": [97, 119, 147, 151, 152, 163], "3125": [97, 119, 151, 158, 163], "2500": [97, 119, 151, 158, 163], "75": [97, 119, 133, 147, 151, 152, 158, 163], "83": [97, 108, 119, 123, 133, 147, 151, 158, 163], "56": [97, 120, 123, 124, 134, 136, 147, 151, 152, 163], "00000": [97, 123, 151, 163], "99": [97, 144, 147, 151, 158, 163], "687500": [97, 151, 152, 163], "102": [97, 119, 121, 151, 158, 163], "375000": [97, 151, 152, 163], "88": [97, 119, 147, 151, 153, 158, 163], "1250": [97, 119, 151, 158, 163], "113": [97, 119, 123, 151, 163], "43750": [97, 151, 163], "89": [97, 133, 144, 147, 151], "96": [97, 144, 147, 151, 163], "250": [97, 119, 142, 147, 151, 152, 158, 163], "6250": [97, 119, 123, 151, 158, 163], "67": [97, 120, 147, 151, 153, 163], "7500": [97, 119, 151, 158, 163], "68": [97, 140, 147, 151, 152, 154, 163], "9375": [97, 119, 158, 163], "8750": [97, 119, 151, 158, 163], "69": [97, 104, 105, 117, 118, 144, 147, 151, 163], "71": [97, 108, 119, 147, 151, 152, 153, 158, 163], "78": [97, 147, 151, 152, 158, 163], "625": [97, 158], "50000": [97, 123, 151, 163], "347656": [97, 151], "118": [97, 151, 163], "06250": [97, 151, 163], "64": [97, 120, 147, 151, 163], "63": [97, 119, 129, 136, 147, 151, 152, 163], "134": [97, 151, 158], "500": [97, 119, 121, 123, 147, 163], "108": [97, 102, 151, 163], "110": [97, 107, 119, 147, 151, 158, 163], "4375": [97, 104, 105, 117, 118, 119, 151, 158, 163], "3750": [97, 119, 123, 151, 158], "111": [97, 119, 151, 163], "6875": [97, 151, 158, 163], "5625": [97, 119, 151, 158, 163], "112": [97, 108, 119, 120, 123, 151, 158, 163], "121": [97, 108, 119, 151, 152, 163], "375": [97, 123, 154, 158, 163], "25000": [97, 151, 163], "90": [97, 119, 127, 147, 151, 158, 163], "12500": [97, 151, 163], "31250": [97, 151, 163], "0625": [97, 119, 151, 158, 163], "114": [97, 119, 123, 136, 144, 151, 152, 158, 163], "115": [97, 119, 123, 124, 151, 163], "124": [97, 119, 121, 151, 152, 158, 163], "125": [97, 119, 132, 163], "82": [97, 119, 147, 151, 163], "85": [97, 119, 147, 151, 152, 155, 163], "125000": [97, 151, 152], "35": [97, 124, 135, 136, 140, 142, 147, 151, 152, 158, 163], "53125": [97, 151], "45": [97, 123, 134, 136, 142, 143, 144, 147, 151, 152, 153, 163], "44": [97, 108, 123, 126, 136, 147, 151, 152, 163], "28125": [97, 151, 163], "100": [97, 99, 101, 102, 107, 110, 120, 123, 124, 126, 132, 135, 136, 140, 142, 144, 147, 151, 152, 153, 155, 163], "103": [97, 119, 144, 151, 158, 163], "104": [97, 151, 163], "105": [97, 133, 151, 163], "15": [97, 108, 117, 119, 120, 123, 124, 133, 134, 136, 140, 142, 144, 147, 149, 150, 151, 152, 153, 155, 158, 163], "33": [97, 110, 115, 120, 123, 124, 142, 147, 151, 152, 163, 171], "127": [97, 108, 158, 163], "divers": [97, 103, 123, 139, 176], "shannon": [97, 98], "shannon_divers": [97, 99], "23": [97, 99, 120, 123, 144, 147, 151, 152, 158, 163], "calcul": [97, 99, 108, 120, 134, 135, 136, 139, 140, 142, 144, 147, 153, 158, 176], "00": [97, 99, 101, 102, 110, 119, 120, 123, 124, 132, 135, 136, 140, 142, 144, 147, 151, 152, 153, 155, 163], "05": [97, 99, 113, 134, 136, 140, 143, 144, 152, 153], "lt": [97, 99, 101, 102, 110, 112, 114, 120, 123, 124, 132, 135, 136, 140, 142, 144, 147, 151, 152, 153, 155, 163], "1903": 97, "23it": 97, "connect": [97, 108, 122, 123, 152, 158, 176], "densiti": [97, 106, 108, 117, 120, 123, 130, 152], "009721": [97, 121], "170247": 97, "009816": [97, 121], "693147": [97, 99], "000015": [97, 120, 129], "256964": 97, "007360": [97, 121], "099913": 97, "007220": [97, 121], "095758": 97, "008065": [97, 121, 127], "039721": [97, 99], "000024": [97, 120, 129], "247039": 97, "vmin": [97, 101, 110, 124, 126, 127, 134, 142, 152], "vmax": [97, 101, 110, 124, 126, 127, 129, 134, 142, 152], "gpd": [99, 102, 113, 119, 123, 133, 134, 135, 136, 138, 140, 142, 147, 149, 150, 153, 154, 158], "diversity_df": 99, "59": [99, 119, 120, 123, 147, 152, 153, 163], "971": [99, 154, 163], "1885": 99, "73it": 99, "count_school": [99, 108, 128, 129], "count_kindergarten": [99, 108, 128, 129], "count_hospit": [99, 128, 129], "count_polyclin": [99, 128, 129], "count_pitch": [99, 128, 129], "count_swimming_pool": [99, 128, 129], "count_theatr": [99, 128, 129], "count_museum": [99, 128, 129], "count_cinema": [99, 128, 129], "count_mal": [99, 128], "count_bus_stop": [99, 128, 129], "count_pier": [99, 128, 129], "count_animal_shelt": [99, 128, 129], "count": [99, 107, 129, 130, 151, 163], "62": [99, 147, 163], "shape": [100, 158], "size": 100, "calculate_aspect_ratio": 101, "aspect_ratio_gdf": 101, "29830": 101, "10it": 101, "aspect_ratio": [101, 147, 153], "157": [101, 132, 163], "726300": 101, "734174": 101, "114986": 101, "640961": 101, "423429": 101, "matplotlib": [102, 127, 142, 144, 151, 155, 163, 165], "pyplot": [102, 127, 142, 144, 151, 155, 163], "plt": [102, 127, 142, 144, 151, 155, 163], "def": [102, 113, 119, 144, 149, 151, 155, 163], "c": [102, 119, 123, 149, 150, 151, 163, 171], "n": [102, 140, 152], "len": [102, 107, 113, 127, 136, 144, 159, 163], "fig": 102, "ax": [102, 115, 119, 124, 126, 132, 136, 142, 152, 159], "subplot": 102, "col": 102, "zip": [102, 144], "set_titl": [102, 119, 124, 132, 142, 159], "tight_layout": [102, 127, 142, 144], "show": [102, 127, 142, 144, 151, 155, 163], "calculate_area_length": 102, "area_length_gdf": 102, "site_length": 102, "386234": 102, "2193": 102, "855496": 102, "1508": [102, 152], "777966": 102, "2248": 102, "336940": 102, "2001": [102, 163], "684796": 102, "calculate_centerlin": 102, "centerlines_gdf": 102, "20": [102, 107, 108, 133, 135, 147, 151, 152, 153, 154, 158, 163], "467": [102, 134], "55it": [102, 120], "centerline_length": [102, 153], "420355": 102, "992589": 102, "462": 102, "121387": 102, "913": 102, "262413": 102, "659": [102, 123], "375702": 102, "calculate_centroid": 102, "centroids_gdf": 102, "y": [102, 143, 144, 147, 155, 166, 167, 170], "349423": 102, "315419": 102, "631181e": 102, "06": [102, 123, 133, 135, 144, 147, 152, 153, 163], "351918": 102, "279458": 102, "633874e": 102, "346828": 102, "961266": 102, "618483e": 102, "347066": 102, "360124": 102, "618306e": 102, "355059": 102, "964903": 102, "618810e": 102, "obvious": 102, "two": [102, 152], "beauti": 102, "gradient": 102, "calculate_radius": 102, "radiuses_gdf": 102, "42059": 102, "87it": 102, "03": [102, 120, 133, 134, 136, 140, 147, 152, 154, 158], "2723": 102, "84it": 102, "outer_radiu": [102, 153], "inner_radiu": [102, 153], "596071": 102, "010049": 102, "463": [102, 163], "873510": 102, "748374": 102, "251": 102, "353455": 102, "237627": 102, "343": [102, 108], "209085": 102, "514588": 102, "350": [102, 120, 123, 147, 163], "224510": 102, "143": [102, 158, 163], "134306": 102, "12": [102, 108, 117, 119, 120, 123, 124, 126, 135, 136, 142, 143, 144, 147, 151, 152, 158, 163, 172], "indic": [103, 109, 111, 117, 118, 129, 139, 141, 147, 152, 159], "morphotyp": [103, 139, 176], "network": [103, 108, 139, 152, 160, 165, 176], "provis": [103, 139, 148, 163, 176], "vacant": [103, 139, 176], "density_df": [104, 105, 117, 118, 129, 152], "footprint_area": [104, 105, 112, 117, 118, 133, 144, 151, 152, 154, 155, 163], "build_floor_area": [104, 105, 112, 117, 118, 123, 133, 144, 151, 152, 154, 155, 163], "living_area": [104, 105, 112, 117, 118, 123, 144, 151, 152, 154, 155, 163], "non_living_area": [104, 105, 112, 117, 118, 144, 152, 154], "fsi": [104, 105, 117, 118, 142, 152], "gsi": [104, 105, 117, 118, 142, 152], "mxi": [104, 105, 117, 118, 142, 152], "l": [104, 105, 117, 118, 140, 147, 152], "osr": [104, 105, 117, 118, 152], "share_liv": [104, 105, 117, 118, 123, 152], "share_non_liv": [104, 105, 117, 118, 152], "nan": [104, 105, 117, 118, 124, 126, 152, 163], "inf": [104, 105, 117, 118, 152], "018103": [104, 105, 117, 118], "000503": [104, 105, 117, 118], "1985": [104, 105, 117, 118], "451134": [104, 105, 117, 118], "5853": [104, 105, 117, 118], "863274": [104, 105, 117, 118], "6106": [104, 105, 117, 118], "759644": [104, 105, 117, 118], "4197": [104, 105, 117, 118], "188633": [104, 105, 117, 118], "1909": [104, 105, 117, 118], "571011": [104, 105, 117, 118], "064120": [104, 105, 117, 118], "061465": [104, 105, 117, 118], "687302": [104, 105, 117, 118], "043202": [104, 105, 117, 118], "637095": [104, 105, 117, 118], "716995": [104, 105, 117, 118], "326207": [104, 105, 117, 118], "4214": [104, 105, 117, 118], "828165": [104, 105, 117, 118], "483259": [104, 105, 117, 118], "3033": [104, 105, 117, 118], "795607": [104, 105, 117, 118], "1341": [104, 105, 117, 118, 123], "687653": [104, 105, 117, 118], "034748": [104, 105, 117, 118], "033472": [104, 105, 117, 118], "693362": [104, 105, 117, 118], "038117": [104, 105, 117, 118], "27": [104, 105, 117, 118, 144, 147, 151, 153, 158, 163], "815100": [104, 105, 117, 118], "719791": [104, 105, 117, 118], "318326": [104, 105, 117, 118], "13392": [104, 105, 117, 118], "846325": [104, 105, 117, 118], "31242": [104, 105, 117, 118], "324144": [104, 105, 117, 118], "20860": [104, 105, 117, 118], "965881": [104, 105, 117, 118], "10381": [104, 105, 117, 118], "358263": [104, 105, 117, 118], "183930": [104, 105, 117, 118], "078846": [104, 105, 117, 118], "667715": [104, 105, 117, 118], "332762": [104, 105, 117, 118], "008184": [104, 105, 117, 118], "557620": [104, 105, 117, 118], "775142": [104, 105, 117, 118], "development_df": 105, "socio": 106, "econom": 106, "socio_econom": [107, 108], "socioeconomicaggreg": 107, "aggreg": [107, 108, 137, 139, 176], "generalind": 107, "demographicind": 107, "settlementind": 107, "transportind": 107, "economicind": 107, "ecologicalind": 107, "engineeringind": 107, "socialcountind": 107, "e": [107, 113, 143, 144, 169, 174, 176], "meta": [107, 143], "aggregat": 107, "print": [107, 113, 143, 144], "f": [107, 108, 113, 124, 126, 143, 144, 147, 149, 150, 151, 159, 163], "\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e": 107, "\u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u0432": 107, "\u0434\u043b\u044f": 107, "\u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438": 107, "87": [107, 119, 147], "\u043e\u0446\u0435\u043d\u043a\u0438": 107, "46": [107, 120, 123, 134, 135, 136, 142, 147, 151, 155, 163], "39": [107, 112, 114, 123, 124, 132, 135, 136, 144, 147, 151, 152, 153, 158, 163], "child_value_befor": 107, "child_value_aft": 107, "parent_value_befor": 107, "parent_value_aft": 107, "read": 108, "spatial": [108, 152, 176], "layer": [108, 138, 152, 176], "graph_driv": [108, 123], "rb": [108, 113], "acc_mx": [108, 151, 152, 158, 165], "accessibility_matrix_dr": 108, "calculate_general_ind": 108, "general_ind": 108, "km2": 108, "1392": 108, "283137517296": 108, "3640140273948924": 108, "calculate_demographic_ind": 108, "demographic_ind": 108, "5477076": 108, "peopl": 108, "3933": 108, "880869782465": 108, "within": [108, 126, 176], "calculate_transport_ind": 108, "transport_ind": 108, "road": [108, 120, 136, 152], "km": 108, "875121375198045": 108, "49947916666666664": 108, "length": [108, 132, 147, 153], "12356": 108, "681834107552": 108, "fuel": [108, 127, 149, 151, 163], "station": 108, "505": 108, "averag": 108, "h": 108, "0911865234375": 108, "railwai": [108, 136, 152], "stop": 108, "1654052734375": 108, "calculate_engineering_ind": 108, "tmp_gdf": 108, "renam": [108, 123, 124, 126, 134, 149, 150, 151, 152, 154, 163], "count_treatment_facil": 108, "count_water_intak": 108, "count_hairdress": 108, "count_gas_distribut": 108, "count_fuel": 108, "count_power_pl": 108, "count_park": 108, "count_reservoir": 108, "engineering_ind": 108, "power": 108, "plant": 108, "water": [108, 136, 152], "intak": 108, "1541": [108, 163], "treatment": 108, "facil": 108, "880": [108, 147, 152, 159], "reservoir": [108, 152], "14255": 108, "ga": 108, "distribut": [108, 123], "3876": 108, "infrastructur": 108, "21057": 108, "calculate_social_count_ind": 108, "sc_indic": 108, "missing_sc_ind": 108, "30": [108, 120, 126, 136, 142, 144, 147, 151, 152, 158, 163], "037": 108, "warn": [108, 113, 123, 124, 135, 136, 138, 143, 144, 152, 154, 158], "social_count": 108, "count_colleg": 108, "miss": [108, 144], "skip": [108, 152], "038": 108, "count_extracurricular": 108, "count_ambul": 108, "count_special_med": 108, "040": 108, "count_preventive_med": 108, "041": [108, 138], "count_gym": 108, "count_outdoor_sport": 108, "042": 108, "count_stadium": 108, "count_orphanag": 108, "044": 108, "count_nursing_hom": 108, "count_social_service_cent": 108, "045": 108, "count_librari": 108, "046": 108, "count_cultural_cent": 108, "047": 108, "count_concert_hal": 108, "count_ice_arena": 108, "048": [108, 138], "count_eco_trail": 108, "count_fire_st": 108, "051": 108, "count_tourist_bas": 108, "052": 108, "count_cat": 108, "kindergarten": [108, 124, 127, 149, 150, 151, 163], "school": [108, 124, 127, 133, 149, 150, 151, 152, 154, 163], "226": [108, 152, 163], "hospit": [108, 127, 149, 151, 163], "polyclin": [108, 127, 149, 150, 151, 163], "252": [108, 134, 152, 158], "sanatorium": [108, 127, 149, 151, 163], "pharmaci": [108, 127, 149, 150, 151, 163], "2176": 108, "swim": 108, "pool": 108, "post": [108, 127, 149, 150, 151, 163], "324": [108, 163], "bank": [108, 127, 149, 151, 163], "995": 108, "multifunct": 108, "57": [108, 120, 135, 147, 152, 163], "museum": [108, 127, 149, 151, 163], "264": 108, "theatr": [108, 127, 149, 151, 163], "cinema": [108, 127, 149, 151, 163], "mall": [108, 127, 149, 151, 163], "273": [108, 151, 163], "park": [108, 126, 127, 149, 151, 163], "beach": [108, 127], "91": [108, 123, 147, 152, 158, 163], "polic": [108, 127, 149, 151, 163], "hotel": [108, 127, 151, 163], "729": 108, "hostel": [108, 127], "195": [108, 132, 136], "colleg": 108, "extracurricular": 108, "ambul": 108, "medic": 108, "prevent": 108, "gym": 108, "outdoor": 108, "sport": 108, "stadium": 108, "orphanag": 108, "nurs": 108, "cultur": 108, "concert": 108, "hall": 108, "ic": 108, "arena": 108, "eco": 108, "trail": 108, "fire": 108, "tourist": 108, "cater": 108, "calculate_social_provision_ind": 108, "sp_indic": 108, "missing_sp_ind": 108, "social_provis": 108, "16": [108, 120, 123, 124, 127, 132, 133, 136, 140, 142, 144, 147, 151, 152, 155, 158, 159, 163], "138": [108, 119, 121, 163], "169": 108, "187": 108, "special_med": 108, "188": [108, 124, 163], "preventive_med": 108, "206": [108, 138, 163], "223": [108, 163], "outdoor_sport": 108, "224": [108, 123, 163], "24": [108, 119, 123, 136, 147, 151, 152, 153, 158, 163], "capacity_stadium": [108, 163], "225": [108, 144, 163], "capacity_nursing_hom": 108, "social_service_cent": 108, "274": [108, 163], "capacity_librari": 108, "309": 108, "cultural_cent": 108, "325": 108, "concert_hal": 108, "326": [108, 163], "ice_arena": 108, "373": [108, 163], "eco_trail": 108, "374": 108, "fire_st": 108, "419": [108, 163], "tourist_bas": 108, "9810360465116279": 108, "04035574866325315": 108, "19087287708999667": 108, "11763323905314495": 108, "6822466367713005": 108, "017770732503950257": 108, "7996120492481386": 108, "9742653088451105": 108, "016805370157151195": 108, "049796142011741075": 108, "6625228014999396": 108, "09557373692721118": 108, "evalu": [109, 123, 144, 151, 163, 176], "36": [110, 120, 124, 132, 133, 144, 147, 151, 152, 163], "960": [110, 147], "966": [110, 123], "986": 110, "land_use_colloc": 110, "collocation_df": 110, "75it": 110, "512737": 110, "485577": 110, "cmap": [110, 124, 126, 127, 133, 134, 142, 152, 153, 154], "rdylgn": [110, 124, 126, 127, 133, 134, 152, 153, 154], "colloc": [111, 130], "share": [111, 112, 125, 134, 152], "similar": 111, "calculate_land_use_shar": [112, 114], "34010052615024466": [112, 114], "023913501244647768": [112, 114], "33809719535789357": [112, 114], "1097708471465708": [112, 114], "10303989875606999": [112, 114], "027192309702219076": [112, 114], "05770759144106809": [112, 114], "calculate_land_use_ind": 112, "sum": [112, 149, 152, 163], "1392035129": 112, "8417625": 112, "1194492543": 112, "3084064": 112, "482374779": 112, "73374605": 112, "745788058": 112, "5010996": 112, "448704484": 112, "80730665": 112, "24859601": 112, "o": [113, 120, 136, 144, 149], "xgboost": [113, 143], "xgbclassifi": [113, 143], "lightgbm": [113, 143], "lgbmclassifi": [113, 143], "ensembl": [113, 143], "randomforestclassifi": [113, 143], "histgradientboostingclassifi": [113, 143], "spatialclassifi": 113, "machine_learn": [113, 120, 135, 136, 140, 142, 143, 144, 153, 155], "vote": [113, 143], "classification_strategi": [113, 143], "filterwarn": 113, "ignor": [113, 128, 144], "pathlib": [113, 149], "load_gdf": 113, "root": 113, "pattern": 113, "pkl": [113, 142], "target_cr": 113, "\u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442": 113, "\u044b": 113, "\u0438\u0437": [113, 143], "\u0444\u0430\u0439\u043b\u043e\u0432": 113, "\u0435\u0441\u043b\u0438": 113, "\u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442": 113, "\u043d\u0430": [113, 143], "\u043e\u0434\u0438\u043d": 113, "\u0444\u0430\u0439\u043b": 113, "\u0447\u0438\u0442\u0430\u0435\u043c": 113, "\u0435\u0433\u043e": 113, "\u0438": [113, 143, 151, 163], "\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c": 113, "\u0441\u043f\u0438\u0441\u043e\u043a": 113, "\u043f\u0430\u043f\u043a\u0430": 113, "\u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e": 113, "\u0438\u0449\u0435\u043c": 113, "\u043f\u043e": [113, 142], "\u043c\u0430\u0441\u043a\u0435": 113, "\u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f": 113, "\u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c": 113, "\u0441\u0442\u043e\u043b\u0431\u0446\u044b": 113, "citi": [113, 152, 176], "countri": 113, "\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b": 113, "\u043f\u0443\u0442\u0435\u0439": 113, "\u043f\u0443\u0442\u044c": 113, "\u043a": 113, "\u0444\u0430\u0439\u043b\u0443": 113, "\u0438\u043b\u0438": 113, "\u043f\u0430\u043f\u043a\u0435": 113, "\u043c\u0430\u0441\u043a\u0430": 113, "\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e": 113, "\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f": 113, "\u0442\u043e\u043b\u044c\u043a\u043e": 113, "\u0443\u043a\u0430\u0437\u0430\u043d": 113, "\u043f\u0440\u0438\u0432\u043e\u0434\u0438\u043c": 113, "\u0432\u0441\u0435": 113, "\u0433\u0435\u043e\u0434\u0430\u043d\u043d\u044b\u0435": 113, "\u044d\u0442\u043e\u043c\u0443": 113, "p": 113, "_ensure_gdf": 113, "obj": 113, "\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442": 113, "\u043e\u0431\u044a\u0435\u043a\u0442": 113, "\u0432": [113, 142, 143, 151, 163], "\u044d\u0442\u043e": 113, "\u0441": [113, 151, 163], "\u043a\u043e\u043b\u043e\u043d\u043a\u043e\u0439": 113, "isinst": [113, 163], "getattr": 113, "_infer_city_countri": 113, "fp": 113, "\u043e\u0436\u0438\u0434\u0430\u0435\u043c": 113, "name": [113, 142, 143, 144, 149, 151, 155, 163], "els": [113, 149], "parent": 113, "\u0441\u043e\u0431\u0435\u0440\u0451\u043c": 113, "is_fil": 113, "suffix": 113, "lower": [113, 144, 155], "elif": [113, 149, 151, 163], "is_dir": 113, "sort": [113, 144, 152], "rglob": 113, "try": [113, 158, 163], "\u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u044e": 113, "continu": [113, 163], "k": 113, "item": [113, 149, 150, 151, 163], "gi": 113, "copi": [113, 142, 149, 150, 151, 152, 155, 163], "isna": 113, "_": [113, 123, 124, 144, 152], "to_cr": [113, 123, 136, 147, 152], "set_cr": 113, "append": [113, 120, 123], "\u043d\u0435": [113, 142], "stem": 113, "merge_dict": 113, "russia": 113, "\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f": 113, "\u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435": 113, "base_param": [113, 143], "n_job": [113, 143], "cpu": 113, "max": [113, 124, 142, 152], "min": [113, 142, 163], "cpu_count": 113, "rf": [113, 143], "n_estim": [113, 143, 144], "120": [113, 119, 124, 147, 152, 163], "\u0431\u044b\u043b\u043e": 113, "200": [113, 120, 143, 147, 151, 163], "max_depth": [113, 124, 143, 144], "class_weight": [113, 143], "balanc": [113, 143, 176], "max_sampl": 113, "25": [113, 119, 143, 147, 149, 151, 152, 154, 163], "\u0431\u044d\u0433\u0433\u0438\u043d\u0433": 113, "\u043f\u043e\u0434\u0432\u044b\u0431\u043e\u0440\u043a\u0435": 113, "min_samples_leaf": 113, "\u0441\u0442\u0430\u0431\u0438\u043b\u0438\u0437\u0430\u0446\u0438\u044f": 113, "\u043c\u0435\u043d\u044c\u0448\u0435": 113, "\u0443\u0437\u043b\u043e\u0432": 113, "xgb": [113, 143], "150": [113, 147, 151, 163], "learning_r": [113, 120, 142, 143], "subsampl": 113, "\u0441\u0442\u0430\u0445\u0430\u0441\u0442\u0438\u0447\u043d\u043e\u0441\u0442\u044c": 113, "colsample_bytre": 113, "tree_method": 113, "hist": 113, "\u043f\u0430\u043c\u044f\u0442\u044c": 113, "\u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c": 113, "\u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442": 113, "\u0441\u0442\u0435\u0440\u043b\u0438": 113, "lgb": [113, 143], "num_thread": 113, "\u0443": 113, "\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440": 113, "\u0434\u0440\u0443\u0433\u043e\u0435": 113, "\u0438\u043c\u044f": 113, "hgb": [113, 143], "max_it": [113, 143], "soft": [113, 143], "classifi": [113, 120, 135, 136, 140], "1000": [113, 147, 149, 150, 151, 163], "score": [113, 143], "result": [113, 139, 149, 169, 171, 174], "land_use_similar": 115, "similarity_df": 115, "32": [115, 123, 144, 147, 151, 152, 163], "754": [115, 133, 136, 152], "_preprocess_and_valid": 115, "29": [115, 119, 124, 126, 140, 142, 147, 151, 152, 154, 158, 163], "preprocess": [115, 120, 133, 135, 136, 139, 140, 142, 147, 153, 154, 155, 176], "valid": [115, 123, 128, 143], "input": [115, 123, 133, 144], "38": [115, 120, 123, 133, 142, 144, 147, 151, 152, 153, 158, 163], "60": [115, 127, 143, 147, 151, 163], "81": [115, 120, 123, 132, 144, 147, 151, 163], "probabl": [115, 140, 143, 158], "097129": 115, "258199": 115, "154303": 115, "166667": [115, 120], "163299": 115, "158610": 115, "105409": 115, "149071": 115, "color": [115, 124, 126, 132, 144, 151, 152, 159, 163], "ddd": [115, 124, 126, 132, 152], "spacematrix": [116, 176], "strelka": 116, "cluster": [117, 152, 176], "spacematrix_df": [117, 152], "clusters_df": 117, "everi": 117, "label": [117, 120, 127, 144, 151, 155, 163], "number": [117, 151, 163], "describ": 117, "median": [117, 144], "each": [117, 124, 152], "l_interpret": [117, 152], "fsi_interpret": [117, 152], "mxi_interpret": [117, 152], "657367": 117, "758933": 117, "000592": 117, "222716": 117, "096095": 117, "420762": 117, "mix": 117, "034454": 117, "080210": 117, "685619": 117, "521034": 117, "601516": 117, "128436": 117, "079844": 117, "698272": 117, "strelka_df": [118, 152], "plot_access": 119, "accessibility_df": [119, 121], "__name__": 119, "certifi": 119, "classic": 119, "median_access": [119, 160], "med_acc_df": 119, "123": [119, 133, 151, 158], "max_access": 119, "max_acc_df": 119, "290": [119, 147, 163], "285": [119, 123, 138, 163], "50": [119, 123, 143, 144, 147, 149, 151, 153, 158, 163], "328": [119, 126, 134], "331": [119, 123, 138, 163], "319": [119, 163], "area_access": [119, 152], "area_acc_df": 119, "846517": 119, "763378": 119, "138607": 119, "61": [119, 126, 128, 144, 147, 151, 163], "845134": 119, "576284": 119, "mean_acc_df": [119, 165], "101": [119, 120, 121, 163], "135": [119, 121, 151, 163], "relative_access": 119, "block_id": [119, 132, 151, 155, 159, 163], "rel_acc_df": 119, "031250": [119, 158], "79": [119, 147, 158, 163], "593750": [119, 152], "312500": 119, "109375": [119, 152, 163], "land_use_access": 119, "lu_acc_df": 119, "land_use_accessibility_matrix": 119, "lu_acc_mx": 119, "93": [119, 147, 163], "750": [119, 123, 147, 152, 158], "84": [119, 144, 147, 158, 163], "129": [119, 120], "119": [119, 152, 163], "136": [119, 158, 163], "149": [119, 123, 133, 134, 153, 158, 163], "94": [119, 147, 158, 163], "128": [119, 120, 155, 163], "140": [119, 147, 151, 163], "follow": [120, 152, 163, 169, 171, 172, 174, 176], "osmnx": [120, 123, 152], "ox": [120, 123, 152], "tqdm": [120, 149, 151, 163], "pp": 120, "folder_path": 120, "filenam": 120, "listdir": [120, 149], "desc": 120, "file_path": 120, "g_nx": 120, "load_graphml": 120, "184": [120, 152, 163], "21it": 120, "122": [120, 147, 158, 163], "13it": [120, 135], "49": [120, 136, 140, 142, 144, 147, 151, 152, 163], "54": [120, 134, 147, 151, 155, 163], "34it": 120, "catboost": [120, 165], "networkclassifi": 120, "iter": [120, 143, 150, 163, 176], "depth": [120, 124, 143, 152], "prepare_train": 120, "08": [120, 123, 132, 133, 152, 153], "22": [120, 124, 132, 133, 140, 142, 144, 147, 151, 152, 154, 163], "47": [120, 123, 144, 147, 151, 153, 163], "286": [120, 133, 163], "_get_features_df": 120, "355": [120, 132, 163], "02": [120, 140, 152, 153], "870": [120, 147, 163], "18it": 120, "426": [120, 152], "43": [120, 123, 124, 134, 136, 147, 151, 152, 153, 158, 159, 163], "built": [120, 176], "7887323943661971": 120, "artifact": [120, 143], "689": [120, 163], "52it": 120, "847": 120, "15it": 120, "842": [120, 147], "avg_degre": 120, "leaf_nodes_proport": 120, "link_dens": 120, "avg_clust": 120, "diamet": 120, "assort": 120, "avg_near_neighbors_dist": 120, "avg_edge_length": 120, "ratio_nodes_to_link_length": 120, "link_length_entropi": 120, "632479": 120, "230769": 120, "000019": 120, "044634": 120, "007521": 120, "031225": 120, "97": [120, 144, 147, 154, 158], "796244": 120, "201": [120, 152, 163], "398576": 120, "003772": 120, "379788": 120, "966451": 120, "008857": 120, "024693": 120, "667722": 120, "232595": 120, "051160": 120, "004228": 120, "53": [120, 123, 133, 136, 147, 151, 153, 163], "027810": 120, "161861": 120, "166": [120, 163], "624082": 120, "004499": 120, "567573": 120, "978913": 120, "009246": 120, "011841": 120, "127436": 120, "103448": 120, "000031": [120, 144], "034533": 120, "004696": 120, "165620": 120, "797600": 120, "164": [120, 133], "138572": 120, "003896": 120, "831230": 120, "927734": 120, "038700": 120, "033567": 120, "868026": 120, "162554": 120, "000045": 120, "036892": 120, "001539": 120, "119530": 120, "962786": 120, "139": [120, 163], "840803": 120, "004987": 120, "061517": 120, "958196": 120, "021080": 120, "020724": 120, "950000": 120, "000035": 120, "025000": 120, "024790": 120, "229978": 120, "783917": 120, "197": [120, 123, 152], "933830": 120, "003425": 120, "096735": 120, "624834": 120, "051260": 120, "323906": 120, "508475": 120, "293785": 120, "000051": 120, "022599": 120, "014253": 120, "26": [120, 133, 134, 144, 147, 151, 152, 158, 163], "112127": 120, "816268": 120, "970944": 120, "006134": 120, "145329": 120, "549521": 120, "041179": 120, "409300": 120, "351": [120, 163], "631579": 120, "175439": 120, "000061": 120, "093567": 120, "023288": 120, "046066": 120, "331983": 120, "133": [120, 163], "376494": 120, "005698": 120, "058882": 120, "385718": 120, "204624": 120, "409657": 120, "352": 120, "862745": 120, "156863": 120, "000042": 120, "008170": 120, "028344": 120, "046019": 120, "848609": 120, "181": [120, 147], "909175": 120, "003841": 120, "256689": 120, "360941": 120, "066698": 120, "572360": 120, "353": [120, 163], "666667": 120, "140351": [120, 144], "084795": 120, "047619": 120, "21": [120, 123, 124, 132, 135, 136, 140, 144, 147, 151, 152, 154, 155, 158, 163], "002749": 120, "967290": 120, "272": [120, 163], "012219": 120, "002757": 120, "704535": 120, "207030": 120, "652064": 120, "140906": 120, "354": [120, 123], "774566": 120, "202312": 120, "000028": 120, "026975": 120, "016131": 120, "111970": 120, "533420": 120, "199": [120, 151, 163], "022313": 120, "003622": 120, "868175": 120, "514445": 120, "107683": 120, "377872": 120, "actual": 121, "calculate_connect": 121, "connectivity_df": 121, "classif": [122, 136, 137, 139, 141], "read_parquet": [123, 133, 134, 135, 136, 140, 142, 149, 150, 153, 154, 158], "parquet": [123, 133, 134, 135, 136, 140, 142, 149, 150, 153, 154, 158], "is_liv": [123, 143, 144, 154], "living_demand": 123, "business_area": 123, "share_busi": 123, "capacity_bus_st": [123, 151], "capacity_bus_stop": [123, 151], "capacity_pi": [123, 151], "capacity_animal_shelt": [123, 151], "capacity_military_kom": 123, "id": [123, 133, 134, 138, 140, 153, 158], "354918": [123, 133, 134, 153, 158], "622": [123, 133, 134, 153, 158], "6625258": [123, 133, 134, 153, 158], "829": [123, 133, 134, 153, 158], "354901": [123, 133, 134, 153, 158], "464": [123, 133, 134, 153, 158], "43840": [123, 133], "686518": [123, 133], "641057": 123, "30688": 123, "480678": 123, "199357": 123, "13152": 123, "205840": 123, "942581": 123, "804466": 123, "712114": 123, "355412": [123, 133, 134, 153, 158], "142": [123, 133, 134, 153, 158, 163], "6623378": [123, 133, 134, 153, 158], "355411": [123, 133, 134, 153, 158], "662": [123, 151, 158], "10294": [123, 133], "395525": [123, 133], "114392": 123, "2177": 123, "690063": 123, "431105": 123, "8116": 123, "705462": 123, "606820": 123, "23173": 123, "129862": 123, "onli": [123, 142, 152, 165], "local": 123, "ones": 123, "local_cr": 123, "geocode_to_gdf": [123, 152], "r1114252": 123, "by_osmid": 123, "intersect": 123, "union_al": [123, 152], "477": 123, "match": [123, 152, 158], "iduedu": [123, 152, 158, 176], "reproject": [123, 152, 158], "551": [123, 147, 151], "drive_walk_build": [123, 152, 158], "get_drive_graph_by_poli": 123, "download": [123, 152, 158, 172], "osm": [123, 132, 152, 158], "mai": [123, 152, 158, 171, 172], "take": [123, 152, 158, 176], "while": [123, 152, 158], "897": [123, 152], "util": [123, 143, 152], "remove_weakly_connected_nod": [123, 152], "remov": [123, 152, 158], "form": [123, 152], "trap": [123, 152], "compon": [123, 152, 158], "These": [123, 152, 158], "group": [123, 142, 152], "where": [123, 124, 126, 144, 152, 166, 171], "enter": [123, 152], "exit": [123, 152], "vice": [123, 152], "versa": [123, 152], "largest": [123, 152], "strongli": [123, 152], "663": 123, "graph_walk": 123, "927": [123, 153], "969": [123, 154], "get_walk_graph": [123, 152, 158], "217": [123, 134, 152], "nodes_gdf": 123, "get_adj_matrix_gdf_to_gdf": 123, "blocks_to_nod": 123, "653": [123, 134], "654": 123, "655": 123, "656": [123, 151], "657": 123, "658": 123, "660": [123, 147, 153], "661": [123, 163], "3410": 123, "3602": 123, "3526": 123, "3528": [123, 163], "3408": 123, "3850": 123, "3856": 123, "3586": 123, "2840": 123, "3434": 123, "2690": 123, "3186": 123, "4052": 123, "3222": 123, "4356": 123, "4544": [123, 124], "4156": 123, "4572": 123, "4952": 123, "4972": 123, "2096": 123, "2288": 123, "2212": 123, "2094": 123, "2348": 123, "2354": 123, "2270": 123, "1179": [123, 152], "1774": 123, "3318": 123, "3806": [123, 163], "4708": 123, "3880": 123, "5212": 123, "5340": 123, "5012": 123, "5364": 123, "4676": 123, "5200": 123, "3920": 123, "4116": 123, "4036": 123, "4038": 123, "3918": 123, "4364": 123, "4368": 123, "4096": 123, "3352": 123, "3944": 123, "3200": 123, "3698": 123, "4564": 123, "3734": 123, "4864": 123, "5056": 123, "4668": 123, "5080": 123, "5464": 123, "5484": 123, "3046": 123, "3238": 123, "3160": 123, "3040": 123, "3298": 123, "3302": 123, "3218": 123, "2128": 123, "2724": 123, "2974": 123, "3470": 123, "3540": 123, "4732": 123, "4920": 123, "4532": 123, "4944": 123, "5160": 123, "5284": 123, "215": 123, "4312": 123, "4232": 123, "4112": 123, "4556": 123, "4560": 123, "4292": 123, "3758": 123, "4352": 123, "3124": 123, "3620": 123, "4452": 123, "3658": 123, "4372": 123, "4728": 123, "4148": 123, "4752": 123, "5392": 123, "5380": 123, "nodes_to_nod": 123, "371": [123, 132], "315": [123, 151], "250000": [123, 152], "664": [123, 152], "349": [123, 163], "1181": 123, "1254": 123, "3626": 123, "3888": 123, "4696": 123, "3860": 123, "5592": 123, "5576": 123, "4276": 123, "5016": 123, "297": [123, 151, 163], "750000": [123, 152, 163], "647": [123, 140], "1163": [123, 133], "1237": 123, "3610": 123, "3870": 123, "4680": 123, "3842": 123, "5376": 123, "5060": 123, "5556": 123, "4256": 123, "4996": 123, "267": 123, "519531": 123, "1281": 123, "944": [123, 163], "3894": 123, "4964": 123, "4128": 123, "5660": 123, "5860": 123, "5344": 123, "5844": 123, "323": [123, 136, 163], "341": 123, "163": 123, "344": [123, 133, 154], "1275": [123, 153], "939": 123, "3950": 123, "4212": 123, "5020": 123, "4184": 123, "5716": 123, "5916": 123, "5400": 123, "5900": 123, "4600": 123, "160": [123, 147, 151], "177": [123, 142, 153], "532": [123, 158], "475": 123, "500000": 123, "824": 123, "820": [123, 147], "509": 123, "1415": 123, "3788": 123, "4048": 123, "4856": 123, "4020": 123, "5552": 123, "5752": 123, "5240": [123, 163], "5736": 123, "4436": 123, "5176": 123, "services_df": 123, "capacity_": [123, 124, 126, 149, 150, 151, 163], "capac": [123, 124, 126, 133, 149, 150, 151, 152, 154, 163], "origin_destination_matrix": 123, "od_mx": 123, "243": [123, 151, 158], "origin_destin": 123, "_validate_input": 123, "244": [123, 151], "_calculate_divers": 123, "51": [123, 136, 144, 147, 151, 152, 155, 163], "633": 123, "_calculate_attract": 123, "attract": 123, "640": [123, 147], "_calculate_nodes_weight": 123, "identifi": [123, 176], "nearest": 123, "646": 123, "_calculate_od_mx": 123, "origin": 123, "destin": 123, "road_congest": 123, "graph_congest": 123, "41": [123, 124, 147, 151, 152, 154, 158], "987": [123, 163], "18": [123, 124, 126, 132, 147, 151, 152, 153, 158, 163], "shortest": 123, "616": 123, "04it": 123, "edges_gdf": 123, "length_met": 123, "379": [123, 153], "017": [123, 132], "linestr": [123, 152], "348610": 123, "6648540": 123, "586": [123, 124], "348595": 123, "032": 123, "058759": 123, "339": 123, "024": [123, 133], "008": 123, "6648548": 123, "588": [123, 153], "348588": 123, "019130": 123, "340": [123, 140, 147], "245": [123, 136, 158, 163], "246": 123, "348581": 123, "040963": 123, "515": 123, "348859": 123, "015": 123, "6648442": 123, "978": [123, 152], "348857": 123, "583": [123, 152, 163], "000718": 123, "189": [123, 138], "348847": 123, "048565": 123, "etc": [124, 126, 165, 176], "demand": [124, 126, 151, 152, 163], "occupi": 124, "space": 124, "doesn": [124, 126], "let": 124, "service_types_config": [124, 126, 152, 163], "service_typ": [124, 126, 133, 149, 150, 151, 163], "In": [124, 152, 163], "case": 124, "optim": [124, 139, 146, 148, 149, 150, 165, 176], "competitive_provis": [124, 152], "links_df": [124, 152], "555": [124, 152], "competiv": [124, 152], "_initialize_provision_df": [124, 126, 152], "initi": [124, 126, 142, 148, 152, 154, 176], "559": 124, "No": [124, 152], "imput": [124, 139, 154, 157], "paramet": [124, 144, 148, 151, 152, 158, 163], "_supply_self": [124, 152], "suppli": [124, 152], "own": [124, 152, 166, 171], "700": [124, 133, 134, 147, 151, 153, 163], "175": [124, 163], "lp": [124, 152], "until": [124, 152], "break": [124, 149, 152], "condit": [124, 152], "reach": [124, 152], "40": [124, 135, 143, 147, 151, 152, 158, 159, 163], "117": [124, 151, 163], "finish": [124, 126, 151, 152, 163], "demand_left": [124, 152], "demand_within": [124, 152], "demand_without": [124, 152], "capacity_left": [124, 152], "capacity_within": [124, 126, 152], "capacity_without": [124, 152], "provision_strong": [124, 152], "provision_weak": [124, 152], "52": [124, 132, 135, 136, 143, 147, 151, 152, 163], "942": [124, 133], "734": 124, "156": [124, 153, 163], "target": [124, 152], "710": [124, 147, 163], "8838": 124, "262": [124, 154, 163], "86": [124, 147, 152, 163], "provision_strong_tot": 124, "provision_weak_tot": 124, "p_strong": 124, "p_weak": 124, "6890279622706392": 124, "7433122288715732": 124, "pstrong": 124, "round": 124, "pweak": 124, "competit": [125, 176], "shared_provis": 126, "28": [126, 144, 147, 152, 154, 163], "275": [126, 151, 153, 163], "assess": [126, 152, 176], "population_within": 126, "1680": [126, 163], "1906": 126, "41932": 126, "23757": 126, "464323": 126, "904": 126, "63244": 126, "how": [126, 152, 158, 176], "much": 126, "per": [126, 129], "resid": [126, 152, 176], "rdylgn_r": [126, 133, 142], "collocation_mx": 127, "pitch": [127, 151, 163], "swimming_pool": [127, 149, 151, 163], "train_stat": 127, "bus_stat": 127, "bus_stop": 127, "pier": 127, "animal_shelt": [127, 151, 163], "prison": [127, 151, 163], "landfil": [127, 151, 152, 163], "plant_nurseri": 127, "greenhouse_complex": 127, "warehous": 127, "218841": 127, "411341": 127, "016645": 127, "119048": 127, "423715": 127, "033602": 127, "035248": 127, "036385": 127, "018767": 127, "093637": 127, "001366": 127, "176186": 127, "018496": 127, "001433": 127, "002778": 127, "001427": 127, "002786": 127, "021135": 127, "424829": 127, "018672": 127, "355828": 127, "029032": 127, "044728": 127, "033784": 127, "019355": 127, "087043": 127, "002176": 127, "213359": 127, "019095": 127, "001100": 127, "003315": 127, "025974": 127, "163462": 127, "047782": 127, "024452": 127, "022346": 127, "004854": 127, "027682": 127, "003086": 127, "022393": 127, "016949": 127, "008696": 127, "015152": 127, "012195": 127, "206897": 127, "102349": 127, "029197": 127, "044369": 127, "028571": 127, "014870": 127, "081633": 127, "057602": 127, "011940": 127, "031100": 127, "522052": 127, "038394": 127, "027942": 127, "033281": 127, "019862": 127, "081169": 127, "001736": 127, "002691": 127, "241527": 127, "021294": 127, "000896": 127, "003584": 127, "003512": 127, "002679": 127, "007061": 127, "029208": 127, "050633": 127, "022472": 127, "030303": 127, "020548": 127, "030928": 127, "016075": 127, "014151": 127, "009091": 127, "006557": 127, "067961": 127, "084249": 127, "035928": 127, "031847": 127, "020354": 127, "071749": 127, "008772": 127, "007576": 127, "006079": 127, "207254": 127, "027344": 127, "024752": 127, "034845": 127, "082237": 127, "008969": 127, "014851": 127, "032407": 127, "016908": 127, "014286": 127, "168675": 127, "018862": 127, "014778": 127, "010169": 127, "153846": 127, "003802": 127, "060080": 127, "014205": 127, "004000": [127, 140], "018141": 127, "conveni": [127, 149, 150, 151, 163], "286079": 127, "334545": 127, "022190": 127, "099352": 127, "314085": 127, "027086": 127, "040846": 127, "040466": 127, "022744": 127, "084972": 127, "004409": 127, "002259": 127, "290021": 127, "025281": 127, "001506": 127, "003010": 127, "000738": 127, "000749": 127, "000739": [127, 140], "038127": 127, "supermarket": [127, 149, 151, 163], "302269": 127, "359848": 127, "017946": 127, "124498": 127, "316883": 127, "031056": 127, "050463": 127, "032558": 127, "057878": 127, "148335": 127, "001043": 127, "001083": 127, "231161": 127, "022330": 127, "001085": 127, "001055": 127, "002116": 127, "029676": 127, "cemeteri": [127, 151, 152, 163], "001304": 127, "002096": 127, "016760": 127, "003571": 127, "006774": 127, "005556": 127, "022642": 127, "003356": 127, "012012": 127, "004695": 127, "009174": 127, "011236": 127, "018868": 127, "006579": 127, "religion": [127, 149, 151, 163], "046296": 127, "040000": 127, "046053": 127, "029630": 127, "044953": 127, "017361": 127, "032573": 127, "054404": 127, "017921": 127, "028369": 127, "003906": 127, "049685": 127, "032448": 127, "004566": 127, "009050": 127, "008264": 127, "023148": 127, "market": [127, 149, 151, 163], "022008": 127, "023077": 127, "019481": 127, "049180": 127, "020158": 127, "039370": 127, "006452": 127, "008197": 127, "016529": 127, "053846": 127, "014160": 127, "010695": 127, "018116": 127, "054762": 127, "045764": 127, "034483": 127, "047244": 127, "062602": 127, "037736": 127, "064057": 127, "077562": 127, "019157": 127, "014599": 127, "043723": 127, "053968": 127, "004902": 127, "004405": 127, "018018": 127, "021687": 127, "playground": [127, 149, 150, 151, 163], "308555": 127, "386744": 127, "022556": 127, "100445": 127, "419580": 127, "024219": 127, "034898": 127, "045565": 127, "069071": 127, "002553": 127, "001305": 127, "302062": 127, "024631": 127, "000652": 127, "001303": 127, "001927": 127, "001300": 127, "003220": 127, "025701": 127, "322333": 127, "392857": 127, "030825": 127, "117541": 127, "326733": 127, "030584": 127, "043159": 127, "038983": 127, "044508": 127, "135870": 127, "002796": 127, "000962": 127, "263225": 127, "022747": 127, "000963": 127, "000961": 127, "000940": 127, "001885": 127, "030229": 127, "029795": 127, "032721": 127, "007752": 127, "013093": 127, "043746": 127, "016427": 127, "009728": 127, "008278": 127, "008299": 127, "040850": 127, "009547": 127, "088121": 127, "012844": 127, "004762": 127, "002358": 127, "002237": 127, "002342": 127, "055738": 127, "001312": 127, "002107": 127, "005682": 127, "017182": 127, "020134": 127, "005714": 127, "008997": 127, "009662": 127, "009615": 127, "011905": 127, "019802": 127, "003333": 127, "train_build": [127, 151, 163], "004484": 127, "002657": 127, "004387": 127, "004032": 127, "225869": 127, "217028": 127, "014837": 127, "123386": 127, "186667": 127, "029687": 127, "067187": 127, "067680": 127, "065574": 127, "129760": 127, "003221": 127, "144383": 127, "036179": 127, "001709": 127, "003407": 127, "029299": 127, "lawyer": 127, "045514": 127, "040923": 127, "018692": 127, "046205": 127, "032013": 127, "026596": 127, "095960": 127, "051370": 127, "051429": 127, "046875": [127, 152, 158], "028141": 127, "046025": 127, "023952": 127, "cafe": [127, 149, 150, 151, 163], "215331": 127, "260434": 127, "024038": 127, "076506": 127, "229936": 127, "024458": 127, "057488": 127, "071913": 127, "040714": 127, "101370": 127, "003509": 127, "002157": 127, "269220": 127, "042437": 127, "001438": 127, "002874": 127, "003536": 127, "000715": 127, "002122": 127, "045984": 127, "subway_entr": 127, "033113": 127, "029787": 127, "015707": 127, "042705": 127, "033563": 127, "030488": 127, "048913": 127, "032847": 127, "088435": 127, "095070": 127, "028022": 127, "010204": 127, "012739": 127, "multifunctional_cent": [127, 149, 151, 163], "038997": 127, "041249": 127, "044355": 127, "035492": 127, "007463": 127, "024390": 127, "033582": 127, "017574": 127, "003534": 127, "hairdress": [127, 149, 150, 151, 163], "293249": 127, "373306": 127, "023693": 127, "098294": 127, "298851": 127, "025042": 127, "053872": 127, "048438": 127, "035684": 127, "104839": 127, "002523": 127, "244391": 127, "032958": 127, "000867": 127, "001730": 127, "000847": 127, "001699": 127, "025316": 127, "restaur": [127, 149, 151, 163], "173736": 127, "196324": 127, "015476": 127, "088000": 127, "175727": 127, "027295": 127, "074401": 127, "092807": 127, "055412": 127, "129220": 127, "001264": 127, "002653": 127, "158586": 127, "053571": 127, "001282": 127, "003958": 127, "010376": 127, "024109": 127, "bar": [127, 144, 151, 163], "168168": 127, "179286": 127, "022887": 127, "079365": 127, "141625": 127, "025830": 127, "076067": 127, "073718": 127, "047893": 127, "102686": 127, "106383": 127, "042517": 127, "002075": 127, "002062": 127, "001976": 127, "017316": 127, "172131": 127, "196698": 127, "024000": 127, "055159": 127, "231699": 127, "021354": 127, "024420": 127, "049525": 127, "018138": 127, "053522": 127, "006039": 127, "001627": 127, "349377": 127, "032669": 127, "001220": 127, "001219": 127, "005253": 127, "001217": 127, "003228": 127, "044358": 127, "govern": 127, "091319": 127, "087488": 127, "010582": 127, "066519": 127, "063553": 127, "017094": 127, "070225": 127, "095349": 127, "035714": 127, "061702": 127, "003125": 127, "056191": 127, "067010": 127, "003497": 127, "003236": 127, "006536": 127, "016064": 127, "recruit": 127, "017070": 127, "013468": 127, "007812": 127, "022422": 127, "011576": 127, "007097": 127, "006250": 127, "098990": 127, "103806": 127, "022403": 127, "056239": 127, "085612": 127, "025806": 127, "101099": 127, "082418": 127, "035398": 127, "038591": 127, "002273": 127, "002475": 127, "077442": 127, "072289": 127, "002463": 127, "026230": 127, "zoo": [127, 151, 163], "008511": 127, "006719": 127, "009009": 127, "009813": 127, "008130": 127, "014218": 127, "058140": 127, "016807": 127, "037037": 127, "005405": 127, "020000": 127, "circu": 127, "002894": 127, "001136": 127, "000898": 127, "029126": 127, "005128": 127, "000677": 127, "186522": 127, "179899": 127, "028278": 127, "121348": 127, "145765": 127, "030220": 127, "058355": 127, "029474": 127, "070393": 127, "077918": 127, "021277": 127, "003257": 127, "003077": 127, "025440": 127, "136732": 127, "140488": 127, "010230": 127, "090508": 127, "112698": 127, "033520": 127, "036842": 127, "031983": 127, "016901": 127, "066667": 127, "073058": 127, "023981": 127, "003378": 127, "003344": 127, "003106": 127, "019646": 127, "dog_park": 127, "019526": 127, "012115": 127, "004115": 127, "014978": 127, "008403": 127, "004292": 127, "007692": 127, "011479": 127, "013889": 127, "007491": 127, "039340": 127, "039216": 127, "013043": 127, "029900": 127, "009709": 127, "089202": 127, "059211": 127, "031088": 127, "026393": 127, "026631": 127, "064257": 127, "007299": 127, "006329": 127, "008475": 127, "bakeri": 127, "195144": 127, "221417": 127, "013643": 127, "100654": 127, "180040": 127, "028653": 127, "073806": 127, "068036": 127, "067771": 127, "140584": 127, "151923": 127, "040268": 127, "001553": 127, "003096": 127, "001493": 127, "003082": 127, "004505": 127, "024823": 127, "188796": 127, "215150": 127, "028801": 127, "067929": 127, "241093": 127, "032809": 127, "024700": 127, "039003": 127, "026658": 127, "084646": 127, "004084": 127, "003487": 127, "269019": 127, "020833": 127, "002091": 127, "002784": 127, "002740": 127, "002082": 127, "003432": 127, "guest_hous": 127, "035433": 127, "034958": 127, "004950": 127, "030717": 127, "020236": 127, "011364": 127, "086022": 127, "061818": 127, "015873": 127, "018339": 127, "053812": 127, "006154": 127, "reserv": [127, 151, 163], "001776": 127, "001685": 127, "021739": 127, "005312": 127, "015517": 127, "028169": 127, "007353": 127, "006993": 127, "010364": 127, "009950": 127, "003401": 127, "machine_building_pl": 127, "004011": 127, "004278": 127, "006098": 127, "011494": 127, "006009": 127, "014493": 127, "003953": 127, "007143": 127, "015146": 127, "010256": 127, "043321": 127, "breweri": 127, "009859": 127, "008919": 127, "010657": 127, "010417": 127, "012245": 127, "007092": 127, "woodworking_pl": 127, "005236": 127, "007376": 127, "007168": 127, "009338": 127, "011173": 127, "007435": 127, "013699": 127, "013559": 127, "008333": 127, "017444": 127, "009434": 127, "009346": 127, "wastewater_pl": 127, "010101": 127, "006410": 127, "water_work": 127, "002869": 127, "002260": 127, "001789": 127, "004975": 127, "004367": 127, "002028": 127, "004237": [127, 144], "substat": 127, "074971": 127, "077960": 127, "008746": 127, "057007": 127, "083267": 127, "015823": 127, "039157": 127, "043165": 127, "066820": 127, "007067": 127, "056510": 127, "013405": 127, "003690": 127, "030702": 127, "023256": 127, "006040": 127, "003704": 127, "002369": 127, "027778": 127, "436548": 127, "020469": 127, "001014": 127, "002367": 127, "003022": 127, "001688": 127, "005051": 127, "043949": 127, "227941": 127, "005988": 127, "218750": [127, 152], "016393": 127, "083333": 127, "135135": 127, "004184": 127, "153509": 127, "figur": [127, 142, 144, 155], "imshow": 127, "colorbar": 127, "xtick": [127, 142, 144], "rang": [127, 144], "fontsiz": [127, 142], "rotat": [127, 142], "right": [127, 165, 167], "ytick": [127, 142], "titl": [127, 142, 144, 151, 155, 163], "mostli": 128, "due": 128, "its": [128, 159], "abil": 128, "count_": 128, "_build": 128, "count_df": 128, "count_bus_st": 128, "amount": 129, "squar": [129, 144], "meter": [129, 152], "001": 129, "openstreetmap": 132, "block_gdf": [132, 159], "loc": [132, 142, 144, 151, 155, 159, 163], "vacant_area": 132, "get_vacant_area": 132, "vacant_areas_gdf": 132, "094": 132, "_fetch_occupied_area": 132, "fetch": [132, 158], "956": 132, "_generate_featur": 132, "959": 132, "_filter_vacant_area": 132, "mrr_area": 132, "area_to_length": 132, "area_to_mrr_area": 132, "351726": 132, "6633821": 132, "381": 132, "351724": 132, "599": [132, 135, 151, 163], "2218": 132, "640904": 132, "2502": 132, "115570": 132, "254": 132, "891573": 132, "704254": 132, "886706": 132, "351961": 132, "6633866": 132, "351954": 132, "1446": 132, "784544": 132, "1864": 132, "244116": 132, "182": [132, 142, 163], "976961": 132, "906922": 132, "776070": 132, "351794": 132, "179": [132, 158, 163], "6633895": 132, "351800": 132, "337": [132, 144, 154], "1026": 132, "502040": 132, "1318": 132, "355779": 132, "806252": 132, "159388": 132, "778623": 132, "blue": [132, 151, 159, 163], "text": 132, "353934": [133, 134, 153, 158], "329": [133, 134, 153, 158], "6625429": [133, 134, 153, 158], "433": [133, 134, 153, 158, 163], "353923": [133, 134, 153, 158], "453": [133, 134, 153, 158], "355099": [133, 134, 153, 158], "6623847": [133, 134, 153, 158], "765": [133, 134, 151, 153, 158], "355074": [133, 134, 153, 158], "808": [133, 134, 153, 158], "352766": [133, 134, 153, 158], "168": [133, 134, 153, 158, 163], "6621954": [133, 134, 153, 158], "748": [133, 134, 153, 158, 163], "352744": [133, 134, 153, 158], "412": [133, 134, 152, 153, 158, 163], "buildings_gdf": [133, 136], "158414": 133, "354964": 133, "060": 133, "6625185": 133, "771": 133, "354959": 133, "684": [133, 163], "035234": 133, "030958": 133, "150194": 133, "355008": 133, "167": [133, 163], "6625301": 133, "606": 133, "355012": 133, "191954": 133, "185639": 133, "58769": 133, "354878": 133, "941": 133, "6625544": 133, "327": [133, 163], "354882": 133, "984": [133, 138], "31": [133, 147, 151, 152, 153, 158, 163], "272943": 133, "264070": 133, "158321": 133, "355037": 133, "6624978": 133, "295": 133, "355060": 133, "347": [133, 135, 163], "158": [133, 163], "369888": 133, "324760": 133, "36319": 133, "354643": 133, "688": [133, 163], "6625735": 133, "354657": 133, "192": [133, 136, 153, 163], "764221": 133, "709820": 133, "34": [133, 142, 147, 151, 158, 163], "826": [133, 152], "_preprocess_input": [133, 152], "objects_count": [133, 152], "13953": 133, "390266": 133, "5051": 133, "410558": 133, "1173": 133, "871643": 133, "480697": 133, "46303": 133, "954706": 133, "11085": 133, "135352": 133, "153749": 133, "574111": 133, "45222": 133, "959595": 133, "799": 133, "point": [133, 152], "359976": 133, "856": 133, "6653615": 133, "717": 133, "48": [133, 136, 140, 147, 152, 163], "900291": 133, "884676": 133, "149177": 133, "empti": [133, 136], "114338": 133, "117246": 133, "343574": 133, "869": 133, "6659119": 133, "948": [133, 136], "547600": 133, "534469": 133, "124423": 133, "342995": 133, "6653420": 133, "954": 133, "652546": 133, "648502": 133, "113602": 133, "319549": 133, "989": 133, "6646766": 133, "805": 133, "147": [133, 158], "496292": 133, "496007": 133, "services_gdf": 133, "344901": 133, "025": 133, "6636842": 133, "991": 133, "344572": 133, "6637377": 133, "544": 133, "421": [133, 163], "343490": 133, "888": [133, 155, 163], "6636544": 133, "706": [133, 154, 163], "482": 133, "613": 133, "337815": 133, "236": [133, 154, 158], "6630648": 133, "737": [133, 140], "650": [133, 147], "355309": 133, "6618733": 133, "zone": [134, 152], "\u04421\u04362": 134, "multipolygon": [134, 138, 152, 154], "349202": 134, "695": 134, "6660862": 134, "796": 134, "349199": 134, "345558": 134, "6666406": 134, "372": [134, 147], "345528": 134, "347805": 134, "242": 134, "6663237": 134, "649": 134, "347790": 134, "346292": 134, "257": [134, 138, 163], "6667294": 134, "593": 134, "346266": 134, "350166": 134, "384": [134, 135], "6660332": 134, "141": 134, "350186": 134, "\u04423\u04361": 134, "\u0442\u04400": 134, "\u04423\u04362": 134, "\u04422\u0436\u04342": 134, "\u0442\u04341": 134, "\u0442\u04342": 134, "\u0442\u04343": 134, "\u0442\u0443": 134, "\u0442\u04384": 134, "\u0442\u043f\u04341": 134, "\u0442\u043f\u04342": 134, "\u0442\u04381": 134, "\u04423\u0436\u04343": 134, "\u0442\u043a1": 134, "\u0442\u04402": 134, "\u0442\u04382": 134, "\u0442\u04405": 134, "\u0442\u04404": 134, "\u04422\u04361": 134, "\u0442\u04383": 134, "\u04421\u04361": 134, "\u0442\u04403": 134, "\u0442\u043f2": 134, "\u0442\u043a3": 134, "\u0442\u04401": 134, "\u0442\u04411": 134, "\u0442\u043a2": 134, "\u0442\u043f1": 134, "\u0442\u043f3": 134, "\u0442\u043f4": 134, "\u0442\u04412": 134, "land_use_gdf": 134, "478": 134, "overlai": [134, 152], "841": 134, "680244": 134, "314652": 134, "854630": 134, "084200": 134, "000073": 134, "400810": 134, "599190": 134, "002242": 134, "850359": 134, "009041": 134, "16315": [134, 140, 158], "335210": 134, "6655823": 134, "335105": 134, "16316": [134, 140, 158], "315582": 134, "435": [134, 153, 163], "6679561": 134, "357": [134, 163], "315523": 134, "16317": [134, 140, 158], "316419": 134, "909": [134, 136], "6679189": 134, "316319": 134, "749": 134, "16318": [134, 140, 158], "315709": 134, "232": [134, 151, 158], "6679519": 134, "315748": 134, "877": 134, "16319": [134, 140, 158], "335817": 134, "591": 134, "6619414": 134, "920": [134, 147], "335727": 134, "256": [134, 158, 163], "405943": 134, "563271": 134, "16320": [134, 140, 153, 158], "blocksclassifi": [135, 136, 140], "categories_df": 135, "07": [135, 140, 144, 151, 152, 153, 155, 163], "395": 135, "feature_engin": [135, 136, 140, 142, 147, 153], "_calculate_usual_featur": [135, 136, 140, 142, 147, 153], "usual": [135, 136, 140, 142, 147, 153], "_calculate_radius": [135, 136, 153], "radius": [135, 136, 147, 153], "15549": 135, "3155": 135, "25it": 135, "1259": 135, "36it": [135, 155], "881": [135, 152], "_calculate_aspect_ratio": [135, 136, 140, 147, 153], "aspect": [135, 136, 140], "ratio": [135, 136, 140], "31179": 135, "_calculate_centerlin": [135, 136, 140, 153], "centerlin": [135, 136, 140, 153], "383": [135, 163], "72it": 135, "torch": [135, 136, 155, 165], "tensor": [135, 136, 155], "supervis": [135, 136], "base_strategi": [135, 136], "One": [135, 136], "should": [135, 136], "criterion_cl": [135, 136], "crossentropyloss": [135, 136], "358": [135, 140], "data_path": 136, "boundaries_gdf": 136, "boundari": [136, 152], "estimate_utm_cr": [136, 147, 152], "roads_gdf": 136, "railways_gdf": 136, "water_gdf": 136, "preprocess_urban_object": [136, 152], "lines_gdf": 136, "polygons_gdf": 136, "32636": 136, "174": 136, "schema": [136, 152, 154], "191": [136, 152, 163], "cut_urban_block": [136, 152], "898": [136, 144], "validate_and_preprocess_gdf": 136, "line": [136, 152, 158, 163], "934": [136, 138], "build": [136, 137, 139, 157, 176], "614": 136, "3420": 136, "reset_index": [136, 152], "724": 136, "732": [136, 163], "769": [136, 163], "782": 136, "838": 136, "861": 136, "1296": 136, "2462": 136, "98it": 136, "1020": 136, "31it": 136, "665": [136, 138], "30243": [136, 160], "35it": 136, "711": 136, "57it": 136, "276": [136, 151], "280": [136, 147], "284": 136, "split_block": 136, "candid": 136, "547": 136, "550": [136, 147], "3699": 136, "overal": [136, 152], "assign": [137, 139], "process": [137, 139, 152], "cut": [137, 139], "split": [137, 139, 144], "read_fil": [138, 147], "geojson": [138, 147], "pyogrio": 138, "raw": 138, "198": [138, 163], "sever": 138, "218": [138, 163], "been": [138, 144], "alter": 138, "uniqu": 138, "emit": 138, "anymor": 138, "ogr_read": 138, "9377": 138, "346635": 138, "461": 138, "6647492": 138, "346473": 138, "9378": 138, "346361": 138, "221": [138, 158, 163], "6647603": 138, "446": 138, "346328": 138, "9379": 138, "344109": 138, "6649134": 138, "367": [138, 140], "344000": 138, "9380": 138, "346323": 138, "488": 138, "6649497": 138, "386": [138, 151], "346199": 138, "9381": 138, "346670": 138, "6649890": 138, "747": 138, "346543": 138, "9382": 138, "postprocess": 138, "9597": 138, "356638": 138, "451": [138, 163], "6623610": 138, "759": 138, "356647": 138, "9598": 138, "357828": 138, "6622732": 138, "358060": 138, "798": 138, "9599": 138, "348518": 138, "6635309": 138, "076": [138, 152], "348290": 138, "092": 138, "9600": 138, "336126": 138, "6638616": 138, "336091": 138, "806": [138, 163], "9601": 138, "332513": 138, "6639516": 138, "332514": 138, "9602": 138, "overview": 139, "notebook": [139, 165], "machin": [139, 165, 176], "learn": [139, 165, 176], "regress": [139, 141], "distanc": [139, 152, 161], "synthesi": [139, 176], "pipelin": [139, 176], "_block": 140, "550762": 140, "6565038": 140, "844": 140, "550768": 140, "857": 140, "6565033": 140, "563": [140, 154], "544937": 140, "479": [140, 144], "6564706": 140, "592": 140, "544935": 140, "619": [140, 163], "544806": 140, "6565359": 140, "291": [140, 155, 163], "544814": 140, "544793": 140, "346": [140, 163], "6565395": 140, "228": [140, 163], "544800": 140, "re": [140, 163], "1544": 140, "46it": 140, "852": [140, 144], "208": [140, 151], "24it": 140, "397": 140, "_generate_combin": [140, 153], "combin": [140, 153], "017405": 140, "001351": 140, "981244": 140, "017738": 140, "001377": [140, 144], "637211": 140, "000143": 140, "362646": 140, "757112": 140, "000394": 140, "008412": 140, "000726": 140, "990862": 140, "008490": 140, "000733": 140, "034929": 140, "964332": 140, "036221": 140, "000766": 140, "006865": 140, "393867": 140, "599269": 140, "011455": 140, "657246": 140, "883616": 140, "000178": 140, "116206": 140, "603908": 140, "001532": 140, "604627": 140, "000022": 140, "395351": 140, "529344": 140, "000055": 140, "967215": 140, "000053": 140, "032732": 140, "549418": 140, "001614": 140, "928698": 140, "071249": 140, "034574": 140, "003977": 140, "001853": 140, "994170": 140, "001864": 140, "almost": 142, "equal": 142, "land_use_column": 142, "clip": [142, 155], "upper": [142, 144, 155], "viabl": 142, "axi": [142, 144], "058": 142, "5350": 142, "15279": 142, "densityregressor": 142, "dr": 142, "get_train_data": [142, 144], "fit_scal": 142, "992": [142, 151], "_features_from_geometri": 142, "fit": [142, 143, 144], "train_loss": [142, 155], "test_loss": [142, 155], "epoch": [142, 155], "3e": 142, "weight_decai": [142, 155], "delta": [142, 149], "loss": [142, 155], "02410": 142, "03729": 142, "00it": 142, "from_dict": 142, "03729007765650749": 142, "result_df": 142, "517": 142, "puor": 142, "group_column": 142, "diff_column": 142, "group_abs_diff_mean": 142, "group_col": 142, "group_mask": 142, "filtered_block": 142, "filtered_df": 142, "\u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e\u0435": 142, "\u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435": 142, "abs_diff": 142, "ab": 142, "mean": [142, 144], "\u0432\u0438\u0434\u0435": 142, "abs_mean_diffs_df": 142, "\u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c": 142, "\u0438\u0441\u0445\u043e\u0434\u043d\u0443\u044e": 142, "\u0442\u0430\u0431\u043b\u0438\u0446\u0443": 142, "\u0447\u0442\u043e\u0431\u044b": 142, "\u043f\u043e\u0442\u0435\u0440\u044f\u0442\u044c": 142, "\u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b": 142, "normalized_df": 142, "\u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c": 142, "\u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e": 142, "\u043a\u0430\u0436\u0434\u043e\u043c\u0443": 142, "\u0441\u0442\u043e\u043b\u0431\u0446\u0443": 142, "\u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0443": 142, "seaborn": 142, "sn": 142, "heatmap": 142, "annot": 142, "fmt": 142, "3f": [142, 144], "\u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0435": 142, "\u0441\u0440\u0435\u0434\u043d\u0438\u0435": 142, "\u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u044f": 142, "\u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432": [142, 143], "\u0433\u0440\u0443\u043f\u043f\u0430\u043c": 142, "\u0433\u0434\u0435": 142, "\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435": 142, "xlabel": [142, 144, 151, 155, 163], "\u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438": 142, "ylabel": [142, 144, 151, 155, 163], "\u0433\u0440\u0443\u043f\u043f\u044b": 142, "save_model": [142, 144], "pt": [142, 158], "save_scal": 142, "scale_pos_weight": 143, "cb": 143, "thread_count": 143, "auto_class_weight": 143, "random_se": 143, "voting_param": 143, "numpi": [143, 144, 149], "np": [143, 144, 149, 152, 163], "model_select": 143, "train_test_split": 143, "\u0438\u043c\u0438\u0442\u0430\u0446\u0438\u044f": 143, "\u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0445": 143, "\u0434\u0430\u043d\u043d\u044b\u0445": 143, "floor": [143, 152], "55": [143, 147, 151, 152, 163], "room": 143, "\u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435": 143, "\u0446\u0435\u043b\u0435\u0432\u043e\u0439": 143, "\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439": 143, "drop": [143, 152], "\u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0443\u044e": 143, "\u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e": 143, "\u0432\u044b\u0431\u043e\u0440\u043a\u0438": 143, "x_train_df": 143, "x_test_df": 143, "y_train_seri": 143, "y_test_seri": 143, "test_siz": 143, "\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435": 143, "to_numpi": 143, "github": [143, 166, 171], "2749": 143, "userwarn": 143, "doe": 143, "wa": [143, 163, 176], "voting_model": 143, "\u0437\u0430\u0433\u043b\u0443\u0448\u043a\u0438": 143, "\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b": 143, "\u043f\u043e\u0434\u0442\u044f\u043d\u0443\u0442\u0441\u044f": 143, "y_pred": [143, 144], "y_proba": 143, "56583332": 143, "43416667": 143, "60083332": 143, "39916667": 143, "social_regression_data": 144, "buildings_count": 144, "guest_house_count": 144, "school_count": 144, "pitch_count": 144, "hospital_count": 144, "polyclinic_count": 144, "emergency_medical_service_stations_count": 144, "restaurant_count": 144, "pharmacy_count": 144, "longitud": 144, "latitud": 144, "2154": 144, "958000": 144, "134350": 144, "198599": 144, "486228e": 144, "18790": 144, "798548": 144, "129551": 144, "116050": 144, "973": [144, 151], "895049e": 144, "271492e": 144, "771885": 144, "613281": 144, "809647e": 144, "1698": [144, 163], "732000": 144, "167346": 144, "131884": 144, "839993e": 144, "19628": 144, "059600": 144, "164371": 144, "238284": 144, "1016": 144, "137606e": 144, "275153e": 144, "780323": 144, "931010": 144, "841250e": 144, "20169": 144, "45000": 144, "1484": 144, "897718": 144, "375067": 144, "446731e": 144, "530190": 144, "233798": 144, "899757": 144, "274216": 144, "3448": 144, "347738e": 144, "899003e": 144, "775855": 144, "937394": 144, "821746e": 144, "3393": 144, "699000": 144, "207072": 144, "938797": 144, "546795e": 144, "56015": 144, "386519": 144, "195416": 144, "138670": 144, "502": 144, "859899e": 144, "173573e": 144, "798102": 144, "040434": 144, "809219e": 144, "15960": 144, "261000": 144, "479686": 144, "323942": 144, "471635e": 144, "353020": 144, "537179": 144, "484596": 144, "269902": 144, "2155": 144, "301242e": 144, "936352e": 144, "787756": 144, "552231": 144, "821318e": 144, "socialregressor": 144, "sr": 144, "min_samples_split": 144, "876": [144, 152], "common": 144, "model_wrapp": 144, "__init__": [144, 155], "keyword": 144, "argument": 144, "model_path": 144, "divid": 144, "sampl": [144, 152], "confidence_level": 144, "95": [144, 147, 154, 158, 163], "289": 144, "_train_model": 144, "pi_low": 144, "pi_upp": 144, "nursing_home_count": 144, "hotel_count": 144, "theatre_count": 144, "cinema_count": 144, "secondary_vocational_education_institutions_count": 144, "university_count": 144, "stadium_count": 144, "kindergarten_count": 144, "hostel_count": 144, "post_count": 144, "swimming_pool_count": 144, "library_count": 144, "fire_safety_facilities_count": 144, "police_count": 144, "museum_count": 144, "bank_count": 144, "14296": 144, "014379": 144, "000832": 144, "001763": 144, "016099": 144, "039391": 144, "479495": 144, "105324": 144, "005666": 144, "296905": 144, "010605": 144, "072575": 144, "020337": 144, "040035": 144, "033931": 144, "033148": 144, "092938": 144, "037970": 144, "028900": 144, "064677": 144, "987647": 144, "3310": 144, "012930": 144, "803748": 144, "081753": 144, "202503": 144, "084357": 144, "137536": 144, "110656": 144, "230271": 144, "922528": 144, "070684": 144, "302535": 144, "109361": 144, "363499": 144, "212221": 144, "722693": 144, "204709": 144, "836241": 144, "587259": 144, "489967": 144, "555252": 144, "16148": 144, "249490": 144, "239592": 144, "481125": 144, "550649": 144, "687493": 144, "599196": 144, "781085": 144, "267505": 144, "173780": 144, "916293": 144, "557643": 144, "684464": 144, "686338": 144, "224791": 144, "782080": 144, "103293": 144, "445613": 144, "884544": 144, "571543": 144, "765625": 144, "17455": 144, "003019": 144, "009737": 144, "004039": 144, "006393": 144, "019949": 144, "001556": 144, "085916": 144, "000057": 144, "383974": 144, "001581": 144, "144662": 144, "030829": 144, "018814": 144, "171654": 144, "121550": 144, "095347": 144, "025819": 144, "626067": 144, "16291": 144, "013056": 144, "088273": 144, "002856": 144, "019799": 144, "034916": 144, "024223": 144, "249959": 144, "007760": 144, "771067": 144, "012497": 144, "444398": 144, "005997": 144, "135191": 144, "156082": 144, "167819": 144, "178831": 144, "075085": 144, "083318": 144, "011640": 144, "925919": 144, "statist": 144, "stats_df": 144, "calculate_interval_stat": 144, "interv": 144, "800304": 144, "000252": 144, "000069": 144, "000049": 144, "158654": 144, "000215": 144, "000184": 144, "995936": 144, "000027": 144, "833845": 144, "000129": 144, "949811": 144, "106655": 144, "000122": 144, "000830": 144, "134224": 144, "355738": 144, "000056": 144, "654914": 144, "321808": 144, "934067": 144, "099999": 144, "683720": 144, "214749": 144, "400317": 144, "064502": 144, "263688": 144, "839819": 144, "999986": 144, "761400": 144, "722426": 144, "808025": 144, "334574": 144, "968300": 144, "091033": 144, "599319": 144, "652114": 144, "200304": 144, "796808": 144, "152624": 144, "460287": 144, "560348": 144, "628682": 144, "023683": 144, "729038": 144, "571412": 144, "704440": 144, "497692": 144, "805113": 144, "051844": 144, "955599": 144, "280855": 144, "667316": 144, "653427": 144, "226640": 144, "697712": 144, "612669": 144, "000340": 144, "821733": 144, "011686": 144, "523892": 144, "877675": 144, "335098": 144, "436661": 144, "297617": 144, "118286": 144, "669386": 144, "459638": 144, "100385": 144, "902446": 144, "415354": 144, "780039": 144, "114143": 144, "099003": 144, "669316": 144, "999971": 144, "647817": 144, "395385": 144, "649416": 144, "coverage_percentag": 144, "mean_interval_width": 144, "mse": 144, "rmse": 144, "mae": 144, "r2": 144, "473684": 144, "421085": 144, "024088": 144, "155203": 144, "046052": 144, "272759": 144, "368421": 144, "772173": 144, "111585": 144, "109950": 144, "009036": 144, "276750": 144, "842105": 144, "547877": 144, "358543": 144, "598784": 144, "169514": 144, "364897": 144, "192982": 144, "437983": 144, "102323": 144, "319880": 144, "108495": 144, "146454": 144, "491228": 144, "577391": 144, "027018": 144, "013419": 144, "379245": 144, "678409": 144, "205866": 144, "898239": 144, "213197": 144, "493575": 144, "370108": 144, "360784": 144, "096632": 144, "047202": 144, "503562": 144, "576055": 144, "894737": 144, "231561": 144, "102410": 144, "320016": 144, "096631": 144, "361666": 144, "315789": 144, "174934": 144, "301057": 144, "128456": 144, "679345": 144, "827755": 144, "457503": 144, "267950": 144, "505971": 144, "253160": 144, "489247": 144, "park_count": 144, "614035": 144, "418581": 144, "817835": 144, "100955": 144, "457848": 144, "624552": 144, "multifunctional_center_count": 144, "98": [144, 147, 163], "596491": 144, "534885": 144, "495145": 144, "222761": 144, "450774": 144, "535752": 144, "901912": 144, "224587": 144, "055380": 144, "569804": 144, "435232": 144, "sports_halls_count": 144, "367853": 144, "672834": 144, "820265": 144, "181746": 144, "186414": 144, "771930": 144, "738856": 144, "686516": 144, "920030": 144, "798328": 144, "515673": 144, "363565": 144, "436128": 144, "175659": 144, "668863": 144, "818749": 144, "mall_count": 144, "266809": 144, "596958": 144, "756258": 144, "893124": 144, "747427": 144, "962443": 144, "069309": 144, "034074": 144, "393067": 144, "545571": 144, "930996": 144, "866621": 144, "930925": 144, "459623": 144, "535083": 144, "582380": 144, "738956": 144, "544272": 144, "565730": 144, "465928": 144, "601277": 144, "328383": 144, "573047": 144, "284873": 144, "448237": 144, "934491": 144, "888878": 144, "590108": 144, "845219": 144, "317789": 144, "543860": 144, "807037": 144, "529556": 144, "727706": 144, "368584": 144, "679995": 144, "964912": 144, "815160": 144, "405612": 144, "066857": 144, "086276": 144, "558713": 144, "719624": 144, "833359": 144, "912885": 144, "404326": 144, "646310": 144, "765682": 144, "956423": 144, "398722": 144, "454936": 144, "054753": 144, "070175": 144, "761644": 144, "774361": 144, "879978": 144, "325235": 144, "448727": 144, "789474": 144, "877662": 144, "181879": 144, "685592": 144, "007621": 144, "905130": 144, "visualize_predict": 144, "target_nam": 144, "posit": 144, "mask": 144, "filtered_pred_df": 144, "filtered_pi_low": 144, "filtered_pi_upp": 144, "filtered_y_test": 144, "slice": [144, 163], "full": [144, 165, 169, 174], "start_idx": 144, "end_idx": 144, "end": 144, "extract": [144, 151, 163], "linspac": 144, "pi_df": 144, "now": [144, 159], "store": 144, "lower_bound": 144, "upper_bound": 144, "marker": 144, "fill_between": 144, "alpha": 144, "configur": 144, "comparison": 144, "grid": [144, 151, 155, 163], "assum": 144, "obtain": [144, 152, 160, 176], "transpos": 144, "pred_df": 144, "ir": 144, "predict_with_interv": 144, "inverse_transform": 144, "descend": 144, "sorted_indic": 144, "argsort": 144, "sorted_ms": 144, "sorted_target": 144, "horizont": 144, "barh": 144, "skyblu": 144, "linestyl": 144, "lime_tabular": 144, "limetabularexplain": 144, "fill": [144, 152], "fillna": [144, 163], "evaluate_with_interv": 144, "helper": 144, "specif": 144, "predict_fn": 144, "correct": [144, 172], "x_df": 144, "tabular": 144, "training_data": 144, "arrai": 144, "feature_nam": 144, "class_nam": 144, "mode": 144, "task": [144, 152, 176], "select": [144, 148], "interpret": 144, "g": [144, 159, 176], "iloc": 144, "reshap": 144, "explan": 144, "explain_inst": 144, "real": 144, "as_list": 144, "explanation_list": 144, "15183": 144, "9534802613554785": 144, "1136": 144, "5860909439229887": 144, "3809469174382578": 144, "74914": 144, "528208": 144, "2871944980298722": 144, "23936306374227934": 144, "63000": 144, "1874804409055796": 144, "34922": 144, "156359": 144, "1421858470028649": 144, "12259403792263908": 144, "883053": 144, "12092895926078623": 144, "444312": 144, "4056059": 144, "10099483719723343": 144, "blocks_land_use_gdf": 147, "387861": 147, "999": [147, 153], "6644712": 147, "938": 147, "387898": 147, "6644768": 147, "387934": 147, "746": 147, "6644824": 147, "845": [147, 154], "388202": 147, "388348": 147, "6645181": 147, "924": [147, 159], "388955": 147, "6644954": 147, "389507": 147, "545": 147, "generate_geometry_featur": [147, 153], "blocks_features_gdf": 147, "914": [147, 152], "918": [147, 152], "29165": 147, "27it": 147, "corners_count": [147, 153], "387811": 147, "257163": 147, "644418e": 147, "109189": 147, "559722": 147, "1790": 147, "182603": 147, "186357": 147, "387931": 147, "811285": 147, "644396e": 147, "72838": 147, "889774": 147, "1626": 147, "063797": 147, "918795": 147, "388230": 147, "122121": 147, "645052e": 147, "134496": 147, "100428": 147, "1480": 147, "126322": 147, "554021": 147, "388513": 147, "077158": 147, "645068e": 147, "108999": 147, "835249": 147, "1546": 147, "823257": 147, "908831": 147, "389371": 147, "433283": 147, "644714e": 147, "164356": 147, "406931": 147, "2197": 147, "983249": 147, "324339": 147, "967": [147, 163], "968": [147, 163], "target_shar": 147, "blocks_id": 147, "landuseoptim": 147, "luo": 147, "res_df": 147, "population_s": 147, "n_gener": 147, "mutation_prob": 147, "n_gen": 147, "n_eval": 147, "n_nd": 147, "ep": 147, "0914873395": 147, "1144523497": 147, "ideal": 147, "0781781516": 147, "0697504645": 147, "0922243946": 147, "1150895082": 147, "2086888225": 147, "0362955085": 147, "000000e": 147, "0362269873": 147, "130": [147, 158, 163], "0159126744": 147, "0477094116": 147, "170": 147, "180": [147, 153, 163], "190": [147, 163], "0050881715": 147, "0034969770": 147, "210": [147, 151, 163], "220": [147, 163], "0014155321": 147, "230": [147, 158, 163], "0064667153": 147, "240": [147, 151, 163], "0400332670": 147, "260": [147, 163], "0084712670": 147, "270": [147, 151, 163], "0846586509": 147, "300": 147, "0121405555": 147, "310": 147, "320": 147, "0017296025": 147, "330": [147, 163], "360": 147, "370": [147, 163], "380": 147, "0286007670": 147, "390": [147, 152], "400": [147, 151, 163], "410": [147, 152], "420": [147, 163], "430": 147, "440": 147, "0289729798": 147, "450": [147, 151, 163], "0104330004": 147, "460": 147, "470": [147, 163], "480": [147, 163], "490": [147, 154], "0113978961": 147, "510": 147, "0103157549": 147, "520": [147, 163], "530": 147, "540": [147, 151], "560": 147, "570": 147, "0060698124": 147, "580": [147, 152], "590": 147, "600": 147, "610": [147, 163], "620": 147, "0107661662": 147, "630": 147, "0147008371": 147, "670": 147, "680": 147, "0214649602": 147, "690": 147, "720": [147, 163], "730": [147, 163], "740": 147, "0263487296": 147, "760": [147, 163], "0844521501": 147, "770": 147, "780": 147, "0077841329": 147, "790": [147, 151], "800": 147, "0082204478": 147, "810": [147, 151], "0073915551": 147, "830": 147, "840": 147, "850": 147, "860": 147, "890": 147, "900": [147, 152], "910": [147, 152], "930": 147, "0059969017": 147, "940": 147, "950": 147, "970": 147, "0546159771": 147, "980": 147, "990": 147, "0063171357": 147, "solut": [147, 151, 163, 176], "assigned_land_us": 147, "share_ms": 147, "adjacency_penalti": 147, "035492561216084254": 147, "2593212019104734": 147, "035493": 147, "259321": 147, "044256914631729864": 147, "1661670812536721": 147, "044257": 147, "166167": 147, "05263684384744122": 147, "15835383334955214": 147, "052637": 147, "158354": 147, "05854662600284991": 147, "1255095223473388": 147, "058547": 147, "125510": 147, "06213043548928794": 147, "1067124990352423": 147, "residentia": 147, "062130": 147, "106712": 147, "06700588458395144": 147, "07113174003059475": 147, "067006": 147, "071132": 147, "079948146612734": 147, "05258978176273955": 147, "079948": 147, "052590": 147, "08925728380062802": 147, "038751514097945805": 147, "089257": 147, "038752": 147, "13927148694530989": 147, "02508436674300687": 147, "139271": 147, "025084": 147, "17998316331805234": 147, "01155222181087819": 147, "179983": 147, "011552": 147, "simul": [148, 176], "anneal": [148, 176], "tpeoptim": [149, 151, 163], "weightedobject": [149, 151, 163], "weightedconstraint": [149, 151, 163], "facad": [149, 151, 163], "blocksolut": [149, 151], "gradientchoos": [149, 151, 163], "areasolut": [149, 151, 163], "ast": 149, "basic_servic": [149, 151, 163], "advanced_servic": [149, 151, 163], "comfort_servic": [149, 151, 163], "profiling_id": 149, "1536": [149, 150], "get_service_weight": [149, 151, 163], "service_nam": [149, 151, 163], "5714": [149, 151, 163], "2857": [149, 151, 163], "1429": [149, 151, 163], "chosen_service_typ": [149, 151, 163], "service_weight": [149, 151, 163], "save_max_capac": 149, "_max_capac": 149, "w": 149, "newlin": 149, "csvfile": 149, "get_max_capac": 149, "writer": 149, "writerow": 149, "write": 149, "header": 149, "shutil": 149, "move_csv_to_result": 149, "results_dir": 149, "mkdir": 149, "exist_ok": 149, "csv_file": 149, "endswith": 149, "src": 149, "dest": 149, "move": 149, "provision_data": 149, "blocks_lu": [149, 150, 151, 163], "var_adapt": [149, 151, 163], "add_service_typ": [149, 150, 151, 163], "start_prov": 149, "start_provis": 149, "num_param": [149, 151, 163], "max_ev": [149, 151, 163], "constraint": [149, 151, 163], "tpe_optim": [149, 151, 163], "vars_choos": [149, 151, 163], "simplechoos": [149, 151], "best_x": [149, 151, 163], "best_val": [149, 151, 163], "perc": [149, 151, 163], "func_ev": [149, 151, 163], "max_run": [149, 151, 163], "timeout": [149, 151, 163], "60000": [149, 151], "initial_runs_num": [149, 151, 163], "solution_df": [149, 151, 163], "solution_to_services_df": [149, 151, 163], "to_csv": [149, 151, 163], "_servic": 149, "read_csv": [149, 151, 163], "tpe_provis": 149, "best_provis": 149, "max_val": 149, "iterrow": [149, 163], "literal_ev": 149, "_chosen_service_typ": 149, "kei": [149, 151, 163], "opt": [149, 165], "provisions_data": 149, "opt_prov": 149, "servicesoptim": 150, "variables_df": 150, "objective_valu": 150, "capacity_school": [151, 163], "capacity_kindergarten": 151, "capacity_hospit": 151, "capacity_polyclin": [151, 163], "capacity_pitch": 151, "capacity_swimming_pool": [151, 163], "capacity_theatr": 151, "capacity_train_st": [151, 163], "ivan": 151, "ovan": 151, "9358": 151, "9359": 151, "9360": 151, "9361": 151, "9362": 151, "9363": 151, "9364": 151, "9365": 151, "9366": 151, "9367": 151, "9368": 151, "2059": 151, "notari": [151, 163], "aeroway_termin": [151, 163], "crematorium": [151, 163], "randomord": [151, 163], "prioriti": [151, 163], "vars_ord": [151, 163], "num_top": [151, 163], "memori": [151, 163], "7236c4ec": 151, "218f": 151, "472c": 151, "9099": 151, "73a2aff3b9ff": 151, "172": [151, 163], "trial": [151, 163], "7590525543245839": 151, "x_12": [151, 163], "x_6": [151, 163], "x_5": [151, 163], "x_14": [151, 163], "10000": [151, 163], "x_15": [151, 163], "x_24": [151, 163], "x_4": [151, 163], "x_19": [151, 163], "x_13": [151, 163], "x_23": [151, 163], "x_20": [151, 163], "x_11": [151, 163], "x_21": [151, 163], "x_17": [151, 163], "9100": [151, 163], "x_1": [151, 163], "x_9": [151, 163], "20000": [151, 163], "x_2": [151, 163], "x_7": [151, 163], "x_25": [151, 163], "x_18": [151, 163], "2800": 151, "x_16": [151, 163], "x_0": [151, 163], "x_22": [151, 163], "3520": [151, 163], "x_3": [151, 163], "18500": [151, 163], "x_10": [151, 163], "x_8": [151, 163], "178": [151, 163], "7591407549631215": 151, "2802": 151, "20001": [151, 163], "151": [151, 163], "10006": 151, "18512": 151, "3533": [151, 163], "7538942265405484": 151, "15893": 151, "3990": 151, "837": 151, "519": 151, "25045": 151, "16569": 151, "582": [151, 152], "6321306966077258": 151, "70111": 151, "912": 151, "48633": 151, "2804": 151, "1001": 151, "17000": 151, "7304942620673358": 151, "70126": 151, "778": [151, 163], "47921": 151, "2882": 151, "293": [151, 163], "731829308796308": 151, "308": [151, 163], "1189": 151, "607": 151, "19915": 151, "1460": 151, "28608": 151, "1608": 151, "8173": 151, "21918": 151, "1350": 151, "14916": 151, "2692": 151, "18538": 151, "6892": 151, "3169": 151, "282": [151, 163], "1653": 151, "1103": 151, "512": [151, 163], "526": 151, "145": [151, 154, 158, 163], "49876": 151, "2635": 151, "7698": 151, "683": [151, 154], "377": 151, "958": 151, "7762": 151, "548": 151, "6880": 151, "20640": 151, "9646": 151, "7322": 151, "14419": 151, "11194": 151, "719": 151, "28408": 151, "5851": 151, "3535": 151, "13993": 151, "3480": 151, "873": [151, 163], "2591": 151, "8146": 151, "809": 151, "8061746636207854": 151, "335": 151, "19998": 151, "11550": 151, "5993": 151, "16670": [151, 160], "3089": 151, "561": 151, "18264": 151, "2808": 151, "728": [151, 163], "16344": 151, "2403": 151, "304": 151, "299": [151, 163], "1979": 151, "1156": 151, "4818": 151, "4874": 151, "6314": 151, "1045": 151, "238": 151, "1093": 151, "713": [151, 152], "849": 151, "266": 151, "7158014038955691": 151, "757": 151, "42661": 151, "774": [151, 152], "1916": 151, "131": [151, 158], "3066": 151, "16515": 151, "1700": 151, "4527": 151, "2777": 151, "1438": 151, "1799": [151, 163], "738": 151, "1550": 151, "2555": 151, "623": 151, "30003": 151, "401": 151, "csv": [151, 163], "2200": 151, "solution_area_df": [151, 163], "get_solution_area_df": [151, 163], "solution_area": [151, 163], "2631": 151, "79087": 151, "734512": 151, "28192": 151, "14060": 151, "041691": 151, "plot_df": [151, 163], "df_called_obj": [151, 163], "called_obj": [151, 163], "scatter": [151, 163], "concat": [151, 163], "tpe": [151, 163], "linewidth": [151, 163], "\u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435": [151, 163], "\u0442\u043e\u0447\u0435\u043a": [151, 163], "\u0446\u0432\u0435\u0442\u043e\u043c": [151, 163], "\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438": [151, 163], "\u043e\u0442": [151, 163], "\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430": [151, 163], "\u043e\u0441\u0435\u0439": [151, 163], "\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430": [151, 163], "across": [151, 163], "\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435": [151, 163], "\u0433\u0440\u0430\u0444\u0438\u043a\u0430": [151, 163], "tpe_df": [151, 163], "tpe_trial": 151, "save_delta_demand": [151, 163], "population_df": [151, 163], "demand_servic": [151, 163], "473": [151, 153, 163], "186": [151, 152, 163], "394": [151, 163], "step": 152, "alreadi": [152, 167], "\u0441\u0430\u043d\u043a\u0442": 152, "\u043f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433": 152, "\u0432\u0430\u0441\u0438\u043b\u0435\u043e\u0441\u0442\u0440\u043e\u0432\u0441\u043a\u0438\u0439": 152, "\u0440\u0430\u0439\u043e\u043d": 152, "bc_tag": 152, "highwai": 152, "cross": 152, "living_street": 152, "motorwai": 152, "motorway_link": 152, "motorway_junct": 152, "pedestrian": 152, "primari": 152, "primary_link": 152, "racewai": 152, "secondari": 152, "secondary_link": 152, "tertiari": 152, "tertiary_link": 152, "track": 152, "trunk": 152, "trunk_link": 152, "turning_circl": 152, "turning_loop": 152, "unclassifi": 152, "emergency_access": 152, "rail": 152, "riverbank": 152, "basin": 152, "dock": 152, "canal": 152, "pond": 152, "natur": 152, "bai": 152, "waterwai": 152, "river": 152, "ditch": 152, "lake": 152, "features_from_polygon": 152, "geom_typ": 152, "isin": [152, 163], "multilinestr": 152, "inplac": 152, "636": 152, "674": [152, 163], "685": [152, 163], "716": 152, "wrapper": [152, 158], "726": [152, 163], "741": 152, "756": 152, "_exclude_polygon": 152, "exclud": 152, "_get_enclosur": 152, "up": [152, 176], "enclosur": 152, "235": [152, 154, 163], "_fill_hol": 152, "hole": 152, "insid": [152, 168, 173], "263": 152, "_filter_overlap": 152, "overlap": 152, "313": [152, 154, 163], "gover": 152, "tag": 152, "345659": 152, "049": 152, "6646239": 152, "362": [152, 163], "345672": 152, "commerci": 152, "346755": 152, "014": 152, "6647579": 152, "789": 152, "346728": 152, "345964": 152, "693": 152, "6646155": 152, "952": 152, "346283": 152, "885": 152, "345753": 152, "722": 152, "6648393": 152, "345900": 152, "6648481": 152, "707": [152, 163], "345896": 152, "garag": 152, "retail": 152, "grass": 152, "farmland": 152, "brownfield": 152, "forest": 152, "recreation_ground": 152, "religi": 152, "flowerb": 152, "militari": 152, "022": 152, "345747": 152, "414": 152, "6646456": 152, "345751": 152, "077": 152, "6646449": 152, "404": 152, "345047": 152, "432": 152, "6648157": 152, "204": [152, 163], "345028": 152, "835": 152, "496234": 152, "093738": 152, "115348": 152, "344951": 152, "065": 152, "6648110": 152, "344977": 152, "865": [152, 163], "346686": 152, "6647227": 152, "682": 152, "346691": 152, "173093": 152, "116007": 152, "005135": 152, "167767": 152, "There": [152, 165], "few": 152, "travel": 152, "time": 152, "centroid": 152, "minut": 152, "euclidian": 152, "person": 152, "public": [152, 176], "976": [152, 163], "489": [152, 163], "pt_walk_join": [152, 158], "join_pt_walk_graph": [152, 158], "compos": [152, 158], "269": [152, 158], "20350": 152, "574": 152, "575": [152, 154], "576": 152, "577": 152, "578": 152, "579": 152, "581": 152, "623535": 152, "679688": 152, "523438": 152, "148438": [152, 163], "71875": [152, 163], "585938": 152, "484375": 152, "890625": [152, 158], "015625": 152, "789062": 152, "820312": [152, 155], "859375": 152, "625000": [152, 158, 163], "078125": 152, "531250": 152, "371094": 152, "992188": 152, "437500": 152, "328125": [152, 158], "742188": 152, "640625": 152, "070312": 152, "664062": 152, "703125": [152, 158], "976562": 152, "953125": [152, 158], "468750": [152, 158], "921875": 152, "398438": 152, "152344": 152, "37500": 152, "445312": [152, 158], "343750": 152, "453125": 152, "804688": 152, "281250": [152, 158], "554688": 152, "898438": 152, "648438": 152, "562500": [152, 158, 163], "460938": 152, "843750": 152, "671875": 152, "171875": [152, 158], "296875": [152, 158], "273438": 152, "140625": 152, "90625": [152, 163], "062500": 152, "515625": [152, 158], "390625": 152, "812500": [152, 158, 163], "421875": [152, 158], "984375": [152, 158], "734375": 152, "718750": 152, "265625": 152, "584": 152, "For": [152, 159], "live": 152, "option": [152, 171], "avail": 152, "is_living_tag": 152, "hous": 152, "apart": 152, "detach": 152, "terrac": 152, "dormitori": 152, "appli": 152, "lambda": 152, "b": 152, "to_numer": 152, "level": 152, "impute_build": [152, 154], "default_living_demand": 152, "_before_valid": [152, 154], "882": [152, 154], "651": 152, "345707": 152, "6647277": 152, "813": 152, "345713": 152, "366": 152, "646392": 152, "7543": 152, "231961": 152, "6788": 152, "908765": 152, "323196": 152, "3767": 152, "347982": 152, "6648704": 152, "347978": 152, "314": 152, "165": [152, 163], "940125": 152, "347167": 152, "301": 152, "6648613": 152, "347159": 152, "307": [152, 153], "2809": 152, "517622": 152, "1126": 152, "346209": 152, "6646888": 152, "346222": 152, "815": 152, "66468": 152, "364": [152, 163], "041807": 152, "1965": 152, "347965": 152, "6648464": 152, "347967": 152, "454": 152, "805168": 152, "float64": [152, 163], "271251": 152, "buildings_block": 152, "003": 152, "287": 152, "67273": 152, "384879": 152, "386154": 152, "823127": 152, "295058": 152, "918381": 152, "91095": 152, "904746": 152, "9827": 152, "3411": 152, "837763": 152, "54589": 152, "404201": 152, "24939": 152, "758056": 152, "29649": 152, "646145": 152, "831": [152, 163], "And": [152, 169, 174], "onc": 152, "again": [152, 167], "amen": 152, "impute_servic": 152, "345500": 152, "447": [152, 163], "6647564": 152, "348138": 152, "425": 152, "6647505": 152, "348050": 152, "437": [152, 163], "6648161": 152, "823": 152, "346370": 152, "983": 152, "6648934": 152, "348061": 152, "507": 152, "6648770": 152, "schools_block": 152, "884": 152, "abov": [152, 163], "current": 152, "accord": [152, 166, 171], "pair": 152, "mention": 152, "prov_df": 152, "901": 152, "173": [152, 163], "40it": 152, "009": 152, "429": 152, "636132": 152, "154": [152, 153, 163], "213": 152, "356": 152, "518194": 152, "939744": 152, "364393": 152, "913217": 152, "059718": 152, "184617": 152, "764095": 152, "740083": 152, "769434": 152, "385968": 152, "354115": 152, "4135": 152, "809669": 152, "31474": 152, "102302": 152, "734423": 152, "108401": 152, "456861": 152, "514061": 152, "309773": 152, "690227": 152, "spacematrix_clust": 152, "934850": 152, "154953": 152, "326747": 152, "748314": 152, "889017": 152, "348045": 152, "679297": 152, "883299": 152, "035799": 152, "450012": 152, "487791": 152, "568041": 152, "area_acc": 152, "863": 153, "2543": 153, "49it": 153, "20it": 153, "889": 153, "33601": 153, "54it": 153, "77it": 153, "074": 153, "044667e": 153, "6143": 153, "314507": 153, "1162": 153, "200035": 153, "601595": 153, "194869": 153, "2617": 153, "332757": 153, "366521": 153, "462764": 153, "361267": 153, "471119": 153, "896302": 153, "721341": 153, "082285": 153, "607910e": 153, "041864e": 153, "49608": 153, "287083": 153, "105797e": 153, "209196": 153, "006375": 153, "693107e": 153, "320304": 153, "183357": 153, "139760e": 153, "317313e": 153, "1305": 153, "400332": 153, "317": 153, "246543": 153, "863753": 153, "785382": 153, "597": [153, 154, 163], "665957": 153, "1468": 153, "011981": 153, "772712": 153, "31676": 153, "295727": 153, "11274": 153, "223157": 153, "801933e": 153, "896075e": 153, "778924": 153, "918622e": 153, "16814": 153, "066800": 153, "462475e": 153, "5984": 153, "460523": 153, "141337e": 153, "630058e": 153, "2744": 153, "750098": 153, "485": 153, "977014": 153, "288792": 153, "107639": 153, "834": 153, "379506": 153, "327729": 153, "351635": 153, "060801": 153, "73425": 153, "396513": 153, "147926": 153, "134761": 153, "290163e": 153, "054893e": 153, "15601": 153, "413707": 153, "415380e": 153, "42765": 153, "977253": 153, "866134e": 153, "86158": 153, "277855": 153, "333885e": 153, "964145e": 153, "2588": 153, "389797": 153, "944022": 153, "061572": 153, "632711": 153, "337210": 153, "74605": 153, "407472": 153, "009836": 153, "98200": 153, "965151": 153, "85526": 153, "117570": 153, "301070e": 153, "511022e": 153, "5163": 153, "741011": 153, "993060e": 153, "45348": 153, "689679": 153, "735815e": 153, "39495": 153, "511670": 153, "524417e": 153, "781752e": 153, "5826": 153, "501550": 153, "1227": 153, "910036": 153, "974675": 153, "864688": 153, "1115": 153, "790852": 153, "955522": 153, "428530": 153, "1596": 153, "850837": 153, "174063": 153, "372893": 153, "528856": 153, "606604": 153, "501157e": 153, "370091e": 153, "73940": 153, "049330": 153, "089342e": 153, "191553": 153, "965597": 153, "761614e": 153, "581998": 153, "260421": 153, "154420e": 153, "platform": 154, "building_area": 154, "storeys_count": 154, "number_of_floor": 154, "population_balanc": 154, "26319": 154, "6682759": 154, "26315": 154, "668": 154, "155945": 154, "609161": 154, "26247": 154, "648": 154, "6682735": 154, "641": 154, "26255": 154, "964": 154, "709000": 154, "396301": 154, "25121": 154, "6682189": 154, "25110": 154, "493": 154, "651001": 154, "144": 154, "9893": 154, "114260": 154, "25099": 154, "6681917": 154, "25097": 154, "721": 154, "190125": 154, "12620": 154, "827100": 154, "25138": 154, "368": [154, 163], "6681976": 154, "699": 154, "25150": 154, "524": 154, "1543": 154, "230220": 154, "22685": 154, "484400": 154, "546783": 154, "312698": 154, "14133": 154, "020020": 154, "4239": 154, "905760": 154, "18029": 154, "753125": 154, "5408": 154, "926025": 154, "32407": 154, "834620": 154, "9722": 154, "350220": 154, "20052": 154, "6681274": 154, "20064": 154, "11237": 154, "6677237": 154, "11255": 154, "698": [154, 163], "20636": 154, "615": 154, "6680834": 154, "20659": 154, "2126": 154, "14715": 154, "947": 154, "6676494": 154, "498": [154, 163], "14711": 154, "1719": 154, "15507": 154, "6677446": 154, "15490": 154, "735": 154, "883": 155, "727": 155, "9312": 155, "30110": 155, "nn": 155, "torch_geometr": 155, "graphsag": 155, "multiscalegnn": 155, "self": [155, 163], "input_s": 155, "output_s": 155, "hidden_dim": 155, "num_lay": 155, "dropout": 155, "in_channel": 155, "hidden_channel": 155, "out_channel": 155, "act": 155, "relu": 155, "norm": [155, 176], "layernorm": 155, "jk": 155, "cat": 155, "output_lay": 155, "sequenti": 155, "linear": [155, 158, 176], "forward": [155, 160], "edge_index": 155, "output": [155, 166], "standardscal": 155, "torchgraphimputationstrategi": 155, "strategy_param": 155, "scaler": 155, "developmentimput": 155, "train_param": 155, "optimizer_param": 155, "lr": 155, "1e": 155, "17307": 155, "18692": 155, "1217": 155, "neighbor": [155, 159], "292": [155, 163], "7315": 155, "1172": 155, "4998": 155, "7312": 155, "7316": 155, "4999": 155, "7313": 155, "85184": 155, "078863": 155, "21291": 155, "979269": 155, "39861": 155, "840942": 155, "tmp": 155, "87589": 155, "210938": 155, "22851": 155, "40249": 155, "480469": 155, "216": [158, 163], "line_locate_point": 158, "413": 158, "weakli": 158, "detect": 158, "island": 158, "rout": 158, "adjust": 158, "max_dist": 158, "incorrect": 158, "16310": 158, "16311": 158, "16312": 158, "16313": 158, "16314": 158, "507812": 158, "359375": 158, "609375": 158, "132": [158, 163], "241": 158, "234375": 158, "156250": 158, "406250": 158, "968750": 158, "229": 158, "239": 158, "875000": 158, "781250": 158, "828125": 158, "945312": 158, "874": 159, "networkx": 159, "oper": 159, "neighbors_gdf": 159, "edgecolor": [159, 163], "black": [159, 163], "subgraph": 159, "context_graph": 159, "straight": 160, "euclidean": 160, "distance_matrix": 160, "3671": 160, "12961": 160, "13090": 160, "13595": 160, "15265": 160, "14353": 160, "9158": 160, "9098": 160, "15711": 160, "17578": 160, "16948": 160, "16749": 160, "16924": 160, "16681": 160, "16784": 160, "18689": 160, "18670": 160, "18856": 160, "16211": 160, "16307": 160, "15388": 160, "13265": 160, "16733": 160, "11665": 160, "11595": 160, "13218": 160, "15133": 160, "14921": 160, "14756": 160, "14718": 160, "15004": 160, "14742": 160, "14913": 160, "17132": 160, "16709": 160, "16841": 160, "296": 160, "8238": 160, "27812": 160, "5769": 160, "5855": 160, "5922": 160, "23053": 160, "30366": 160, "29468": 160, "29249": 160, "29139": 160, "29359": 160, "29181": 160, "30714": 160, "31092": 160, "31321": 160, "8010": 160, "27986": 160, "5499": 160, "5793": 160, "5861": 160, "22975": 160, "30525": 160, "29645": 160, "29426": 160, "29318": 160, "29540": 160, "29319": 160, "29364": 160, "30912": 160, "31275": 160, "31501": 160, "28569": 160, "3100": 160, "5055": 160, "5079": 160, "17022": 160, "30518": 160, "30065": 160, "30010": 160, "30284": 160, "30029": 160, "30170": 160, "32214": 160, "32013": 160, "32165": 160, "med_dist_df": 160, "is_project": 163, "capacity_bakeri": 163, "capacity_bank": 163, "capacity_bar": 163, "capacity_caf": 163, "capacity_dog_park": 163, "capacity_religion": 163, "capacity_restaur": 163, "capacity_supermarket": 163, "capacity_univers": 163, "capacity_veterinari": 163, "388726": 163, "6637020": 163, "627": 163, "388713": 163, "127981e": 163, "6637030": 163, "171425e": 163, "374726": 163, "595": 163, "6642638": 163, "322": 163, "374534": 163, "487": 163, "491": 163, "593088e": 163, "2643": 163, "2644": 163, "2645": 163, "2646": 163, "2647": 163, "2648": 163, "2649": 163, "2650": 163, "2651": 163, "2652": 163, "162": 163, "75000": 163, "93750": 163, "65625": 163, "155": 163, "21875": 163, "40625": 163, "09375": 163, "87500": 163, "159": 163, "152": 163, "171": 163, "209": 163, "233": 163, "62500": 163, "2653": 163, "get_land_use_min_site_area": 163, "land_use_df": 163, "units_df": 163, "land_use_": 163, "lu_service_typ": 163, "to_list": 163, "lu_unit": 163, "min_site_area": 163, "max_time_sec": 163, "max_prov_ev": 163, "max_opt_run": 163, "89it": 163, "212": 163, "adea122": 163, "ad09": 163, "4c4c": 163, "b258": 163, "587d9cbc3883": 163, "439": 163, "70666108849601": 163, "x_499": 163, "x_999": 163, "x_95": 163, "x_1771": 163, "x_2140": 163, "x_1057": 163, "x_641": 163, "x_433": 163, "x_928": 163, "x_1697": 163, "x_1173": 163, "x_1540": 163, "x_1995": 163, "x_966": 163, "x_673": 163, "x_701": 163, "x_603": 163, "x_596": 163, "x_2249": 163, "x_2171": 163, "x_2228": 163, "x_1026": 163, "x_765": 163, "x_412": 163, "x_690": 163, "x_1876": 163, "x_1909": 163, "x_1474": 163, "x_2033": 163, "x_1793": 163, "x_1213": 163, "x_1836": 163, "x_1565": 163, "x_1361": 163, "x_134": 163, "x_1000": 163, "x_2057": 163, "x_576": 163, "x_1624": 163, "x_511": 163, "x_944": 163, "x_456": 163, "x_526": 163, "x_1638": 163, "x_1597": 163, "x_496": 163, "x_1904": 163, "x_1612": 163, "x_141": 163, "x_1905": 163, "x_1206": 163, "x_1014": 163, "x_70": 163, "x_1469": 163, "x_489": 163, "30000": 163, "x_1585": 163, "x_275": 163, "x_894": 163, "x_372": 163, "x_572": 163, "x_2191": 163, "x_785": 163, "x_135": 163, "x_1606": 163, "x_1754": 163, "x_235": 163, "2000": 163, "x_442": 163, "x_1023": 163, "x_1947": 163, "x_1684": 163, "x_164": 163, "x_2061": 163, "x_728": 163, "x_2154": 163, "x_127": 163, "x_729": 163, "x_2222": 163, "x_1940": 163, "x_2094": 163, "x_230": 163, "6000": 163, "x_1733": 163, "x_2207": 163, "x_388": 163, "x_1951": 163, "x_359": 163, "x_1260": 163, "x_1208": 163, "x_1918": 163, "x_495": 163, "x_1362": 163, "x_948": 163, "x_1221": 163, "x_1886": 163, "x_949": 163, "x_382": 163, "x_2051": 163, "x_1493": 163, "3500": 163, "x_1144": 163, "x_571": 163, "x_993": 163, "x_1804": 163, "x_750": 163, "x_863": 163, "x_588": 163, "x_1669": 163, "x_1403": 163, "x_2106": 163, "x_1022": 163, "x_29": 163, "x_1521": 163, "x_1103": 163, "x_955": 163, "x_318": 163, "x_449": 163, "x_2059": 163, "x_69": 163, "x_568": 163, "x_1369": 163, "x_2069": 163, "x_1046": 163, "x_924": 163, "x_977": 163, "x_731": 163, "x_1636": 163, "x_1003": 163, "x_1664": 163, "x_240": 163, "x_193": 163, "x_1001": 163, "x_1019": 163, "x_346": 163, "x_1699": 163, "x_424": 163, "x_807": 163, "x_578": 163, "x_118": 163, "x_552": 163, "x_710": 163, "x_401": 163, "x_2148": 163, "x_1692": 163, "x_1285": 163, "x_1185": 163, "x_962": 163, "x_1913": 163, "x_561": 163, "x_532": 163, "x_586": 163, "x_1725": 163, "x_665": 163, "x_348": 163, "x_1701": 163, "x_1211": 163, "x_1747": 163, "x_1738": 163, "x_1603": 163, "x_791": 163, "x_1778": 163, "x_1029": 163, "x_1518": 163, "x_47": 163, "x_872": 163, "x_263": 163, "x_2013": 163, "x_923": 163, "x_279": 163, "x_97": 163, "x_234": 163, "x_1270": 163, "x_952": 163, "x_1450": 163, "x_601": 163, "x_2221": 163, "x_1576": 163, "x_1186": 163, "3000": 163, "x_637": 163, "x_45": 163, "x_1049": 163, "x_719": 163, "x_1012": 163, "x_811": 163, "x_1955": 163, "x_774": 163, "x_198": 163, "x_838": 163, "x_575": 163, "x_1219": 163, "x_1926": 163, "x_2096": 163, "x_2099": 163, "x_1460": 163, "x_1462": 163, "12000": 163, "x_919": 163, "x_1209": 163, "x_2233": 163, "x_1094": 163, "x_1009": 163, "x_76": 163, "x_242": 163, "x_1912": 163, "x_1472": 163, "x_243": 163, "x_1111": 163, "x_286": 163, "x_116": 163, "x_1180": 163, "x_31": 163, "x_2104": 163, "x_1674": 163, "x_500": 163, "x_874": 163, "x_998": 163, "x_1183": 163, "x_920": 163, "x_1340": 163, "x_1205": 163, "x_46": 163, "x_360": 163, "x_83": 163, "x_269": 163, "x_345": 163, "x_485": 163, "x_849": 163, "x_591": 163, "x_2176": 163, "x_1878": 163, "x_284": 163, "x_1135": 163, "x_2174": 163, "x_1281": 163, "x_621": 163, "x_2175": 163, "x_663": 163, "x_1857": 163, "x_283": 163, "x_1113": 163, "x_484": 163, "x_903": 163, "x_1036": 163, "x_459": 163, "x_1320": 163, "x_927": 163, "x_302": 163, "x_865": 163, "x_1099": 163, "x_1427": 163, "x_1558": 163, "x_1248": 163, "x_104": 163, "x_1855": 163, "x_1732": 163, "x_1255": 163, "x_529": 163, "x_1813": 163, "x_1395": 163, "x_1311": 163, "x_974": 163, "x_140": 163, "x_1702": 163, "x_1863": 163, "x_1805": 163, "x_1596": 163, "x_446": 163, "x_1677": 163, "x_2208": 163, "x_859": 163, "x_254": 163, "x_513": 163, "x_1240": 163, "x_1134": 163, "x_399": 163, "x_961": 163, "x_1354": 163, "x_827": 163, "x_327": 163, "x_452": 163, "x_842": 163, "x_2137": 163, "x_662": 163, "x_1749": 163, "x_738": 163, "x_2076": 163, "x_1942": 163, "x_1010": 163, "x_81": 163, "x_1810": 163, "x_579": 163, "x_581": 163, "x_1843": 163, "x_404": 163, "x_1115": 163, "x_1520": 163, "x_570": 163, "x_685": 163, "x_1165": 163, "x_248": 163, "x_604": 163, "x_175": 163, "x_753": 163, "x_291": 163, "x_1149": 163, "x_1372": 163, "x_1420": 163, "x_1436": 163, "x_1198": 163, "x_2198": 163, "x_173": 163, "x_334": 163, "x_981": 163, "x_316": 163, "x_26": 163, "x_1421": 163, "x_2110": 163, "x_177": 163, "x_85": 163, "x_1544": 163, "x_136": 163, "x_1831": 163, "x_921": 163, "x_902": 163, "x_1430": 163, "x_890": 163, "x_1933": 163, "x_522": 163, "x_1879": 163, "x_514": 163, "x_1758": 163, "x_616": 163, "x_684": 163, "x_2251": 163, "x_766": 163, "x_1077": 163, "x_451": 163, "x_1070": 163, "x_2219": 163, "x_132": 163, "x_1064": 163, "x_1189": 163, "x_333": 163, "x_2121": 163, "x_98": 163, "x_2218": 163, "x_2019": 163, "x_1554": 163, "x_943": 163, "x_856": 163, "x_2274": 163, "x_1901": 163, "x_620": 163, "x_1570": 163, "x_725": 163, "x_730": 163, "x_384": 163, "x_898": 163, "x_990": 163, "x_1481": 163, "x_439": 163, "x_469": 163, "x_1413": 163, "x_27": 163, "x_911": 163, "x_1125": 163, "x_1440": 163, "x_843": 163, "x_1252": 163, "x_2077": 163, "x_1964": 163, "x_1824": 163, "x_1090": 163, "x_1059": 163, "x_1828": 163, "x_1314": 163, "x_846": 163, "x_941": 163, "x_1931": 163, "x_1751": 163, "x_1074": 163, "x_880": 163, "x_965": 163, "x_205": 163, "x_1105": 163, "x_1025": 163, "x_1161": 163, "x_460": 163, "x_2254": 163, "x_609": 163, "x_305": 163, "x_297": 163, "x_2043": 163, "x_1167": 163, "x_1447": 163, "x_92": 163, "x_2016": 163, "x_1508": 163, "x_1966": 163, "x_1216": 163, "x_1516": 163, "x_2271": 163, "x_677": 163, "x_1566": 163, "x_737": 163, "x_308": 163, "x_805": 163, "x_1739": 163, "x_802": 163, "x_1513": 163, "x_398": 163, "x_1238": 163, "x_702": 163, "x_1686": 163, "x_1330": 163, "x_1321": 163, "x_1848": 163, "x_128": 163, "x_1356": 163, "x_782": 163, "x_789": 163, "x_256": 163, "x_1452": 163, "x_592": 163, "x_1201": 163, "x_574": 163, "x_274": 163, "x_1415": 163, "x_1013": 163, "x_1948": 163, "x_1477": 163, "x_1323": 163, "x_540": 163, "x_819": 163, "x_1731": 163, "x_298": 163, "x_40": 163, "x_2185": 163, "x_1193": 163, "x_477": 163, "x_1617": 163, "x_1181": 163, "x_832": 163, "x_2203": 163, "x_409": 163, "x_143": 163, "x_1510": 163, "x_1657": 163, "x_895": 163, "x_1781": 163, "x_528": 163, "x_391": 163, "x_896": 163, "x_2215": 163, "x_310": 163, "x_1342": 163, "x_1457": 163, "x_288": 163, "x_375": 163, "x_1915": 163, "x_88": 163, "x_324": 163, "x_146": 163, "x_817": 163, "x_1145": 163, "x_801": 163, "x_82": 163, "x_773": 163, "x_2227": 163, "x_2056": 163, "x_2220": 163, "x_1124": 163, "x_883": 163, "x_590": 163, "x_329": 163, "x_2095": 163, "x_1300": 163, "x_1368": 163, "x_1423": 163, "x_1587": 163, "x_231": 163, "x_762": 163, "x_1827": 163, "x_2119": 163, "x_1833": 163, "x_377": 163, "x_1335": 163, "x_854": 163, "x_163": 163, "x_1107": 163, "x_455": 163, "x_208": 163, "x_707": 163, "x_1635": 163, "x_1454": 163, "x_314": 163, "x_905": 163, "x_1988": 163, "x_1380": 163, "x_2243": 163, "x_1961": 163, "x_538": 163, "x_736": 163, "x_161": 163, "x_837": 163, "x_389": 163, "x_145": 163, "x_273": 163, "x_2040": 163, "x_1978": 163, "x_304": 163, "x_915": 163, "x_625": 163, "x_1222": 163, "x_1785": 163, "x_793": 163, "x_824": 163, "x_1184": 163, "x_1268": 163, "x_2044": 163, "x_289": 163, "x_2017": 163, "x_453": 163, "x_780": 163, "x_881": 163, "x_1176": 163, "x_1114": 163, "x_1075": 163, "x_1243": 163, "x_1840": 163, "x_1140": 163, "x_1723": 163, "x_67": 163, "x_813": 163, "x_1893": 163, "x_2265": 163, "x_457": 163, "x_1655": 163, "x_1658": 163, "x_255": 163, "x_845": 163, "x_355": 163, "x_2264": 163, "x_443": 163, "x_1375": 163, "x_438": 163, "x_1654": 163, "x_2239": 163, "x_214": 163, "x_1822": 163, "x_506": 163, "x_1522": 163, "x_1963": 163, "x_1649": 163, "x_1117": 163, "x_1716": 163, "x_1953": 163, "x_1916": 163, "x_2032": 163, "x_1212": 163, "x_1283": 163, "x_285": 163, "x_909": 163, "x_972": 163, "x_2162": 163, "x_1775": 163, "x_1957": 163, "x_2006": 163, "x_2085": 163, "x_1363": 163, "x_180": 163, "x_1166": 163, "x_599": 163, "x_221": 163, "x_2255": 163, "x_569": 163, "x_1887": 163, "x_1744": 163, "x_1718": 163, "x_201": 163, "x_2195": 163, "x_301": 163, "x_416": 163, "x_265": 163, "x_1975": 163, "x_358": 163, "x_354": 163, "x_696": 163, "x_2054": 163, "x_1797": 163, "x_2242": 163, "x_87": 163, "x_1389": 163, "x_2258": 163, "x_715": 163, "x_1479": 163, "x_1309": 163, "x_1954": 163, "x_1056": 163, "x_589": 163, "x_2101": 163, "x_593": 163, "x_1750": 163, "x_632": 163, "x_151": 163, "x_1790": 163, "x_1121": 163, "x_946": 163, "x_1818": 163, "x_518": 163, "x_1903": 163, "x_1047": 163, "x_524": 163, "x_995": 163, "x_1708": 163, "x_1018": 163, "x_1095": 163, "x_2210": 163, "x_192": 163, "x_770": 163, "x_363": 163, "x_1496": 163, "x_295": 163, "x_839": 163, "x_2151": 163, "x_189": 163, "x_2261": 163, "x_797": 163, "x_1035": 163, "x_42": 163, "x_1595": 163, "x_709": 163, "x_1560": 163, "x_1629": 163, "x_467": 163, "x_441": 163, "x_2060": 163, "x_1614": 163, "x_2125": 163, "x_75": 163, "x_686": 163, "x_516": 163, "x_1086": 163, "x_39": 163, "x_744": 163, "x_1846": 163, "x_470": 163, "x_708": 163, "x_1949": 163, "x_426": 163, "x_2200": 163, "x_312": 163, "x_1803": 163, "x_368": 163, "x_33": 163, "x_321": 163, "x_1835": 163, "x_1226": 163, "x_1773": 163, "x_1538": 163, "x_2189": 163, "x_38": 163, "x_1299": 163, "x_1647": 163, "x_828": 163, "x_185": 163, "x_1076": 163, "x_2166": 163, "x_1008": 163, "x_803": 163, "x_1969": 163, "x_711": 163, "x_156": 163, "x_852": 163, "x_931": 163, "x_1207": 163, "x_1394": 163, "x_147": 163, "x_798": 163, "x_1779": 163, "x_954": 163, "x_2244": 163, "x_2007": 163, "x_1825": 163, "x_1757": 163, "x_1178": 163, "x_937": 163, "x_1318": 163, "x_1360": 163, "x_59": 163, "x_1795": 163, "x_2050": 163, "x_617": 163, "x_49": 163, "x_760": 163, "x_2179": 163, "x_2201": 163, "x_190": 163, "x_2072": 163, "x_229": 163, "x_1547": 163, "x_1884": 163, "x_435": 163, "x_746": 163, "x_534": 163, "x_1239": 163, "x_945": 163, "x_2048": 163, "x_564": 163, "x_113": 163, "x_2118": 163, "x_611": 163, "x_1690": 163, "x_1742": 163, "x_1997": 163, "x_1534": 163, "x_628": 163, "x_280": 163, "x_2193": 163, "x_2065": 163, "x_959": 163, "x_1083": 163, "x_232": 163, "x_1131": 163, "x_468": 163, "x_508": 163, "x_2156": 163, "x_1911": 163, "x_479": 163, "x_1571": 163, "x_1535": 163, "x_929": 163, "x_1217": 163, "x_309": 163, "x_1371": 163, "x_1132": 163, "x_1819": 163, "x_1393": 163, "x_2184": 163, "x_2107": 163, "x_876": 163, "x_650": 163, "x_1567": 163, "x_1191": 163, "x_1251": 163, "x_1549": 163, "x_1935": 163, "x_1958": 163, "x_1261": 163, "x_669": 163, "x_72": 163, "x_1246": 163, "x_2266": 163, "x_211": 163, "x_394": 163, "x_2240": 163, "x_577": 163, "x_1257": 163, "x_1378": 163, "x_1433": 163, "x_2149": 163, "x_466": 163, "x_1313": 163, "x_292": 163, "x_2005": 163, "x_1058": 163, "x_606": 163, "x_942": 163, "x_953": 163, "x_481": 163, "x_1782": 163, "x_1528": 163, "x_1622": 163, "x_1859": 163, "x_176": 163, "x_1787": 163, "x_912": 163, "x_1414": 163, "x_553": 163, "x_1328": 163, "x_2064": 163, "x_1643": 163, "x_2161": 163, "x_1096": 163, "x_2214": 163, "x_1838": 163, "x_2211": 163, "x_1623": 163, "x_668": 163, "x_1883": 163, "x_718": 163, "x_1545": 163, "x_1923": 163, "x_1902": 163, "x_1634": 163, "x_1980": 163, "x_2192": 163, "x_244": 163, "x_1319": 163, "x_853": 163, "x_2000": 163, "x_2155": 163, "x_430": 163, "x_1227": 163, "x_2182": 163, "x_612": 163, "x_1509": 163, "x_1569": 163, "x_720": 163, "x_366": 163, "x_1172": 163, "x_41": 163, "x_1755": 163, "x_1322": 163, "x_1470": 163, "x_1346": 163, "x_1959": 163, "x_741": 163, "x_2268": 163, "x_1365": 163, "x_1515": 163, "x_1724": 163, "x_1258": 163, "x_1920": 163, "x_1856": 163, "x_1939": 163, "x_1602": 163, "x_726": 163, "x_1307": 163, "x_537": 163, "x_1109": 163, "x_1698": 163, "x_228": 163, "x_703": 163, "x_381": 163, "x_1670": 163, "x_71": 163, "x_447": 163, "x_1377": 163, "x_1129": 163, "x_1084": 163, "x_224": 163, "x_904": 163, "x_735": 163, "x_1347": 163, "x_1769": 163, "x_1993": 163, "x_2144": 163, "x_1122": 163, "x_64": 163, "x_160": 163, "x_2068": 163, "x_877": 163, "x_1505": 163, "x_1880": 163, "x_1425": 163, "x_1355": 163, "x_1366": 163, "x_1482": 163, "x_1944": 163, "x_1501": 163, "x_1792": 163, "x_215": 163, "x_437": 163, "x_2187": 163, "x_925": 163, "x_982": 163, "x_795": 163, "x_629": 163, "x_1852": 163, "x_683": 163, "x_454": 163, "x_187": 163, "x_1741": 163, "x_1442": 163, "x_1263": 163, "x_1228": 163, "x_1632": 163, "x_356": 163, "x_1073": 163, "x_2126": 163, "x_100": 163, "x_1673": 163, "x_850": 163, "x_1494": 163, "x_1637": 163, "x_994": 163, "x_610": 163, "x_2024": 163, "x_2039": 163, "x_1225": 163, "x_769": 163, "x_1350": 163, "x_1921": 163, "x_2134": 163, "x_1719": 163, "x_169": 163, "x_1065": 163, "x_716": 163, "x_1826": 163, "x_293": 163, "x_1849": 163, "x_1118": 163, "x_395": 163, "x_462": 163, "x_2018": 163, "x_2037": 163, "x_2090": 163, "x_112": 163, "x_1736": 163, "x_1801": 163, "x_101": 163, "x_1937": 163, "x_155": 163, "x_320": 163, "x_199": 163, "x_1376": 163, "x_1265": 163, "x_1006": 163, "x_1986": 163, "x_536": 163, "x_1409": 163, "x_502": 163, "x_916": 163, "x_1341": 163, "x_1598": 163, "x_556": 163, "x_2168": 163, "x_527": 163, "x_996": 163, "x_988": 163, "x_748": 163, "x_517": 163, "x_482": 163, "x_2142": 163, "x_162": 163, "x_1137": 163, "x_504": 163, "x_1081": 163, "x_2029": 163, "x_1160": 163, "x_1373": 163, "x_52": 163, "x_1253": 163, "x_1326": 163, "x_1676": 163, "x_1907": 163, "x_1768": 163, "x_732": 163, "x_1561": 163, "x_1066": 163, "x_918": 163, "x_2133": 163, "x_1499": 163, "x_2010": 163, "x_2259": 163, "x_374": 163, "x_1582": 163, "x_2132": 163, "x_1112": 163, "x_1325": 163, "x_631": 163, "x_99": 163, "x_1024": 163, "x_233": 163, "x_126": 163, "x_830": 163, "x_1495": 163, "x_68": 163, "x_1645": 163, "x_800": 163, "x_419": 163, "x_428": 163, "x_1210": 163, "x_864": 163, "x_2232": 163, "x_296": 163, "x_914": 163, "x_691": 163, "x_559": 163, "x_1088": 163, "x_475": 163, "x_1525": 163, "x_2014": 163, "x_1864": 163, "x_1656": 163, "x_1336": 163, "x_450": 163, "x_2186": 163, "x_1646": 163, "x_619": 163, "x_1514": 163, "x_661": 163, "x_1139": 163, "x_1451": 163, "x_759": 163, "x_1809": 163, "x_1930": 163, "x_985": 163, "x_1101": 163, "x_973": 163, "x_28": 163, "x_1865": 163, "x_1416": 163, "x_565": 163, "x_860": 163, "x_1406": 163, "x_1098": 163, "x_2181": 163, "x_1929": 163, "x_1735": 163, "x_613": 163, "x_1504": 163, "x_122": 163, "x_1550": 163, "x_2206": 163, "x_1943": 163, "x_771": 163, "x_1280": 163, "x_107": 163, "x_306": 163, "x_580": 163, "x_566": 163, "x_1044": 163, "x_1721": 163, "x_573": 163, "x_109": 163, "x_1592": 163, "x_1175": 163, "x_777": 163, "x_1453": 163, "x_2256": 163, "x_1600": 163, "x_80": 163, "x_1287": 163, "x_1419": 163, "x_2002": 163, "x_1039": 163, "x_1041": 163, "x_2272": 163, "x_1332": 163, "x_1854": 163, "x_640": 163, "x_432": 163, "x_851": 163, "x_1203": 163, "x_656": 163, "x_857": 163, "x_1277": 163, "x_1449": 163, "x_980": 163, "x_1628": 163, "x_1204": 163, "x_649": 163, "x_1304": 163, "x_2084": 163, "x_407": 163, "x_405": 163, "x_2269": 163, "x_1542": 163, "x_1455": 163, "x_236": 163, "x_414": 163, "x_1052": 163, "x_1851": 163, "x_1908": 163, "x_1483": 163, "x_1512": 163, "x_1668": 163, "x_1872": 163, "x_2138": 163, "x_812": 163, "x_174": 163, "x_644": 163, "x_1110": 163, "x_1821": 163, "x_282": 163, "x_1352": 163, "x_600": 163, "x_987": 163, "x_510": 163, "x_1667": 163, "x_816": 163, "x_1343": 163, "x_264": 163, "x_567": 163, "x_1748": 163, "x_840": 163, "x_2273": 163, "x_1588": 163, "x_862": 163, "x_2081": 163, "x_1713": 163, "x_743": 163, "x_1972": 163, "x_1490": 163, "x_722": 163, "x_94": 163, "x_1991": 163, "x_96": 163, "x_1745": 163, "x_557": 163, "x_1429": 163, "x_1976": 163, "x_1317": 163, "x_657": 163, "x_1609": 163, "x_1269": 163, "x_836": 163, "x_2216": 163, "x_157": 163, "x_2079": 163, "x_2224": 163, "x_103": 163, "x_51": 163, "x_1399": 163, "x_713": 163, "x_1038": 163, "x_1020": 163, "x_2102": 163, "x_721": 163, "x_1353": 163, "x_2103": 163, "x_2226": 163, "x_133": 163, "x_1446": 163, "x_218": 163, "x_582": 163, "x_1092": 163, "x_651": 163, "x_1106": 163, "x_562": 163, "x_544": 163, "x_1072": 163, "x_1162": 163, "x_1536": 163, "x_512": 163, "x_2082": 163, "x_1737": 163, "x_1383": 163, "x_1766": 163, "x_823": 163, "x_2129": 163, "x_2223": 163, "x_1990": 163, "x_225": 163, "x_251": 163, "x_1152": 163, "x_781": 163, "x_471": 163, "x_936": 163, "x_1345": 163, "x_1711": 163, "x_1196": 163, "x_1291": 163, "x_984": 163, "x_105": 163, "x_1671": 163, "x_970": 163, "x_670": 163, "x_311": 163, "x_2231": 163, "x_799": 163, "x_1665": 163, "x_486": 163, "x_1040": 163, "x_1466": 163, "x_65": 163, "x_2028": 163, "x_2089": 163, "x_1982": 163, "x_1435": 163, "x_1563": 163, "x_550": 163, "x_1666": 163, "x_2250": 163, "x_1562": 163, "x_2199": 163, "x_1820": 163, "x_1163": 163, "x_153": 163, "x_1232": 163, "x_1895": 163, "x_2152": 163, "x_653": 163, "x_806": 163, "x_2141": 163, "x_967": 163, "x_1594": 163, "x_1127": 163, "x_487": 163, "x_1461": 163, "x_1079": 163, "x_60": 163, "x_688": 163, "x_385": 163, "x_492": 163, "x_1618": 163, "x_74": 163, "x_1464": 163, "x_754": 163, "x_1983": 163, "x_1272": 163, "x_362": 163, "x_411": 163, "x_913": 163, "x_1298": 163, "x_1772": 163, "x_1424": 163, "x_991": 163, "x_714": 163, "x_2113": 163, "x_241": 163, "x_2021": 163, "x_168": 163, "x_458": 163, "x_129": 163, "x_1051": 163, "x_614": 163, "x_521": 163, "x_1760": 163, "x_89": 163, "x_415": 163, "x_223": 163, "x_1839": 163, "x_692": 163, "x_183": 163, "x_624": 163, "x_53": 163, "x_689": 163, "x_870": 163, "x_968": 163, "x_697": 163, "x_2217": 163, "x_1027": 163, "x_2035": 163, "x_78": 163, "x_90": 163, "x_2275": 163, "x_422": 163, "x_347": 163, "x_1370": 163, "x_1067": 163, "x_1484": 163, "x_1089": 163, "x_2205": 163, "x_361": 163, "x_1123": 163, "x_335": 163, "x_117": 163, "x_1784": 163, "x_922": 163, "x_1037": 163, "x_1799": 163, "x_2027": 163, "x_509": 163, "x_1815": 163, "x_1080": 163, "x_958": 163, "x_1580": 163, "x_152": 163, "x_1985": 163, "x_2163": 163, "x_326": 163, "x_879": 163, "x_1578": 163, "x_1028": 163, "x_1230": 163, "x_888": 163, "x_1392": 163, "x_1054": 163, "x_1519": 163, "x_1608": 163, "x_1338": 163, "x_535": 163, "x_1492": 163, "x_2128": 163, "x_784": 163, "x_775": 163, "x_1788": 163, "x_2073": 163, "x_1431": 163, "x_1174": 163, "x_1215": 163, "x_1730": 163, "x_1881": 163, "x_1627": 163, "x_463": 163, "x_1104": 163, "x_2257": 163, "x_267": 163, "x_858": 163, "x_473": 163, "x_1834": 163, "x_1467": 163, "x_869": 163, "x_695": 163, "x_598": 163, "x_682": 163, "x_887": 163, "x_1575": 163, "x_317": 163, "x_776": 163, "x_910": 163, "x_124": 163, "x_294": 163, "x_111": 163, "x_1445": 163, "x_1158": 163, "x_1680": 163, "x_917": 163, "x_2160": 163, "x_1032": 163, "x_2153": 163, "x_1223": 163, "x_1384": 163, "x_643": 163, "x_390": 163, "x_1882": 163, "x_478": 163, "x_2071": 163, "x_1710": 163, "x_1259": 163, "x_1712": 163, "x_1068": 163, "x_1043": 163, "x_778": 163, "x_1465": 163, "x_1610": 163, "x_503": 163, "x_2190": 163, "x_956": 163, "x_299": 163, "x_1390": 163, "x_1564": 163, "x_50": 163, "x_403": 163, "x_387": 163, "x_2234": 163, "x_1703": 163, "x_679": 163, "x_287": 163, "x_674": 163, "x_764": 163, "x_1922": 163, "x_1556": 163, "x_37": 163, "x_1996": 163, "x_465": 163, "x_2116": 163, "x_768": 163, "x_555": 163, "x_2260": 163, "x_1615": 163, "x_2229": 163, "x_2146": 163, "x_322": 163, "x_2157": 163, "x_1625": 163, "x_960": 163, "x_926": 163, "x_259": 163, "x_897": 163, "x_154": 163, "x_1611": 163, "x_1633": 163, "x_541": 163, "x_108": 163, "x_1405": 163, "x_1899": 163, "x_930": 163, "x_1411": 163, "x_1170": 163, "x_123": 163, "x_1267": 163, "x_1063": 163, "x_2109": 163, "x_139": 163, "x_110": 163, "x_1195": 163, "x_790": 163, "x_494": 163, "x_779": 163, "x_1917": 163, "x_166": 163, "x_2067": 163, "x_1289": 163, "x_1498": 163, "x_1102": 163, "x_584": 163, "x_1045": 163, "x_2049": 163, "x_1919": 163, "x_1577": 163, "x_542": 163, "x_1398": 163, "x_671": 163, "x_1679": 163, "x_1444": 163, "x_2127": 163, "x_423": 163, "x_1960": 163, "x_1331": 163, "x_2062": 163, "x_323": 163, "x_1841": 163, "x_1329": 163, "x_1294": 163, "x_1722": 163, "x_809": 163, "x_1506": 163, "x_1761": 163, "x_331": 163, "x_79": 163, "x_2108": 163, "x_1662": 163, "x_2105": 163, "x_182": 163, "x_195": 163, "x_1660": 163, "x_1559": 163, "x_1746": 163, "x_989": 163, "x_420": 163, "x_868": 163, "x_1224": 163, "x_216": 163, "x_2169": 163, "x_1143": 163, "x_130": 163, "x_1245": 163, "x_1337": 163, "x_1968": 163, "x_1936": 163, "x_515": 163, "x_1774": 163, "x_1119": 163, "x_886": 163, "x_1780": 163, "x_1478": 163, "x_1434": 163, "x_464": 163, "x_2025": 163, "x_672": 163, "x_2124": 163, "x_787": 163, "x_1344": 163, "x_1091": 163, "x_2238": 163, "x_1126": 163, "x_1443": 163, "x_618": 163, "x_1422": 163, "x_1382": 163, "x_549": 163, "x_483": 163, "x_131": 163, "x_1108": 163, "x_1791": 163, "x_1458": 163, "x_150": 163, "x_705": 163, "x_1159": 163, "x_1497": 163, "x_277": 163, "x_810": 163, "x_1407": 163, "x_1133": 163, "x_337": 163, "x_976": 163, "x_249": 163, "x_237": 163, "x_520": 163, "x_1359": 163, "x_1244": 163, "x_1860": 163, "x_1156": 163, "x_605": 163, "x_694": 163, "x_1485": 163, "x_889": 163, "x_595": 163, "x_1557": 163, "x_219": 163, "x_1694": 163, "x_144": 163, "x_634": 163, "x_1823": 163, "x_250": 163, "x_1187": 163, "x_1507": 163, "x_474": 163, "x_77": 163, "x_2026": 163, "x_1397": 163, "x_1061": 163, "x_1642": 163, "x_1438": 163, "x_1417": 163, "x_1700": 163, "x_866": 163, "x_1591": 163, "x_1619": 163, "x_1989": 163, "x_1866": 163, "x_1231": 163, "x_548": 163, "x_1284": 163, "x_115": 163, "x_1786": 163, "x_226": 163, "x_875": 163, "x_1910": 163, "x_2114": 163, "x_1333": 163, "x_1120": 163, "x_1589": 163, "x_1847": 163, "x_2070": 163, "x_1743": 163, "x_1275": 163, "x_488": 163, "x_258": 163, "x_339": 163, "x_2042": 163, "x_1164": 163, "x_1808": 163, "x_493": 163, "x_1607": 163, "x_1296": 163, "x_623": 163, "x_392": 163, "x_2270": 163, "x_1599": 163, "x_1367": 163, "x_2111": 163, "x_257": 163, "x_554": 163, "x_583": 163, "x_2165": 163, "x_1432": 163, "x_2012": 163, "x_1652": 163, "x_2178": 163, "x_125": 163, "x_957": 163, "x_1932": 163, "x_900": 163, "x_386": 163, "x_2120": 163, "x_675": 163, "x_2078": 163, "x_2015": 163, "x_434": 163, "x_755": 163, "x_633": 163, "x_1387": 163, "x_138": 163, "x_2170": 163, "x_271": 163, "x_1488": 163, "x_328": 163, "x_202": 163, "x_1087": 163, "x_1601": 163, "x_2098": 163, "x_417": 163, "x_63": 163, "x_44": 163, "x_1526": 163, "x_831": 163, "x_622": 163, "x_884": 163, "x_1214": 163, "x_2020": 163, "x_1017": 163, "x_1641": 163, "x_1672": 163, "x_1928": 163, "x_1004": 163, "x_808": 163, "x_844": 163, "x_2263": 163, "x_397": 163, "x_587": 163, "x_1412": 163, "x_336": 163, "x_560": 163, "x_373": 163, "x_742": 163, "x_206": 163, "x_655": 163, "x_543": 163, "x_1685": 163, "x_1273": 163, "x_278": 163, "x_1364": 163, "x_1992": 163, "x_1965": 163, "x_1715": 163, "x_57": 163, "x_1241": 163, "x_645": 163, "x_1850": 163, "x_1197": 163, "x_357": 163, "x_1179": 163, "x_2046": 163, "x_281": 163, "x_1274": 163, "x_1242": 163, "x_1830": 163, "x_681": 163, "x_847": 163, "x_1870": 163, "x_1021": 163, "x_1093": 163, "x_1974": 163, "x_1776": 163, "x_188": 163, "x_1182": 163, "x_1502": 163, "x_1869": 163, "x_2245": 163, "x_2063": 163, "x_2055": 163, "x_1308": 163, "x_1898": 163, "x_2139": 163, "x_1889": 163, "x_402": 163, "x_1987": 163, "x_594": 163, "x_1408": 163, "x_1616": 163, "x_1062": 163, "x_1082": 163, "x_833": 163, "x_519": 163, "x_1765": 163, "x_523": 163, "x_2115": 163, "x_1555": 163, "x_1386": 163, "x_184": 163, "x_413": 163, "x_1586": 163, "x_636": 163, "x_1016": 163, "x_1489": 163, "x_638": 163, "x_983": 163, "x_1200": 163, "x_1546": 163, "x_951": 163, "x_1034": 163, "x_1727": 163, "x_700": 163, "x_1486": 163, "x_209": 163, "x_615": 163, "x_826": 163, "x_1977": 163, "x_1491": 163, "x_1391": 163, "x_55": 163, "x_1767": 163, "x_1527": 163, "x_654": 163, "x_148": 163, "x_114": 163, "x_1297": 163, "x_1644": 163, "x_379": 163, "x_533": 163, "x_2147": 163, "x_1783": 163, "x_1858": 163, "x_1042": 163, "x_2183": 163, "x_1543": 163, "x_933": 163, "x_969": 163, "x_848": 163, "x_1441": 163, "x_200": 163, "x_2123": 163, "x_2262": 163, "x_2075": 163, "x_1011": 163, "x_247": 163, "x_2135": 163, "x_829": 163, "x_639": 163, "x_61": 163, "x_1351": 163, "x_792": 163, "x_2212": 163, "x_1357": 163, "x_1279": 163, "x_2237": 163, "x_1639": 163, "x_1927": 163, "x_892": 163, "x_841": 163, "x_1796": 163, "x_2045": 163, "x_376": 163, "x_1832": 163, "x_34": 163, "x_448": 163, "x_1069": 163, "x_212": 163, "x_1806": 163, "x_498": 163, "x_1696": 163, "x_2130": 163, "x_1007": 163, "x_1402": 163, "x_178": 163, "x_2158": 163, "x_1837": 163, "x_1154": 163, "x_2247": 163, "x_378": 163, "x_1410": 163, "x_642": 163, "x_43": 163, "x_2122": 163, "x_1861": 163, "x_436": 163, "x_2248": 163, "x_1867": 163, "x_62": 163, "x_149": 163, "x_1302": 163, "x_1055": 163, "x_2197": 163, "x_159": 163, "x_1150": 163, "x_1811": 163, "x_1605": 163, "x_1529": 163, "x_558": 163, "x_1705": 163, "x_338": 163, "x_393": 163, "x_1979": 163, "x_2177": 163, "x_1315": 163, "x_315": 163, "x_2145": 163, "x_1532": 163, "x_1817": 163, "x_1428": 163, "x_1691": 163, "x_58": 163, "x_380": 163, "x_1048": 163, "x_2131": 163, "x_712": 163, "x_1728": 163, "x_1829": 163, "x_1192": 163, "x_1659": 163, "x_167": 163, "x_364": 163, "x_1798": 163, "x_893": 163, "x_1085": 163, "x_1339": 163, "x_2003": 163, "x_1202": 163, "x_2241": 163, "x_2117": 163, "x_1374": 163, "x_1426": 163, "x_1962": 163, "x_818": 163, "x_396": 163, "x_476": 163, "x_1385": 163, "x_2011": 163, "x_203": 163, "x_181": 163, "x_1199": 163, "x_86": 163, "x_1998": 163, "x_1235": 163, "x_1584": 163, "x_1050": 163, "x_1539": 163, "x_1762": 163, "x_1648": 163, "x_2209": 163, "x_1188": 163, "x_2023": 163, "x_207": 163, "x_2058": 163, "x_757": 163, "x_170": 163, "x_1249": 163, "x_2086": 163, "x_2030": 163, "x_2150": 163, "x_106": 163, "x_332": 163, "x_1247": 163, "x_1593": 163, "x_120": 163, "x_882": 163, "x_907": 163, "x_1706": 163, "x_1473": 163, "x_2180": 163, "x_300": 163, "x_1729": 163, "x_1396": 163, "x_1153": 163, "x_1752": 163, "x_1404": 163, "x_1456": 163, "x_102": 163, "x_607": 163, "x_1146": 163, "x_820": 163, "x_1511": 163, "x_429": 163, "x_1548": 163, "x_325": 163, "x_1845": 163, "x_1693": 163, "x_1789": 163, "x_2246": 163, "x_783": 163, "x_2004": 163, "x_986": 163, "x_30": 163, "x_1704": 163, "x_733": 163, "x_1324": 163, "x_935": 163, "x_2194": 163, "x_1626": 163, "x_461": 163, "x_835": 163, "x_1945": 163, "x_1033": 163, "x_1071": 163, "x_1770": 163, "x_899": 163, "x_717": 163, "x_871": 163, "x_1891": 163, "x_1950": 163, "x_1100": 163, "x_501": 163, "x_1468": 163, "x_1303": 163, "x_758": 163, "x_1621": 163, "x_1148": 163, "x_734": 163, "x_1568": 163, "x_319": 163, "x_54": 163, "x_142": 163, "x_1888": 163, "x_1631": 163, "x_1381": 163, "x_767": 163, "x_266": 163, "x_658": 163, "x_646": 163, "x_2038": 163, "x_186": 163, "x_2164": 163, "x_680": 163, "x_1816": 163, "x_2196": 163, "x_1897": 163, "x_749": 163, "x_1138": 163, "x_260": 163, "x_1900": 163, "x_370": 163, "x_659": 163, "x_227": 163, "x_752": 163, "x_1005": 163, "x_1282": 163, "x_723": 163, "x_1777": 163, "x_963": 163, "x_1579": 163, "x_313": 163, "x_2252": 163, "x_1141": 163, "x_1533": 163, "x_1305": 163, "x_1234": 163, "x_1256": 163, "x_885": 163, "x_786": 163, "x_1906": 163, "x_1689": 163, "x_2253": 163, "x_1894": 163, "x_1807": 163, "x_627": 163, "x_1271": 163, "x_878": 163, "x_1814": 163, "x_2167": 163, "x_1590": 163, "x_932": 163, "x_1581": 163, "x_246": 163, "x_1640": 163, "x_2136": 163, "x_406": 163, "x_1524": 163, "x_1553": 163, "x_2092": 163, "x_1740": 163, "x_950": 163, "x_2213": 163, "x_222": 163, "x_350": 163, "x_678": 163, "x_747": 163, "x_2053": 163, "x_585": 163, "x_272": 163, "x_2083": 163, "x_1530": 163, "x_530": 163, "x_371": 163, "x_507": 163, "x_2188": 163, "x_119": 163, "x_891": 163, "x_855": 163, "x_1572": 163, "x_1877": 163, "x_1379": 163, "x_213": 163, "x_1218": 163, "x_340": 163, "x_1651": 163, "x_1973": 163, "x_270": 163, "x_1030": 163, "x_1155": 163, "x_1613": 163, "x_491": 163, "x_238": 163, "x_1312": 163, "x_1890": 163, "x_1873": 163, "x_1229": 163, "x_740": 163, "x_121": 163, "x_666": 163, "x_739": 163, "x_1844": 163, "x_418": 163, "x_794": 163, "x_1800": 163, "x_1714": 163, "x_1278": 163, "x_525": 163, "x_268": 163, "x_1842": 163, "x_172": 163, "x_1994": 163, "x_1266": 163, "x_1053": 163, "x_1695": 163, "x_2066": 163, "x_2143": 163, "x_505": 163, "x_1853": 163, "x_1802": 163, "x_1574": 163, "x_2202": 163, "x_1707": 163, "x_1316": 163, "x_1682": 163, "x_901": 163, "x_344": 163, "x_1116": 163, "x_1237": 163, "x_1292": 163, "x_56": 163, "x_1956": 163, "x_2036": 163, "x_383": 163, "x_431": 163, "x_1128": 163, "x_1661": 163, "x_261": 163, "x_2034": 163, "x_197": 163, "x_706": 163, "x_1500": 163, "x_1276": 163, "x_1459": 163, "x_531": 163, "x_1970": 163, "x_1759": 163, "x_472": 163, "x_563": 163, "x_2100": 163, "x_204": 163, "x_1896": 163, "x_307": 163, "x_2052": 163, "x_1286": 163, "x_815": 163, "x_727": 163, "x_772": 163, "x_349": 163, "x_1675": 163, "x_191": 163, "x_597": 163, "x_217": 163, "x_2225": 163, "x_1764": 163, "x_1885": 163, "x_1171": 163, "x_2087": 163, "x_1925": 163, "x_761": 163, "x_1687": 163, "x_539": 163, "x_2080": 163, "x_1147": 163, "x_1630": 163, "x_1177": 163, "x_1262": 163, "x_545": 163, "x_2022": 163, "x_2031": 163, "x_547": 163, "x_165": 163, "x_2159": 163, "x_1812": 163, "x_724": 163, "x_938": 163, "x_196": 163, "x_1763": 163, "x_1503": 163, "x_421": 163, "x_1002": 163, "x_1136": 163, "x_1475": 163, "x_66": 163, "x_704": 163, "x_342": 163, "x_814": 163, "x_1620": 163, "x_2041": 163, "x_1734": 163, "x_699": 163, "x_1078": 163, "x_1794": 163, "x_1142": 163, "x_1862": 163, "x_630": 163, "x_239": 163, "x_1726": 163, "x_1334": 163, "x_992": 163, "x_1190": 163, "x_1015": 163, "x_253": 163, "x_546": 163, "x_1753": 163, "x_1946": 163, "24000": 163, "x_1874": 163, "x_1290": 163, "x_1984": 163, "x_353": 163, "x_997": 163, "x_2074": 163, "x_490": 163, "x_660": 163, "x_676": 163, "x_2088": 163, "x_1097": 163, "x_2204": 163, "x_602": 163, "x_425": 163, "x_158": 163, "x_2172": 163, "x_1250": 163, "x_84": 163, "x_2236": 163, "x_834": 163, "x_1418": 163, "x_1264": 163, "x_330": 163, "x_48": 163, "x_1934": 163, "x_440": 163, "x_427": 163, "x_822": 163, "x_861": 163, "x_664": 163, "x_290": 163, "x_1301": 163, "x_647": 163, "x_1537": 163, "x_1868": 163, "x_1288": 163, "x_367": 163, "x_1552": 163, "x_2008": 163, "x_1541": 163, "x_445": 163, "x_1583": 163, "x_1388": 163, "x_947": 163, "x_1653": 163, "x_1349": 163, "x_1448": 163, "x_1924": 163, "x_979": 163, "x_1678": 163, "x_1717": 163, "x_1941": 163, "x_1060": 163, "x_2093": 163, "x_2097": 163, "x_93": 163, "x_352": 163, "x_964": 163, "x_908": 163, "x_497": 163, "x_1756": 163, "x_137": 163, "x_2267": 163, "x_210": 163, "x_1709": 163, "x_1688": 163, "x_171": 163, "x_262": 163, "x_667": 163, "x_1327": 163, "x_1981": 163, "x_2173": 163, "x_1348": 163, "x_763": 163, "x_1517": 163, "x_934": 163, "x_32": 163, "x_2047": 163, "x_940": 163, "x_343": 163, "x_1952": 163, "x_698": 163, "x_1400": 163, "x_1523": 163, "x_400": 163, "x_1130": 163, "x_1914": 163, "x_369": 163, "x_36": 163, "x_245": 163, "x_1480": 163, "x_1439": 163, "x_1604": 163, "x_971": 163, "x_975": 163, "x_1892": 163, "x_821": 163, "x_365": 163, "x_978": 163, "x_825": 163, "x_652": 163, "x_480": 163, "x_1531": 163, "x_1401": 163, "x_1551": 163, "x_1220": 163, "x_1169": 163, "x_2112": 163, "x_1650": 163, "x_220": 163, "x_1875": 163, "x_2091": 163, "x_1967": 163, "x_35": 163, "x_1236": 163, "x_252": 163, "x_1031": 163, "x_408": 163, "x_2235": 163, "x_626": 163, "x_804": 163, "x_410": 163, "x_1471": 163, "x_179": 163, "x_1295": 163, "x_1871": 163, "x_648": 163, "x_1999": 163, "x_1157": 163, "x_873": 163, "x_351": 163, "x_1310": 163, "x_341": 163, "x_1437": 163, "x_1254": 163, "x_1358": 163, "x_91": 163, "x_1681": 163, "x_444": 163, "x_551": 163, "x_608": 163, "x_1720": 163, "x_687": 163, "x_756": 163, "x_73": 163, "x_1663": 163, "x_1293": 163, "x_1971": 163, "x_745": 163, "x_1306": 163, "x_194": 163, "x_693": 163, "x_1233": 163, "x_751": 163, "x_2001": 163, "x_939": 163, "x_2230": 163, "x_1476": 163, "x_2009": 163, "x_1463": 163, "x_1938": 163, "x_788": 163, "x_1151": 163, "x_867": 163, "x_1194": 163, "x_303": 163, "x_635": 163, "x_1573": 163, "x_276": 163, "x_1168": 163, "x_796": 163, "x_906": 163, "x_1683": 163, "x_1487": 163, "7066610884960103": 163, "271": 163, "3004": 163, "3523": 163, "3503": 163, "10001": 163, "733": 163, "18501": 163, "9109": 163, "10007": 163, "2008": 163, "708": 163, "3085": 163, "449": 163, "10004": 163, "3504": 163, "2004": 163, "701": 163, "18513": 163, "2002": 163, "672": 163, "6022": 163, "9104": 163, "3093": 163, "2997": 163, "705": 163, "723": 163, "3527": 163, "3521": 163, "2011": 163, "30023": 163, "30102": 163, "12094": 163, "3001": 163, "30329": 163, "3006": 163, "9101": 163, "9106": 163, "12001": 163, "203": 163, "10008": 163, "2003": 163, "445": 163, "3525": 163, "24012": 163, "20002": 163, "3524": 163, "6040": 163, "12053": 163, "452": 163, "3536": 163, "2005": 163, "10002": 163, "436": 163, "731": 163, "2009": 163, "3551": 163, "12009": 163, "18607": 163, "718": 163, "207": 163, "153": 163, "669": 163, "3002": 163, "12014": 163, "12003": 163, "12010": 163, "3003": 163, "3575": 163, "12002": 163, "9103": 163, "3501": 163, "12011": 163, "6922742800520252": 163, "255": 163, "3396": 163, "5388": 163, "2296": 163, "2069": 163, "2171": 163, "13088": 163, "348": 163, "486": 163, "742": 163, "7247": 163, "2063": 163, "5436": 163, "424": 163, "2108": 163, "3519": 163, "2064": 163, "621": 163, "1221": 163, "2611": 163, "388": 163, "5154": 163, "2219": 163, "5558": 163, "2548": 163, "537": 163, "345": 163, "471": 163, "342": 163, "227": 163, "745": 163, "336": 163, "2073": 163, "1445": 163, "2962": 163, "161": 163, "4912": 163, "407": 163, "2014": 163, "4406": 163, "1423": 163, "1634": 163, "1413": 163, "961": 163, "247": 163, "318": 163, "1428": 163, "1913": 163, "5518": 163, "387": 163, "5391": 163, "428": 163, "222": 163, "3581": 163, "931": 163, "4019": 163, "5932": 163, "385": 163, "3583": 163, "298": 163, "715": 163, "126": 163, "1740": 163, "5399": 163, "11557": 163, "5433": 163, "5338": 163, "2077": 163, "1416": 163, "638": 163, "258": 163, "7380": 163, "1036": 163, "1482": 163, "3651": 163, "205": 163, "455": 163, "4841": 163, "6002": 163, "5596": 163, "1025": 163, "2276": 163, "2364": 163, "279": 163, "678": 163, "2166": 163, "3509": 163, "469": 163, "4261": 163, "1779": 163, "4267": 163, "3205": 163, "598": 163, "4157": 163, "7949": 163, "534": 163, "5078": 163, "643": 163, "3973": 163, "237": 163, "8784": 163, "468": 163, "3780": 163, "231": 163, "398": 163, "2124": 163, "234": 163, "2010": 163, "5374": 163, "5743": 163, "444": 163, "7496": 163, "22875": 163, "3760": 163, "332": 163, "818": 163, "692274280052025": 163, "803": 163, "3165": 163, "787": 163, "1589": 163, "902": 163, "1454": 163, "828": 163, "8084": 163, "1812": 163, "603": 163, "288": 163, "2211": 163, "936": 163, "11222": 163, "403": 163, "704": 163, "839": 163, "2758": 163, "2306": 163, "20162": 163, "895": 163, "417": 163, "305": 163, "1186": 163, "3030": 163, "8502": 163, "4207": 163, "2568": 163, "666": 163, "2141": 163, "1723": 163, "802": 163, "11033": 163, "1503": 163, "61702": 163, "399": 163, "903": 163, "443": 163, "34531": 163, "807": 163, "17300": 163, "1225": 163, "1442": 163, "2972": 163, "702": 163, "5775": 163, "5784": 163, "4435": 163, "817": 163, "484": 163, "10087": 163, "496": 163, "528": 163, "1412": 163, "1220": 163, "1218": 163, "3143": 163, "19099": 163, "2280": 163, "14562": 163, "321": 163, "3619": 163, "10599": 163, "28273": 163, "6017": 163, "3378": 163, "10936": 163, "2112": 163, "3072": 163, "1504": 163, "3327": 163, "2503": 163, "15581": 163, "1241": 163, "8090": 163, "10935": 163, "25663": 163, "2145": 163, "2286": 163, "8800": 163, "878": 163, "639": 163, "1248": 163, "1932": 163, "1615": 163, "1993": 163, "4131": 163, "2153": 163, "31992": 163, "21029": 163, "211": 163, "905": 163, "9641": 163, "316": 163, "864": 163, "12023": 163, "3829": 163, "459": 163, "12443": 163, "23971": 163, "3714": 163, "872": 163, "18673": 163, "8082": 163, "17968": 163, "14620": 163, "3924": 163, "3269": 163, "2324": 163, "2152": 163, "2113": 163, "10924": 163, "483": 163, "6756": 163, "472": 163, "25136": 163, "1604": 163, "11035": 163, "10241": 163, "30001": 163, "1613": 163, "499": 163, "7014": 163, "18563": 163, "20947": 163, "2106": 163, "prune": 163, "2481": 163, "2485": 163, "2488": 163, "2489": 163, "8000": 163, "10739": 163, "2619": 163, "10742": 163, "2620": 163, "10745": 163, "2622": 163, "10748": 163, "2623": 163, "10754": 163, "2625": 163, "1149": 163, "2477": 163, "515564": 163, "859674": 163, "103112": 163, "971935": 163, "2478": 163, "54367": 163, "675735": 163, "2479": 163, "5554": 163, "606210": 163, "294": 163, "485548": 163, "2480": 163, "31312": 163, "721131": 163, "16512": 163, "5566": 163, "705979": 163, "3759": 163, "61444": 163, "753533": 163, "40284": 163, "10923": 163, "511739": 163, "745961": 163, "777060": 163, "006643": 163, "490070": 163, "528632": 163, "093979": 163, "350229": 163, "757358": 163, "1792": 163, "659911": 163, "57202": 163, "709001": 163, "pit": 163, "keyerror": 163, "traceback": 163, "recent": 163, "last": 163, "3805": 163, "get_loc": 163, "3804": 163, "_engin": 163, "casted_kei": 163, "err": 163, "pyx": 163, "_lib": 163, "indexengin": 163, "196": 163, "hashtable_class_help": 163, "pxi": 163, "7081": 163, "hashtabl": 163, "pyobjecthasht": 163, "get_item": 163, "7089": 163, "direct": 163, "caus": 163, "cell": [163, 165], "4102": 163, "__getitem__": 163, "4100": 163, "nlevel": 163, "4101": 163, "_getitem_multilevel": 163, "4103": 163, "is_integ": 163, "4104": 163, "3812": 163, "3807": 163, "3808": 163, "3809": 163, "3810": 163, "3811": 163, "rais": 163, "invalidindexerror": 163, "3813": 163, "typeerror": 163, "3814": 163, "listlik": 163, "_check_indexing_error": 163, "3815": 163, "fall": 163, "3816": 163, "3817": 163, "262145": 163, "163840": 163, "98304": 163, "819203": 163, "jupyt": 165, "But": 165, "guid": [165, 170, 175], "proce": [165, 166, 170, 171, 175], "window": [165, 171, 176], "git": [165, 170, 175], "virtual": [165, 170, 175], "linux": [165, 176], "variou": 165, "extra": [165, 169, 174], "ml": 165, "optuna": 165, "pymoo": 165, "ipynb": 165, "visual": 165, "pytest": 165, "doc": 165, "sphinx": 165, "dev": [165, 169, 174], "recommend": [165, 168, 171, 173], "sudo": [166, 167, 170], "apt": [166, 167, 170], "version": [166, 167, 169, 171, 172, 174], "expect": 166, "instead": [166, 171], "http": [166, 171], "com": [166, 171], "aimclub": [166, 171], "locat": [166, 171], "prefer": [166, 171], "Then": [166, 171], "cd": [166, 171], "don": 167, "highli": [168, 173], "m": [168, 173], "activ": [168, 173], "bin": 168, "successful": [168, 173], "ll": [168, 173], "begin": [168, 173], "termin": [168, 171, 172, 173], "purpos": [169, 174], "clone": [169, 174], "repositori": [169, 174], "txt": [169, 174], "Or": [169, 174], "particip": [169, 174], "just": [169, 174], "post4": [169, 174], "system": [170, 176], "upgrad": 170, "offici": 171, "websit": 171, "dure": [171, 172], "when": 171, "editor": 171, "choos": 171, "notepad": 171, "leav": 171, "box": [172, 176], "verifi": 172, "command": 172, "responc": 172, "next": 172, "though": 172, "vari": 172, "virtualenv": 173, "script": 173, "includ": 176, "which": 176, "allow": 176, "metric": 176, "regulatori": 176, "api": 176, "u": 176, "contact": 176, "scenario": 176, "divis": 176, "smallest": 176, "element": 176, "algorithm": 176, "account": 176, "addit": 176, "further": 176, "analyz": 176, "hierarchi": 176, "regard": 176, "attitud": 176, "perform": 176, "well": 176, "comput": 176, "extern": 176, "limit": 176, "increas": 176, "user": 176, "ad": 176, "identif": 176, "integr": 176, "consid": 176, "possibl": 176, "context": 176, "scale": 176, "pretti": 176, "student": 176, "being": 176, "friendli": 176, "programm": 176, "respect": 176, "contributor": 176, "part": 176, "622280": 176, "financi": 176, "foundat": 176, "roadmap": 176, "implement": 176, "tech": 176, "field": 176, "artifici": 176, "intellig": 176, "period": 176, "2030": 176, "agreement": 176, "2021": 176, "00187": 176}, "objects": {"": [[1, 0, 0, "-", "blocksnet"]], "blocksnet": [[2, 0, 0, "-", "analysis"], [29, 0, 0, "-", "blocks"], [40, 0, 0, "-", "enums"], [45, 0, 0, "-", "machine_learning"], [67, 0, 0, "-", "optimization"], [68, 0, 0, "-", "preprocessing"], [69, 0, 0, "-", "relations"], [84, 0, 0, "-", "synthesis"], [85, 0, 0, "-", "utils"]], "blocksnet.analysis": [[3, 0, 0, "-", "centrality"], [9, 0, 0, "-", "indicators"], [16, 0, 0, "-", "morphotypes"], [20, 0, 0, "-", "services"]], "blocksnet.analysis.centrality": [[4, 0, 0, "-", "population"], [3, 1, 1, "", "population_centrality"], [7, 0, 0, "-", "services"], [3, 1, 1, "", "services_centrality"]], "blocksnet.analysis.centrality.population": [[5, 0, 0, "-", "core"], [4, 1, 1, "", "population_centrality"], [6, 0, 0, "-", "schemas"]], "blocksnet.analysis.centrality.population.core": [[5, 1, 1, "", "population_centrality"]], "blocksnet.analysis.centrality.population.schemas": [[6, 2, 1, "", "BlocksSchema"]], "blocksnet.analysis.centrality.services": [[8, 0, 0, "-", "core"], [7, 1, 1, "", "services_centrality"]], "blocksnet.analysis.centrality.services.core": [[8, 1, 1, "", "services_centrality"]], "blocksnet.analysis.indicators": [[9, 1, 1, "", "calculate_density_indicators"], [9, 1, 1, "", "calculate_development_indicators"], [10, 0, 0, "-", "density"], [13, 0, 0, "-", "development"]], "blocksnet.analysis.indicators.density": [[10, 1, 1, "", "calculate_density_indicators"], [11, 0, 0, "-", "core"], [12, 0, 0, "-", "schemas"]], "blocksnet.analysis.indicators.density.core": [[11, 1, 1, "", "calculate_density_indicators"]], "blocksnet.analysis.indicators.density.schemas": [[12, 2, 1, "", "BlocksSchema"]], "blocksnet.analysis.indicators.development": [[13, 1, 1, "", "calculate_development_indicators"], [14, 0, 0, "-", "core"], [15, 0, 0, "-", "schemas"]], "blocksnet.analysis.indicators.development.core": [[14, 1, 1, "", "calculate_development_indicators"]], "blocksnet.analysis.indicators.development.schemas": [[15, 2, 1, "", "BlocksSchema"]], "blocksnet.analysis.morphotypes": [[16, 1, 1, "", "get_spacematrix_morphotypes"], [16, 1, 1, "", "get_strelka_morphotypes"], [17, 0, 0, "-", "schemas"], [18, 0, 0, "-", "spacematrix"], [19, 0, 0, "-", "strelka"]], "blocksnet.analysis.morphotypes.schemas": [[17, 2, 1, "", "BlocksSchema"]], "blocksnet.analysis.morphotypes.spacematrix": [[18, 1, 1, "", "get_spacematrix_morphotypes"]], "blocksnet.analysis.morphotypes.strelka": [[19, 2, 1, "", "HighRiseMorphotype"], [19, 2, 1, "", "LowRiseMorphotype"], [19, 2, 1, "", "MidRiseMorphotype"], [19, 1, 1, "", "get_strelka_morphotypes"]], "blocksnet.analysis.morphotypes.strelka.HighRiseMorphotype": [[19, 3, 1, "", "MODERN_MICRODISTRICT"], [19, 3, 1, "", "NON_RESIDENTIAL"], [19, 3, 1, "", "SOVIET_MICRODISTRICT"]], "blocksnet.analysis.morphotypes.strelka.LowRiseMorphotype": [[19, 3, 1, "", "INDIVIDUAL"], [19, 3, 1, "", "LOW_RISE_MODEL"], [19, 3, 1, "", "NON_RESIDENTIAL"]], "blocksnet.analysis.morphotypes.strelka.MidRiseMorphotype": [[19, 3, 1, "", "BASIC"], [19, 3, 1, "", "BLOCK"], [19, 3, 1, "", "CENTRAL_MODEL"], [19, 3, 1, "", "MICRODISTRICT"], [19, 3, 1, "", "NON_RESIDENTIAL"]], "blocksnet.analysis.services": [[21, 0, 0, "-", "collocation"], [23, 0, 0, "-", "count"], [26, 0, 0, "-", "density"], [20, 1, 1, "", "services_collocation"], [20, 1, 1, "", "services_count"], [20, 1, 1, "", "services_density"]], "blocksnet.analysis.services.collocation": [[22, 0, 0, "-", "core"], [21, 1, 1, "", "services_collocation"]], "blocksnet.analysis.services.collocation.core": [[22, 1, 1, "", "services_collocation"]], "blocksnet.analysis.services.count": [[24, 0, 0, "-", "core"], [25, 0, 0, "-", "schemas"], [23, 1, 1, "", "services_count"]], "blocksnet.analysis.services.count.core": [[24, 1, 1, "", "services_count"]], "blocksnet.analysis.services.count.schemas": [[25, 2, 1, "", "BlocksServicesSchema"]], "blocksnet.analysis.services.density": [[27, 0, 0, "-", "core"], [28, 0, 0, "-", "schemas"], [26, 1, 1, "", "services_density"]], "blocksnet.analysis.services.density.core": [[27, 1, 1, "", "services_density"]], "blocksnet.analysis.services.density.schemas": [[28, 2, 1, "", "BlocksAreaSchema"]], "blocksnet.blocks": [[30, 0, 0, "-", "aggregation"], [33, 0, 0, "-", "assignment"], [37, 0, 0, "-", "postprocessing"]], "blocksnet.blocks.aggregation": [[30, 1, 1, "", "aggregate_objects"], [31, 0, 0, "-", "core"], [32, 0, 0, "-", "schemas"]], "blocksnet.blocks.aggregation.core": [[31, 1, 1, "", "aggregate_objects"]], "blocksnet.blocks.aggregation.schemas": [[32, 2, 1, "", "BlocksSchema"]], "blocksnet.blocks.assignment": [[33, 1, 1, "", "assign_land_use"], [34, 0, 0, "-", "core"], [35, 0, 0, "-", "schemas"], [36, 0, 0, "-", "utils"]], "blocksnet.blocks.assignment.core": [[34, 1, 1, "", "assign_land_use"]], "blocksnet.blocks.assignment.schemas": [[35, 2, 1, "", "BlocksSchema"], [35, 2, 1, "", "FunctionalZonesSchema"]], "blocksnet.blocks.assignment.schemas.FunctionalZonesSchema": [[35, 3, 1, "", "functional_zone"]], "blocksnet.blocks.assignment.utils": [[36, 1, 1, "", "sjoin_intersections"]], "blocksnet.blocks.postprocessing": [[38, 0, 0, "-", "core"], [37, 1, 1, "", "postprocess_urban_blocks"], [39, 0, 0, "-", "schemas"]], "blocksnet.blocks.postprocessing.core": [[38, 1, 1, "", "postprocess_urban_blocks"]], "blocksnet.blocks.postprocessing.schemas": [[39, 2, 1, "", "BlocksSchema"]], "blocksnet.enums": [[40, 2, 1, "", "BlockCategory"], [40, 2, 1, "", "LandUse"], [40, 2, 1, "", "LandUseCategory"], [40, 2, 1, "", "SettlementCategory"], [41, 0, 0, "-", "block_category"], [42, 0, 0, "-", "land_use"], [43, 0, 0, "-", "land_use_category"], [44, 0, 0, "-", "settlement_category"]], "blocksnet.enums.BlockCategory": [[40, 3, 1, "", "INVALID"], [40, 3, 1, "", "LARGE"], [40, 3, 1, "", "NORMAL"]], "blocksnet.enums.LandUse": [[40, 3, 1, "", "AGRICULTURE"], [40, 3, 1, "", "BUSINESS"], [40, 3, 1, "", "INDUSTRIAL"], [40, 3, 1, "", "RECREATION"], [40, 3, 1, "", "RESIDENTIAL"], [40, 3, 1, "", "SPECIAL"], [40, 3, 1, "", "TRANSPORT"], [40, 4, 1, "", "to_one_hot"]], "blocksnet.enums.LandUseCategory": [[40, 3, 1, "", "INDUSTRIAL"], [40, 3, 1, "", "NON_URBAN"], [40, 3, 1, "", "URBAN"], [40, 4, 1, "", "from_land_use"], [40, 4, 1, "", "to_land_use"]], "blocksnet.enums.SettlementCategory": [[40, 3, 1, "", "SUBURB"], [40, 3, 1, "", "TOWN"], [40, 3, 1, "", "VILLAGE"]], "blocksnet.enums.block_category": [[41, 2, 1, "", "BlockCategory"]], "blocksnet.enums.block_category.BlockCategory": [[41, 3, 1, "", "INVALID"], [41, 3, 1, "", "LARGE"], [41, 3, 1, "", "NORMAL"]], "blocksnet.enums.land_use": [[42, 2, 1, "", "LandUse"]], "blocksnet.enums.land_use.LandUse": [[42, 3, 1, "", "AGRICULTURE"], [42, 3, 1, "", "BUSINESS"], [42, 3, 1, "", "INDUSTRIAL"], [42, 3, 1, "", "RECREATION"], [42, 3, 1, "", "RESIDENTIAL"], [42, 3, 1, "", "SPECIAL"], [42, 3, 1, "", "TRANSPORT"], [42, 4, 1, "", "to_one_hot"]], "blocksnet.enums.land_use_category": [[43, 2, 1, "", "LandUseCategory"]], "blocksnet.enums.land_use_category.LandUseCategory": [[43, 3, 1, "", "INDUSTRIAL"], [43, 3, 1, "", "NON_URBAN"], [43, 3, 1, "", "URBAN"], [43, 4, 1, "", "from_land_use"], [43, 4, 1, "", "to_land_use"]], "blocksnet.enums.settlement_category": [[44, 2, 1, "", "SettlementCategory"]], "blocksnet.enums.settlement_category.SettlementCategory": [[44, 3, 1, "", "SUBURB"], [44, 3, 1, "", "TOWN"], [44, 3, 1, "", "VILLAGE"]], "blocksnet.machine_learning": [[45, 2, 1, "", "BaseContext"], [45, 2, 1, "", "BaseStrategy"], [45, 2, 1, "", "ClassificationBase"], [46, 0, 0, "-", "context"], [48, 0, 0, "-", "strategy"]], "blocksnet.machine_learning.BaseContext": [[45, 4, 1, "", "default"], [45, 4, 1, "", "run"], [45, 5, 1, "", "strategy"], [45, 4, 1, "", "train"]], "blocksnet.machine_learning.BaseStrategy": [[45, 4, 1, "", "load"], [45, 5, 1, "", "model"], [45, 4, 1, "", "predict"], [45, 4, 1, "", "save"], [45, 4, 1, "", "train"]], "blocksnet.machine_learning.ClassificationBase": [[45, 4, 1, "", "predict_proba"]], "blocksnet.machine_learning.context": [[46, 2, 1, "", "BaseContext"], [47, 0, 0, "-", "base_context"]], "blocksnet.machine_learning.context.BaseContext": [[46, 4, 1, "", "default"], [46, 4, 1, "", "run"], [46, 5, 1, "", "strategy"], [46, 4, 1, "", "train"]], "blocksnet.machine_learning.context.base_context": [[47, 2, 1, "", "BaseContext"]], "blocksnet.machine_learning.context.base_context.BaseContext": [[47, 4, 1, "", "default"], [47, 4, 1, "", "run"], [47, 5, 1, "", "strategy"], [47, 4, 1, "", "train"]], "blocksnet.machine_learning.strategy": [[48, 2, 1, "", "BaseStrategy"], [48, 2, 1, "", "ClassificationBase"], [49, 0, 0, "-", "base_strategy"], [50, 0, 0, "-", "catboost"], [54, 0, 0, "-", "classification_base"], [55, 0, 0, "-", "sklearn"], [63, 0, 0, "-", "xgboost"]], "blocksnet.machine_learning.strategy.BaseStrategy": [[48, 4, 1, "", "load"], [48, 5, 1, "", "model"], [48, 4, 1, "", "predict"], [48, 4, 1, "", "save"], [48, 4, 1, "", "train"]], "blocksnet.machine_learning.strategy.ClassificationBase": [[48, 4, 1, "", "predict_proba"]], "blocksnet.machine_learning.strategy.base_strategy": [[49, 2, 1, "", "BaseStrategy"]], "blocksnet.machine_learning.strategy.base_strategy.BaseStrategy": [[49, 4, 1, "", "load"], [49, 5, 1, "", "model"], [49, 4, 1, "", "predict"], [49, 4, 1, "", "save"], [49, 4, 1, "", "train"]], "blocksnet.machine_learning.strategy.catboost": [[50, 2, 1, "", "CatBoostBaseStrategy"], [50, 2, 1, "", "CatBoostClassificationStrategy"], [50, 2, 1, "", "CatBoostRegressionStrategy"], [51, 0, 0, "-", "base_strategy"], [52, 0, 0, "-", "classification_strategy"], [53, 0, 0, "-", "regression_strategy"]], "blocksnet.machine_learning.strategy.catboost.CatBoostBaseStrategy": [[50, 4, 1, "", "predict"], [50, 4, 1, "", "train"]], "blocksnet.machine_learning.strategy.catboost.CatBoostClassificationStrategy": [[50, 4, 1, "", "predict_proba"]], "blocksnet.machine_learning.strategy.catboost.base_strategy": [[51, 2, 1, "", "CatBoostBaseStrategy"]], "blocksnet.machine_learning.strategy.catboost.base_strategy.CatBoostBaseStrategy": [[51, 4, 1, "", "predict"], [51, 4, 1, "", "train"]], "blocksnet.machine_learning.strategy.catboost.classification_strategy": [[52, 2, 1, "", "CatBoostClassificationStrategy"]], "blocksnet.machine_learning.strategy.catboost.classification_strategy.CatBoostClassificationStrategy": [[52, 4, 1, "", "predict_proba"]], "blocksnet.machine_learning.strategy.catboost.regression_strategy": [[53, 2, 1, "", "CatBoostRegressionStrategy"]], "blocksnet.machine_learning.strategy.classification_base": [[54, 2, 1, "", "ClassificationBase"]], "blocksnet.machine_learning.strategy.classification_base.ClassificationBase": [[54, 4, 1, "", "predict_proba"]], "blocksnet.machine_learning.strategy.sklearn": [[56, 0, 0, "-", "base_strategy"], [57, 0, 0, "-", "ensemble"]], "blocksnet.machine_learning.strategy.sklearn.base_strategy": [[56, 2, 1, "", "SKLearnBaseStrategy"]], "blocksnet.machine_learning.strategy.sklearn.ensemble": [[58, 0, 0, "-", "base_strategy"], [59, 0, 0, "-", "voting"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.base_strategy": [[58, 2, 1, "", "SKLearnEnsembleBaseStrategy"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.base_strategy.SKLearnEnsembleBaseStrategy": [[58, 5, 1, "", "estimators"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.voting": [[60, 0, 0, "-", "base_strategy"], [61, 0, 0, "-", "classification_strategy"], [62, 0, 0, "-", "regression_strategy"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy": [[60, 2, 1, "", "SKLearnVotingBaseStrategy"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy.SKLearnVotingBaseStrategy": [[60, 4, 1, "", "predict"], [60, 4, 1, "", "train"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.classification_strategy": [[61, 2, 1, "", "SKLearnVotingClassificationStrategy"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.classification_strategy.SKLearnVotingClassificationStrategy": [[61, 4, 1, "", "predict_proba"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.regression_strategy": [[62, 2, 1, "", "SKLearnVotingRegressionStrategy"]], "blocksnet.machine_learning.strategy.xgboost": [[63, 2, 1, "", "XGBoostBaseStrategy"], [63, 2, 1, "", "XGBoostClassificationStrategy"], [63, 2, 1, "", "XGBoostRegressionStrategy"], [64, 0, 0, "-", "base_strategy"], [65, 0, 0, "-", "classification_strategy"], [66, 0, 0, "-", "regression_strategy"]], "blocksnet.machine_learning.strategy.xgboost.XGBoostBaseStrategy": [[63, 4, 1, "", "predict"], [63, 4, 1, "", "train"]], "blocksnet.machine_learning.strategy.xgboost.XGBoostClassificationStrategy": [[63, 4, 1, "", "predict_proba"]], "blocksnet.machine_learning.strategy.xgboost.base_strategy": [[64, 2, 1, "", "XGBoostBaseStrategy"]], "blocksnet.machine_learning.strategy.xgboost.base_strategy.XGBoostBaseStrategy": [[64, 4, 1, "", "predict"], [64, 4, 1, "", "train"]], "blocksnet.machine_learning.strategy.xgboost.classification_strategy": [[65, 2, 1, "", "XGBoostClassificationStrategy"]], "blocksnet.machine_learning.strategy.xgboost.classification_strategy.XGBoostClassificationStrategy": [[65, 4, 1, "", "predict_proba"]], "blocksnet.machine_learning.strategy.xgboost.regression_strategy": [[66, 2, 1, "", "XGBoostRegressionStrategy"]], "blocksnet.relations": [[70, 0, 0, "-", "accessibility"], [69, 1, 1, "", "accessibility_graph_to_gdfs"], [78, 0, 0, "-", "adjacency"], [69, 1, 1, "", "calculate_accessibility_matrix"], [69, 1, 1, "", "calculate_distance_matrix"], [81, 0, 0, "-", "distance"], [69, 1, 1, "", "generate_adjacency_graph"], [69, 1, 1, "", "get_accessibility_context"], [69, 1, 1, "", "get_accessibility_graph"], [69, 1, 1, "", "get_adjacency_context"], [69, 1, 1, "", "validate_accessibility_graph"], [69, 1, 1, "", "validate_accessibility_matrix"], [69, 1, 1, "", "validate_adjacency_graph"]], "blocksnet.relations.accessibility": [[70, 1, 1, "", "accessibility_graph_to_gdfs"], [70, 1, 1, "", "calculate_accessibility_matrix"], [70, 1, 1, "", "get_accessibility_context"], [70, 1, 1, "", "get_accessibility_graph"], [71, 0, 0, "-", "graph"], [75, 0, 0, "-", "matrix"], [70, 1, 1, "", "validate_accessibility_graph"], [70, 1, 1, "", "validate_accessibility_matrix"]], "blocksnet.relations.accessibility.graph": [[71, 1, 1, "", "accessibility_graph_to_gdfs"], [72, 0, 0, "-", "core"], [71, 1, 1, "", "get_accessibility_graph"], [73, 0, 0, "-", "schemas"], [74, 0, 0, "-", "utils"], [71, 1, 1, "", "validate_accessibility_graph"]], "blocksnet.relations.accessibility.graph.core": [[72, 1, 1, "", "get_accessibility_graph"]], "blocksnet.relations.accessibility.graph.schemas": [[73, 2, 1, "", "TerritorySchema"], [73, 1, 1, "", "validate_accessibility_graph"]], "blocksnet.relations.accessibility.graph.utils": [[74, 1, 1, "", "accessibility_graph_to_gdfs"]], "blocksnet.relations.accessibility.matrix": [[75, 1, 1, "", "calculate_accessibility_matrix"], [76, 0, 0, "-", "core"], [75, 1, 1, "", "get_accessibility_context"], [77, 0, 0, "-", "schemas"], [75, 1, 1, "", "validate_accessibility_matrix"]], "blocksnet.relations.accessibility.matrix.core": [[76, 1, 1, "", "calculate_accessibility_matrix"], [76, 1, 1, "", "get_accessibility_context"]], "blocksnet.relations.accessibility.matrix.schemas": [[77, 2, 1, "", "BlocksSchema"], [77, 1, 1, "", "validate_accessibility_matrix"]], "blocksnet.relations.adjacency": [[79, 0, 0, "-", "core"], [78, 1, 1, "", "generate_adjacency_graph"], [78, 1, 1, "", "get_adjacency_context"], [80, 0, 0, "-", "schemas"], [78, 1, 1, "", "validate_adjacency_graph"]], "blocksnet.relations.adjacency.core": [[79, 1, 1, "", "generate_adjacency_graph"], [79, 1, 1, "", "get_adjacency_context"]], "blocksnet.relations.adjacency.schemas": [[80, 2, 1, "", "BlocksSchema"], [80, 1, 1, "", "validate_adjacency_graph"]], "blocksnet.relations.distance": [[81, 1, 1, "", "calculate_distance_matrix"], [82, 0, 0, "-", "core"], [83, 0, 0, "-", "schemas"]], "blocksnet.relations.distance.core": [[82, 1, 1, "", "calculate_distance_matrix"]], "blocksnet.relations.distance.schemas": [[83, 2, 1, "", "BlocksSchema"]], "blocksnet.relations.distance.schemas.BlocksSchema": [[83, 4, 1, "", "centrify"]], "blocksnet.utils": [[86, 0, 0, "-", "validation"]], "blocksnet.utils.validation": [[86, 2, 1, "", "DfSchema"], [86, 2, 1, "", "GdfSchema"], [86, 2, 1, "", "LandUseSchema"], [87, 0, 0, "-", "df_schema"], [86, 1, 1, "", "ensure_crs"], [88, 0, 0, "-", "gdf_schema"], [89, 0, 0, "-", "land_use_schema"], [90, 0, 0, "-", "utils"], [86, 1, 1, "", "validate_graph"], [86, 1, 1, "", "validate_matrix"]], "blocksnet.utils.validation.DfSchema": [[86, 2, 1, "", "Config"], [86, 4, 1, "", "columns_"], [86, 4, 1, "", "create_empty"], [86, 4, 1, "", "validate"]], "blocksnet.utils.validation.DfSchema.Config": [[86, 3, 1, "", "add_missing_columns"], [86, 3, 1, "", "coerce"], [86, 3, 1, "", "strict"]], "blocksnet.utils.validation.GdfSchema": [[86, 4, 1, "", "create_empty"], [86, 3, 1, "", "geometry"]], "blocksnet.utils.validation.df_schema": [[87, 2, 1, "", "DfSchema"]], "blocksnet.utils.validation.df_schema.DfSchema": [[87, 2, 1, "", "Config"], [87, 4, 1, "", "columns_"], [87, 4, 1, "", "create_empty"], [87, 4, 1, "", "validate"]], "blocksnet.utils.validation.df_schema.DfSchema.Config": [[87, 3, 1, "", "add_missing_columns"], [87, 3, 1, "", "coerce"], [87, 3, 1, "", "strict"]], "blocksnet.utils.validation.gdf_schema": [[88, 2, 1, "", "GdfSchema"]], "blocksnet.utils.validation.gdf_schema.GdfSchema": [[88, 4, 1, "", "create_empty"], [88, 3, 1, "", "geometry"]], "blocksnet.utils.validation.land_use_schema": [[89, 2, 1, "", "LandUseSchema"]], "blocksnet.utils.validation.utils": [[90, 1, 1, "", "ensure_crs"], [90, 1, 1, "", "validate_graph"], [90, 1, 1, "", "validate_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"]}, "titleterms": {"about": 0, "u": 0, "contact": 0, "public": 0, "blocksnet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 169, 174, 176], "analysi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 103, 152], "central": [3, 4, 5, 6, 7, 8, 95, 96, 97], "popul": [4, 5, 6, 96], "core": [5, 8, 11, 14, 22, 24, 27, 31, 34, 38, 72, 76, 79, 82], "schema": [6, 12, 15, 17, 25, 28, 32, 35, 39, 73, 77, 80, 83], "servic": [7, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 97, 127, 128, 129, 130, 133, 148, 149, 151, 152, 154, 163, 164], "indic": [9, 10, 11, 12, 13, 14, 15, 104, 105, 106, 107, 108, 112, 144], "densiti": [10, 11, 12, 26, 27, 28, 104, 129, 142], "develop": [13, 14, 15, 105, 155], "morphotyp": [16, 17, 18, 19, 116, 117, 118, 152], "spacematrix": [18, 117, 152], "strelka": [19, 118, 152], "colloc": [21, 22, 110, 127], "count": [23, 24, 25, 108, 128], "block": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 123, 136, 137, 140, 149, 151, 152, 163], "aggreg": [30, 31, 32, 133, 152], "assign": [33, 34, 35, 36, 134, 152], "util": [36, 74, 85, 86, 87, 88, 89, 90, 102, 119], "postprocess": [37, 38, 39], "enum": [40, 41, 42, 43, 44], "block_categori": 41, "land_us": 42, "land_use_categori": 43, "settlement_categori": 44, "machine_learn": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "context": [46, 47, 159], "base_context": 47, "strategi": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 120], "base_strategi": [49, 51, 56, 58, 60, 64], "catboost": [50, 51, 52, 53], "classification_strategi": [52, 61, 65], "regression_strategi": [53, 62, 66], "classification_bas": 54, "sklearn": [55, 56, 57, 58, 59, 60, 61, 62], "ensembl": [57, 58, 59, 60, 61, 62], "vote": [59, 60, 61, 62], "xgboost": [63, 64, 65, 66], "optim": [67, 145, 147, 151, 163], "preprocess": [68, 152, 157], "relat": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 158, 159, 160, 161], "access": [70, 71, 72, 73, 74, 75, 76, 77, 119, 123, 152, 158], "graph": [71, 72, 73, 74, 123, 152, 158, 159], "matrix": [75, 76, 77, 119, 123, 152, 158, 160], "adjac": [78, 79, 80, 159], "distanc": [81, 82, 83, 123, 160], "synthesi": [84, 162], "valid": [86, 87, 88, 89, 90, 144, 155], "df_schema": 87, "gdf_schema": 88, "land_use_schema": 89, "api": 91, "document": [91, 92, 176], "contribut": [92, 169, 174], "befor": 92, "submit": 92, "your": 92, "pull": 92, "request": 92, "after": 92, "faq": 93, "divers": [98, 99], "shannon": 99, "geometri": [100, 101, 102, 136, 152, 153], "shape": 101, "aspect": 101, "ratio": 101, "size": 102, "area": [102, 119, 131, 132], "length": 102, "centerlin": 102, "centroid": 102, "radius": 102, "socio": [107, 108, 109], "econom": [107, 108, 109], "evalu": [108, 140, 142], "gener": 108, "demograph": 108, "settlement": 108, "transport": 108, "ecolog": 108, "engin": 108, "social": [108, 144], "provis": [108, 124, 125, 126, 149, 152], "land": [110, 111, 112, 113, 114, 115, 119, 134, 146, 149, 152], "us": [110, 111, 112, 113, 114, 115, 119, 134, 144, 146, 149, 152, 165, 169, 174], "predict": [113, 144, 155], "share": [114, 126], "similar": 115, "network": [119, 120, 121, 122, 123], "median": 119, "max": 119, "weight": [119, 149, 151, 163], "mean": 119, "rel": 119, "classif": [120, 135, 140], "default": 120, "connect": 121, "calcul": [123, 152], "matric": 123, "get": [123, 165], "from": [123, 152, 153], "node": 123, "od": 123, "road": 123, "congest": 123, "competit": [124, 152], "assess": 124, "addit": 124, "featur": [124, 153, 176], "visual": [124, 151, 160, 163], "vacant": [131, 132], "build": [133, 152, 154], "process": 136, "cut": [136, 152], "urban": [136, 152], "split": 136, "exampl": [139, 152, 160], "machin": 141, "learn": 141, "regress": [142, 144], "train": [142, 155], "test": 142, "save": [142, 149], "model": [142, 144], "scaler": 142, "quantil": 144, "error": 144, "differ": 144, "target": 144, "lime": 144, "initi": [149, 151, 163], "paramet": 149, "id": [149, 151, 163], "profil": 149, "citi": 149, "csv": 149, "select": [149, 151, 163], "simul": 150, "anneal": 150, "distribut": [151, 163], "type": [151, 163], "run": [151, 163], "pipelin": 152, "1": 152, "fetch": 152, "data": 152, "openstreetmap": 152, "2": 152, "input": 152, "3": 152, "specifi": 152, "rule": 152, "intermod": [152, 158], "construct": 152, "4": 152, "is_liv": 152, "number_of_floor": 152, "imput": [152, 155, 156], "miss": 152, "within": 152, "5": 152, "6": 152, "result": 152, "7": 152, "plan": [163, 164], "start": 165, "instal": [165, 166, 167, 169, 171, 172, 173, 174], "how": 165, "git": [166, 171], "download": [166, 171], "clone": [166, 171], "repositori": [166, 171], "python": [167, 172], "pip": [167, 172], "creat": [168, 173], "virtual": [168, 173], "environ": [168, 173], "For": [169, 174], "own": [169, 174], "project": [169, 174], "linux": 170, "window": 175, "welcom": 176, "acknowledg": 176}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"About us": [[0, "about-us"]], "Contacts": [[0, "contacts"]], "Publications": [[0, "publications"]], "blocksnet": [[1, "module-blocksnet"]], "blocksnet.analysis": [[2, "module-blocksnet.analysis"]], "blocksnet.analysis.centrality": [[3, "module-blocksnet.analysis.centrality"]], "blocksnet.analysis.centrality.population": [[4, "module-blocksnet.analysis.centrality.population"]], "blocksnet.analysis.centrality.population.core": [[5, "module-blocksnet.analysis.centrality.population.core"]], "blocksnet.analysis.centrality.population.schemas": [[6, "module-blocksnet.analysis.centrality.population.schemas"]], "blocksnet.analysis.centrality.services": [[7, "module-blocksnet.analysis.centrality.services"]], "blocksnet.analysis.centrality.services.core": [[8, "module-blocksnet.analysis.centrality.services.core"]], "blocksnet.analysis.indicators": [[9, "module-blocksnet.analysis.indicators"]], "blocksnet.analysis.indicators.density": [[10, "module-blocksnet.analysis.indicators.density"]], "blocksnet.analysis.indicators.density.core": [[11, "module-blocksnet.analysis.indicators.density.core"]], "blocksnet.analysis.indicators.density.schemas": [[12, "module-blocksnet.analysis.indicators.density.schemas"]], "blocksnet.analysis.indicators.development": [[13, "module-blocksnet.analysis.indicators.development"]], "blocksnet.analysis.indicators.development.core": [[14, "module-blocksnet.analysis.indicators.development.core"]], "blocksnet.analysis.indicators.development.schemas": [[15, "module-blocksnet.analysis.indicators.development.schemas"]], "blocksnet.analysis.morphotypes": [[16, "module-blocksnet.analysis.morphotypes"]], "blocksnet.analysis.morphotypes.schemas": [[17, "module-blocksnet.analysis.morphotypes.schemas"]], "blocksnet.analysis.morphotypes.spacematrix": [[18, "module-blocksnet.analysis.morphotypes.spacematrix"]], "blocksnet.analysis.morphotypes.strelka": [[19, "module-blocksnet.analysis.morphotypes.strelka"]], "blocksnet.analysis.services": [[20, "module-blocksnet.analysis.services"]], "blocksnet.analysis.services.collocation": [[21, "module-blocksnet.analysis.services.collocation"]], "blocksnet.analysis.services.collocation.core": [[22, "module-blocksnet.analysis.services.collocation.core"]], "blocksnet.analysis.services.count": [[23, "module-blocksnet.analysis.services.count"]], "blocksnet.analysis.services.count.core": [[24, "module-blocksnet.analysis.services.count.core"]], "blocksnet.analysis.services.count.schemas": [[25, "module-blocksnet.analysis.services.count.schemas"]], "blocksnet.analysis.services.density": [[26, "module-blocksnet.analysis.services.density"]], "blocksnet.analysis.services.density.core": [[27, "module-blocksnet.analysis.services.density.core"]], "blocksnet.analysis.services.density.schemas": [[28, "module-blocksnet.analysis.services.density.schemas"]], "blocksnet.blocks": [[29, "module-blocksnet.blocks"]], "blocksnet.blocks.aggregation": [[30, "module-blocksnet.blocks.aggregation"]], "blocksnet.blocks.aggregation.core": [[31, "module-blocksnet.blocks.aggregation.core"]], "blocksnet.blocks.aggregation.schemas": [[32, "module-blocksnet.blocks.aggregation.schemas"]], "blocksnet.blocks.assignment": [[33, "module-blocksnet.blocks.assignment"]], "blocksnet.blocks.assignment.core": [[34, "module-blocksnet.blocks.assignment.core"]], "blocksnet.blocks.assignment.schemas": [[35, "module-blocksnet.blocks.assignment.schemas"]], "blocksnet.blocks.assignment.utils": [[36, "module-blocksnet.blocks.assignment.utils"]], "blocksnet.blocks.postprocessing": [[37, "module-blocksnet.blocks.postprocessing"]], "blocksnet.blocks.postprocessing.core": [[38, "module-blocksnet.blocks.postprocessing.core"]], "blocksnet.blocks.postprocessing.schemas": [[39, "module-blocksnet.blocks.postprocessing.schemas"]], "blocksnet.enums": [[40, "module-blocksnet.enums"]], "blocksnet.enums.block_category": [[41, "module-blocksnet.enums.block_category"]], "blocksnet.enums.land_use": [[42, "module-blocksnet.enums.land_use"]], "blocksnet.enums.land_use_category": [[43, "module-blocksnet.enums.land_use_category"]], "blocksnet.enums.settlement_category": [[44, "module-blocksnet.enums.settlement_category"]], "blocksnet.machine_learning": [[45, "module-blocksnet.machine_learning"]], "blocksnet.machine_learning.context": [[46, "module-blocksnet.machine_learning.context"]], "blocksnet.machine_learning.context.base_context": [[47, "module-blocksnet.machine_learning.context.base_context"]], "blocksnet.machine_learning.strategy": [[48, "module-blocksnet.machine_learning.strategy"]], "blocksnet.machine_learning.strategy.base_strategy": [[49, "module-blocksnet.machine_learning.strategy.base_strategy"]], "blocksnet.machine_learning.strategy.catboost": [[50, "module-blocksnet.machine_learning.strategy.catboost"]], "blocksnet.machine_learning.strategy.catboost.base_strategy": [[51, "module-blocksnet.machine_learning.strategy.catboost.base_strategy"]], "blocksnet.machine_learning.strategy.catboost.classification_strategy": [[52, "module-blocksnet.machine_learning.strategy.catboost.classification_strategy"]], "blocksnet.machine_learning.strategy.catboost.regression_strategy": [[53, "module-blocksnet.machine_learning.strategy.catboost.regression_strategy"]], "blocksnet.machine_learning.strategy.classification_base": [[54, "module-blocksnet.machine_learning.strategy.classification_base"]], "blocksnet.machine_learning.strategy.sklearn": [[55, "module-blocksnet.machine_learning.strategy.sklearn"]], "blocksnet.machine_learning.strategy.sklearn.base_strategy": [[56, "module-blocksnet.machine_learning.strategy.sklearn.base_strategy"]], "blocksnet.machine_learning.strategy.sklearn.ensemble": [[57, "module-blocksnet.machine_learning.strategy.sklearn.ensemble"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.base_strategy": [[58, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.base_strategy"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.voting": [[59, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.voting"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy": [[60, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.classification_strategy": [[61, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.voting.classification_strategy"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.regression_strategy": [[62, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.voting.regression_strategy"]], "blocksnet.machine_learning.strategy.xgboost": [[63, "module-blocksnet.machine_learning.strategy.xgboost"]], "blocksnet.machine_learning.strategy.xgboost.base_strategy": [[64, "module-blocksnet.machine_learning.strategy.xgboost.base_strategy"]], "blocksnet.machine_learning.strategy.xgboost.classification_strategy": [[65, "module-blocksnet.machine_learning.strategy.xgboost.classification_strategy"]], "blocksnet.machine_learning.strategy.xgboost.regression_strategy": [[66, "module-blocksnet.machine_learning.strategy.xgboost.regression_strategy"]], "blocksnet.optimization": [[67, "module-blocksnet.optimization"]], "blocksnet.preprocessing": [[68, "module-blocksnet.preprocessing"]], "blocksnet.relations": [[69, "module-blocksnet.relations"]], "blocksnet.relations.accessibility": [[70, "module-blocksnet.relations.accessibility"]], "blocksnet.relations.accessibility.graph": [[71, "module-blocksnet.relations.accessibility.graph"]], "blocksnet.relations.accessibility.graph.core": [[72, "module-blocksnet.relations.accessibility.graph.core"]], "blocksnet.relations.accessibility.graph.schemas": [[73, "module-blocksnet.relations.accessibility.graph.schemas"]], "blocksnet.relations.accessibility.graph.utils": [[74, "module-blocksnet.relations.accessibility.graph.utils"]], "blocksnet.relations.accessibility.matrix": [[75, "module-blocksnet.relations.accessibility.matrix"]], "blocksnet.relations.accessibility.matrix.core": [[76, "module-blocksnet.relations.accessibility.matrix.core"]], "blocksnet.relations.accessibility.matrix.schemas": [[77, "module-blocksnet.relations.accessibility.matrix.schemas"]], "blocksnet.relations.adjacency": [[78, "module-blocksnet.relations.adjacency"]], "blocksnet.relations.adjacency.core": [[79, "module-blocksnet.relations.adjacency.core"]], "blocksnet.relations.adjacency.schemas": [[80, "module-blocksnet.relations.adjacency.schemas"]], "blocksnet.relations.distance": [[81, "module-blocksnet.relations.distance"]], "blocksnet.relations.distance.core": [[82, "module-blocksnet.relations.distance.core"]], "blocksnet.relations.distance.schemas": [[83, "module-blocksnet.relations.distance.schemas"]], "blocksnet.synthesis": [[84, "module-blocksnet.synthesis"]], "blocksnet.utils": [[85, "module-blocksnet.utils"]], "blocksnet.utils.validation": [[86, "module-blocksnet.utils.validation"]], "blocksnet.utils.validation.df_schema": [[87, "module-blocksnet.utils.validation.df_schema"]], "blocksnet.utils.validation.gdf_schema": [[88, "module-blocksnet.utils.validation.gdf_schema"]], "blocksnet.utils.validation.land_use_schema": [[89, "module-blocksnet.utils.validation.land_use_schema"]], "blocksnet.utils.validation.utils": [[90, "module-blocksnet.utils.validation.utils"]], "API documentation": [[91, "api-documentation"]], "Contributing": [[92, "contributing"]], "Before submitting your pull request": [[92, "before-submitting-your-pull-request"]], "Contribute to the documentation": [[92, "contribute-to-the-documentation"]], "After submitting your pull request": [[92, "after-submitting-your-pull-request"]], "FAQ": [[93, "faq"]], "BlocksNet": [[94, "blocksnet"]], "Centrality": [[95, "centrality"]], "Population centrality": [[96, "Population-centrality"]], "Services centrality": [[97, "Services-centrality"]], "Diversity": [[98, "diversity"]], "Shannon diversity": [[99, "Shannon-diversity"]], "Geometry": [[100, "geometry"]], "Geometry shape": [[101, "Geometry-shape"]], "Aspect ratio": [[101, "Aspect-ratio"]], "Geometry size": [[102, "Geometry-size"]], "Utils": [[102, "Utils"], [119, "Utils"]], "Area and length": [[102, "Area-and-length"]], "Centerlines": [[102, "Centerlines"]], "Centroids": [[102, "Centroids"]], "Radiuses": [[102, "Radiuses"]], "Analysis": [[103, "analysis"]], "Density indicators": [[104, "Density-indicators"]], "Development indicators": [[105, "Development-indicators"]], "Indicators": [[106, "indicators"]], "Socio-economic indicators": [[107, "Socio-economic-indicators"]], "Socio-economic indicators evaluation": [[108, "Socio-economic-indicators-evaluation"]], "General indicators": [[108, "General-indicators"]], "Demographic indicators": [[108, "Demographic-indicators"]], "Settlement indicators": [[108, "Settlement-indicators"]], "Transport indicators": [[108, "Transport-indicators"]], "Economic indicators": [[108, "Economic-indicators"]], "Ecological indicators": [[108, "Ecological-indicators"]], "Engineering indicators": [[108, "Engineering-indicators"]], "Social count indicators": [[108, "Social-count-indicators"]], "Social provision indicators": [[108, "Social-provision-indicators"]], "Socio economic": [[109, "socio-economic"]], "Land use collocation": [[110, "Land-use-collocation"]], "Land use": [[111, "land-use"], [146, "land-use"]], "Land use indicators": [[112, "Land-use-indicators"]], "Land use prediction": [[113, "Land-use-prediction"]], "Land use share": [[114, "Land-use-share"]], "Land use similarity": [[115, "Land-use-similarity"]], "Morphotypes": [[116, "morphotypes"]], "Spacematrix morphotypes": [[117, "Spacematrix-morphotypes"]], "Strelka morphotypes": [[118, "Strelka-morphotypes"]], "Network accessibility": [[119, "Network-accessibility"]], "Median accessibility": [[119, "Median-accessibility"]], "Max accessibility": [[119, "Max-accessibility"]], "Area weighted accessibility": [[119, "Area-weighted-accessibility"]], "Mean accessibility": [[119, "Mean-accessibility"]], "Relative accessibility": [[119, "Relative-accessibility"]], "Land use accessibility": [[119, "Land-use-accessibility"]], "Land use accessibility matrix": [[119, "Land-use-accessibility-matrix"]], "Network classification": [[120, "Network-classification"]], "Default strategy": [[120, "Default-strategy"]], "Network connectivity": [[121, "Network-connectivity"]], "Network": [[122, "network"], [123, "Network"]], "Calculating accessibility matrices": [[123, "Calculating-accessibility-matrices"]], "Getting graphs": [[123, "Getting-graphs"]], "Calculating distances from blocks to nodes": [[123, "Calculating-distances-from-blocks-to-nodes"]], "Calculating distances from nodes to nodes": [[123, "Calculating-distances-from-nodes-to-nodes"]], "Calculating OD matrix": [[123, "Calculating-OD-matrix"]], "Calculating roads congestion": [[123, "Calculating-roads-congestion"]], "Competitive provision": [[124, "Competitive-provision"]], "Provision assessment": [[124, "Provision-assessment"]], "Additional features": [[124, "Additional-features"]], "Visualization": [[124, "Visualization"], [151, "Visualization"], [163, "Visualization"]], "Provision": [[125, "provision"]], "Shared provision": [[126, "Shared-provision"]], "Services collocation": [[127, "Services-collocation"]], "Services count": [[128, "Services-count"]], "Services density": [[129, "Services-density"]], "Services": [[130, "services"], [148, "services"], [149, "Services"], [154, "Services"]], "Vacant area": [[131, "vacant-area"]], "Vacant areas": [[132, "Vacant-areas"]], "Buildings aggregation": [[133, "Buildings-aggregation"]], "Services aggregation": [[133, "Services-aggregation"]], "Land use assignment": [[134, "Land-use-assignment"]], "Classification": [[135, "Classification"], [140, "Classification"]], "Processing geometries": [[136, "Processing-geometries"]], "Cut urban blocks": [[136, "Cut-urban-blocks"]], "Cut with splitting": [[136, "Cut-with-splitting"]], "Blocks": [[137, "blocks"], [140, "Blocks"]], "Examples": [[139, "examples"]], "Evaluate": [[140, "Evaluate"], [142, "Evaluate"]], "Machine learning": [[141, "machine-learning"]], "Regression": [[142, "Regression"]], "Density": [[142, "Density"]], "Train": [[142, "Train"], [155, "Train"]], "Test": [[142, "Test"]], "Save model and scaler": [[142, "Save-model-and-scaler"]], "Social Indicators Prediction": [[144, "Social-Indicators-Prediction"]], "Predicting using quantile regression": [[144, "Predicting-using-quantile-regression"]], "Model Validation": [[144, "Model-Validation"]], "Error for different targets": [[144, "Error-for-different-targets"]], "LIME Prediction": [[144, "LIME-Prediction"]], "Optimization": [[145, "optimization"], [147, "Optimization"]], "Initial parameters": [[149, "Initial-parameters"]], "Block id for profiling": [[149, "Block-id-for-profiling"]], "City Initialization": [[149, "City-Initialization"]], "Service weights": [[149, "Service-weights"]], "Save service to csv": [[149, "Save-service-to-csv"]], "Land use provision with selected services": [[149, "Land-use-provision-with-selected-services"]], "Simulated annealing": [[150, "Simulated-annealing"]], "Service optimization": [[151, "Service-optimization"]], "Select ID of optimized blocks": [[151, "Select-ID-of-optimized-blocks"], [163, "Select-ID-of-optimized-blocks"]], "Service distribution": [[151, "Service-distribution"], [163, "Service-distribution"]], "Service types and weights": [[151, "Service-types-and-weights"], [163, "Service-types-and-weights"]], "Initialize and run optimizer": [[151, "Initialize-and-run-optimizer"], [163, "Initialize-and-run-optimizer"]], "Pipeline": [[152, "Pipeline"]], "1. Blocks cutting": [[152, "1.-Blocks-cutting"]], "1.1. Fetching data from OpenStreetMap.": [[152, "1.1.-Fetching-data-from-OpenStreetMap."]], "1.2. Preprocessing input geometry": [[152, "1.2.-Preprocessing-input-geometry"]], "1.3. Cutting urban blocks": [[152, "1.3.-Cutting-urban-blocks"]], "2. Land use assignment": [[152, "2.-Land-use-assignment"]], "2.1. Fetching data from OpenStreetMap": [[152, "2.1.-Fetching-data-from-OpenStreetMap"]], "2.2. Specifying rules": [[152, "2.2.-Specifying-rules"]], "2.3. Assignment": [[152, "2.3.-Assignment"]], "3. Accessibility matrix calculation": [[152, "3.-Accessibility-matrix-calculation"]], "3.1. Intermodal graph construction": [[152, "3.1.-Intermodal-graph-construction"]], "3.2. Calculating the accessibility matrix": [[152, "3.2.-Calculating-the-accessibility-matrix"]], "4. Buildings aggregation": [[152, "4.-Buildings-aggregation"]], "4.1. Fetching data from OpenStreetMap": [[152, "4.1.-Fetching-data-from-OpenStreetMap"]], "4.1.1. is_living": [[152, "4.1.1.-is_living"]], "4.1.2. number_of_floors": [[152, "4.1.2.-number_of_floors"]], "4.2. Imputing missing data": [[152, "4.2.-Imputing-missing-data"]], "4.3. Aggregating buildings within blocks": [[152, "4.3.-Aggregating-buildings-within-blocks"]], "5. Services aggregation": [[152, "5.-Services-aggregation"]], "5.1. Fetching data from OpenStreetMap": [[152, "5.1.-Fetching-data-from-OpenStreetMap"]], "5.2. Imputing missing data": [[152, "5.2.-Imputing-missing-data"]], "5.3. Aggregating services within blocks": [[152, "5.3.-Aggregating-services-within-blocks"]], "6. Results": [[152, "6.-Results"]], "7. Use examples": [[152, "7.-Use-examples"]], "7.1. Competitive provision": [[152, "7.1.-Competitive-provision"]], "7.2. Morphotypes": [[152, "7.2.-Morphotypes"]], "7.2.1. Spacematrix morphotypes": [[152, "7.2.1.-Spacematrix-morphotypes"]], "7.2.2. Strelka morphotypes": [[152, "7.2.2.-Strelka-morphotypes"]], "7.3. Accessibility analysis": [[152, "7.3.-Accessibility-analysis"]], "Features from geometries": [[153, "Features-from-geometries"]], "Buildings": [[154, "Buildings"]], "Development imputing": [[155, "Development-imputing"]], "Validate": [[155, "Validate"]], "Predict": [[155, "Predict"]], "Imputing": [[156, "imputing"]], "Preprocessing": [[157, "preprocessing"]], "Accessibility relations": [[158, "Accessibility-relations"]], "Intermodal graph": [[158, "Intermodal-graph"]], "Accessibility matrix": [[158, "Accessibility-matrix"]], "Adjacency relations": [[159, "Adjacency-relations"]], "Adjacency graph": [[159, "Adjacency-graph"]], "Adjacency context": [[159, "Adjacency-context"]], "Distance relations": [[160, "Distance-relations"]], "Distance matrix": [[160, "Distance-matrix"]], "Visualization example": [[160, "Visualization-example"]], "Relations": [[161, "relations"]], "Synthesis": [[162, "synthesis"]], "Services planning": [[163, "Services-planning"], [164, "services-planning"]], "Get started": [[165, "get-started"]], "Installation": [[165, "installation"]], "How to use": [[165, "how-to-use"]], "Install git": [[166, "install-git"], [171, "install-git"]], "Download and install": [[166, "download-and-install"], [171, "download-and-install"]], "Clone the repository": [[166, "clone-the-repository"], [171, "clone-the-repository"]], "Install Python and pip": [[167, "install-python-and-pip"], [172, "install-python-and-pip"]], "Create a virtual environment": [[168, "create-a-virtual-environment"]], "Install BlocksNet": [[169, "install-blocksnet"], [174, "install-blocksnet"]], "For using in own project": [[169, "for-using-in-own-project"], [174, "for-using-in-own-project"]], "For contributing": [[169, "for-contributing"], [174, "for-contributing"]], "Linux": [[170, "linux"]], "Install and create a virtual environment": [[173, "install-and-create-a-virtual-environment"]], "Windows": [[175, "windows"]], "Welcome to BlocksNet documentation!": [[176, "welcome-to-blocksnet-documentation"]], "Documentation:": [[176, "documentation"]], "Features": [[176, "features"]], "Acknowledgments": [[176, "acknowledgments"]]}, "indexentries": {"blocksnet": [[1, "module-blocksnet"]], "module": [[1, "module-blocksnet"], [2, "module-blocksnet.analysis"], [3, "module-blocksnet.analysis.centrality"], [4, "module-blocksnet.analysis.centrality.population"], [5, "module-blocksnet.analysis.centrality.population.core"], [6, "module-blocksnet.analysis.centrality.population.schemas"], [7, "module-blocksnet.analysis.centrality.services"], [8, "module-blocksnet.analysis.centrality.services.core"], [9, "module-blocksnet.analysis.indicators"], [10, "module-blocksnet.analysis.indicators.density"], [11, "module-blocksnet.analysis.indicators.density.core"], [12, "module-blocksnet.analysis.indicators.density.schemas"], [13, "module-blocksnet.analysis.indicators.development"], [14, "module-blocksnet.analysis.indicators.development.core"], [15, "module-blocksnet.analysis.indicators.development.schemas"], [16, "module-blocksnet.analysis.morphotypes"], [17, "module-blocksnet.analysis.morphotypes.schemas"], [18, "module-blocksnet.analysis.morphotypes.spacematrix"], [19, "module-blocksnet.analysis.morphotypes.strelka"], [20, "module-blocksnet.analysis.services"], [21, "module-blocksnet.analysis.services.collocation"], [22, "module-blocksnet.analysis.services.collocation.core"], [23, "module-blocksnet.analysis.services.count"], [24, "module-blocksnet.analysis.services.count.core"], [25, "module-blocksnet.analysis.services.count.schemas"], [26, "module-blocksnet.analysis.services.density"], [27, "module-blocksnet.analysis.services.density.core"], [28, "module-blocksnet.analysis.services.density.schemas"], [29, "module-blocksnet.blocks"], [30, "module-blocksnet.blocks.aggregation"], [31, "module-blocksnet.blocks.aggregation.core"], [32, "module-blocksnet.blocks.aggregation.schemas"], [33, "module-blocksnet.blocks.assignment"], [34, "module-blocksnet.blocks.assignment.core"], [35, "module-blocksnet.blocks.assignment.schemas"], [36, "module-blocksnet.blocks.assignment.utils"], [37, "module-blocksnet.blocks.postprocessing"], [38, "module-blocksnet.blocks.postprocessing.core"], [39, "module-blocksnet.blocks.postprocessing.schemas"], [40, "module-blocksnet.enums"], [41, "module-blocksnet.enums.block_category"], [42, "module-blocksnet.enums.land_use"], [43, "module-blocksnet.enums.land_use_category"], [44, "module-blocksnet.enums.settlement_category"], [45, "module-blocksnet.machine_learning"], [46, "module-blocksnet.machine_learning.context"], [47, "module-blocksnet.machine_learning.context.base_context"], [48, "module-blocksnet.machine_learning.strategy"], [49, "module-blocksnet.machine_learning.strategy.base_strategy"], [50, "module-blocksnet.machine_learning.strategy.catboost"], [51, "module-blocksnet.machine_learning.strategy.catboost.base_strategy"], [52, "module-blocksnet.machine_learning.strategy.catboost.classification_strategy"], [53, "module-blocksnet.machine_learning.strategy.catboost.regression_strategy"], [54, "module-blocksnet.machine_learning.strategy.classification_base"], [55, "module-blocksnet.machine_learning.strategy.sklearn"], [56, "module-blocksnet.machine_learning.strategy.sklearn.base_strategy"], [57, "module-blocksnet.machine_learning.strategy.sklearn.ensemble"], [58, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.base_strategy"], [59, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.voting"], [60, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy"], [61, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.voting.classification_strategy"], [62, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.voting.regression_strategy"], [63, "module-blocksnet.machine_learning.strategy.xgboost"], [64, "module-blocksnet.machine_learning.strategy.xgboost.base_strategy"], [65, "module-blocksnet.machine_learning.strategy.xgboost.classification_strategy"], [66, "module-blocksnet.machine_learning.strategy.xgboost.regression_strategy"], [67, "module-blocksnet.optimization"], [68, "module-blocksnet.preprocessing"], [69, "module-blocksnet.relations"], [70, "module-blocksnet.relations.accessibility"], [71, "module-blocksnet.relations.accessibility.graph"], [72, "module-blocksnet.relations.accessibility.graph.core"], [73, "module-blocksnet.relations.accessibility.graph.schemas"], [74, "module-blocksnet.relations.accessibility.graph.utils"], [75, "module-blocksnet.relations.accessibility.matrix"], [76, "module-blocksnet.relations.accessibility.matrix.core"], [77, "module-blocksnet.relations.accessibility.matrix.schemas"], [78, "module-blocksnet.relations.adjacency"], [79, "module-blocksnet.relations.adjacency.core"], [80, "module-blocksnet.relations.adjacency.schemas"], [81, "module-blocksnet.relations.distance"], [82, "module-blocksnet.relations.distance.core"], [83, "module-blocksnet.relations.distance.schemas"], [84, "module-blocksnet.synthesis"], [85, "module-blocksnet.utils"], [86, "module-blocksnet.utils.validation"], [87, "module-blocksnet.utils.validation.df_schema"], [88, "module-blocksnet.utils.validation.gdf_schema"], [89, "module-blocksnet.utils.validation.land_use_schema"], [90, "module-blocksnet.utils.validation.utils"]], "blocksnet.analysis": [[2, "module-blocksnet.analysis"]], "blocksnet.analysis.centrality": [[3, "module-blocksnet.analysis.centrality"]], "population_centrality() (in module blocksnet.analysis.centrality)": [[3, "blocksnet.analysis.centrality.population_centrality"]], "services_centrality() (in module blocksnet.analysis.centrality)": [[3, "blocksnet.analysis.centrality.services_centrality"]], "blocksnet.analysis.centrality.population": [[4, "module-blocksnet.analysis.centrality.population"]], "population_centrality() (in module blocksnet.analysis.centrality.population)": [[4, "blocksnet.analysis.centrality.population.population_centrality"]], "blocksnet.analysis.centrality.population.core": [[5, "module-blocksnet.analysis.centrality.population.core"]], "population_centrality() (in module blocksnet.analysis.centrality.population.core)": [[5, "blocksnet.analysis.centrality.population.core.population_centrality"]], "blocksschema (class in blocksnet.analysis.centrality.population.schemas)": [[6, "blocksnet.analysis.centrality.population.schemas.BlocksSchema"]], "blocksnet.analysis.centrality.population.schemas": [[6, "module-blocksnet.analysis.centrality.population.schemas"]], "blocksnet.analysis.centrality.services": [[7, "module-blocksnet.analysis.centrality.services"]], "services_centrality() (in module blocksnet.analysis.centrality.services)": [[7, "blocksnet.analysis.centrality.services.services_centrality"]], "blocksnet.analysis.centrality.services.core": [[8, "module-blocksnet.analysis.centrality.services.core"]], "services_centrality() (in module blocksnet.analysis.centrality.services.core)": [[8, "blocksnet.analysis.centrality.services.core.services_centrality"]], "blocksnet.analysis.indicators": [[9, "module-blocksnet.analysis.indicators"]], "calculate_density_indicators() (in module blocksnet.analysis.indicators)": [[9, "blocksnet.analysis.indicators.calculate_density_indicators"]], "calculate_development_indicators() (in module blocksnet.analysis.indicators)": [[9, "blocksnet.analysis.indicators.calculate_development_indicators"]], "blocksnet.analysis.indicators.density": [[10, "module-blocksnet.analysis.indicators.density"]], "calculate_density_indicators() (in module blocksnet.analysis.indicators.density)": [[10, "blocksnet.analysis.indicators.density.calculate_density_indicators"]], "blocksnet.analysis.indicators.density.core": [[11, "module-blocksnet.analysis.indicators.density.core"]], "calculate_density_indicators() (in module blocksnet.analysis.indicators.density.core)": [[11, "blocksnet.analysis.indicators.density.core.calculate_density_indicators"]], "blocksschema (class in blocksnet.analysis.indicators.density.schemas)": [[12, "blocksnet.analysis.indicators.density.schemas.BlocksSchema"]], "blocksnet.analysis.indicators.density.schemas": [[12, "module-blocksnet.analysis.indicators.density.schemas"]], "blocksnet.analysis.indicators.development": [[13, "module-blocksnet.analysis.indicators.development"]], "calculate_development_indicators() (in module blocksnet.analysis.indicators.development)": [[13, "blocksnet.analysis.indicators.development.calculate_development_indicators"]], "blocksnet.analysis.indicators.development.core": [[14, "module-blocksnet.analysis.indicators.development.core"]], "calculate_development_indicators() (in module blocksnet.analysis.indicators.development.core)": [[14, "blocksnet.analysis.indicators.development.core.calculate_development_indicators"]], "blocksschema (class in blocksnet.analysis.indicators.development.schemas)": [[15, "blocksnet.analysis.indicators.development.schemas.BlocksSchema"]], "blocksnet.analysis.indicators.development.schemas": [[15, "module-blocksnet.analysis.indicators.development.schemas"]], "blocksnet.analysis.morphotypes": [[16, "module-blocksnet.analysis.morphotypes"]], "get_spacematrix_morphotypes() (in module blocksnet.analysis.morphotypes)": [[16, "blocksnet.analysis.morphotypes.get_spacematrix_morphotypes"]], "get_strelka_morphotypes() (in module blocksnet.analysis.morphotypes)": [[16, "blocksnet.analysis.morphotypes.get_strelka_morphotypes"]], "blocksschema (class in blocksnet.analysis.morphotypes.schemas)": [[17, "blocksnet.analysis.morphotypes.schemas.BlocksSchema"]], "blocksnet.analysis.morphotypes.schemas": [[17, "module-blocksnet.analysis.morphotypes.schemas"]], "blocksnet.analysis.morphotypes.spacematrix": [[18, "module-blocksnet.analysis.morphotypes.spacematrix"]], "get_spacematrix_morphotypes() (in module blocksnet.analysis.morphotypes.spacematrix)": [[18, "blocksnet.analysis.morphotypes.spacematrix.get_spacematrix_morphotypes"]], "basic (blocksnet.analysis.morphotypes.strelka.midrisemorphotype attribute)": [[19, "blocksnet.analysis.morphotypes.strelka.MidRiseMorphotype.BASIC"]], "block (blocksnet.analysis.morphotypes.strelka.midrisemorphotype attribute)": [[19, "blocksnet.analysis.morphotypes.strelka.MidRiseMorphotype.BLOCK"]], "central_model (blocksnet.analysis.morphotypes.strelka.midrisemorphotype attribute)": [[19, "blocksnet.analysis.morphotypes.strelka.MidRiseMorphotype.CENTRAL_MODEL"]], "highrisemorphotype (class in blocksnet.analysis.morphotypes.strelka)": [[19, "blocksnet.analysis.morphotypes.strelka.HighRiseMorphotype"]], "individual (blocksnet.analysis.morphotypes.strelka.lowrisemorphotype attribute)": [[19, "blocksnet.analysis.morphotypes.strelka.LowRiseMorphotype.INDIVIDUAL"]], "low_rise_model (blocksnet.analysis.morphotypes.strelka.lowrisemorphotype attribute)": [[19, "blocksnet.analysis.morphotypes.strelka.LowRiseMorphotype.LOW_RISE_MODEL"]], "lowrisemorphotype (class in blocksnet.analysis.morphotypes.strelka)": [[19, "blocksnet.analysis.morphotypes.strelka.LowRiseMorphotype"]], "microdistrict (blocksnet.analysis.morphotypes.strelka.midrisemorphotype attribute)": [[19, "blocksnet.analysis.morphotypes.strelka.MidRiseMorphotype.MICRODISTRICT"]], "modern_microdistrict (blocksnet.analysis.morphotypes.strelka.highrisemorphotype attribute)": [[19, "blocksnet.analysis.morphotypes.strelka.HighRiseMorphotype.MODERN_MICRODISTRICT"]], "midrisemorphotype (class in blocksnet.analysis.morphotypes.strelka)": [[19, "blocksnet.analysis.morphotypes.strelka.MidRiseMorphotype"]], "non_residential (blocksnet.analysis.morphotypes.strelka.highrisemorphotype attribute)": [[19, "blocksnet.analysis.morphotypes.strelka.HighRiseMorphotype.NON_RESIDENTIAL"]], "non_residential (blocksnet.analysis.morphotypes.strelka.lowrisemorphotype attribute)": [[19, "blocksnet.analysis.morphotypes.strelka.LowRiseMorphotype.NON_RESIDENTIAL"]], "non_residential (blocksnet.analysis.morphotypes.strelka.midrisemorphotype attribute)": [[19, "blocksnet.analysis.morphotypes.strelka.MidRiseMorphotype.NON_RESIDENTIAL"]], "soviet_microdistrict (blocksnet.analysis.morphotypes.strelka.highrisemorphotype attribute)": [[19, "blocksnet.analysis.morphotypes.strelka.HighRiseMorphotype.SOVIET_MICRODISTRICT"]], "blocksnet.analysis.morphotypes.strelka": [[19, "module-blocksnet.analysis.morphotypes.strelka"]], "get_strelka_morphotypes() (in module blocksnet.analysis.morphotypes.strelka)": [[19, "blocksnet.analysis.morphotypes.strelka.get_strelka_morphotypes"]], "blocksnet.analysis.services": [[20, "module-blocksnet.analysis.services"]], "services_collocation() (in module blocksnet.analysis.services)": [[20, "blocksnet.analysis.services.services_collocation"]], "services_count() (in module blocksnet.analysis.services)": [[20, "blocksnet.analysis.services.services_count"]], "services_density() (in module blocksnet.analysis.services)": [[20, "blocksnet.analysis.services.services_density"]], "blocksnet.analysis.services.collocation": [[21, "module-blocksnet.analysis.services.collocation"]], "services_collocation() (in module blocksnet.analysis.services.collocation)": [[21, "blocksnet.analysis.services.collocation.services_collocation"]], "blocksnet.analysis.services.collocation.core": [[22, "module-blocksnet.analysis.services.collocation.core"]], "services_collocation() (in module blocksnet.analysis.services.collocation.core)": [[22, "blocksnet.analysis.services.collocation.core.services_collocation"]], "blocksnet.analysis.services.count": [[23, "module-blocksnet.analysis.services.count"]], "services_count() (in module blocksnet.analysis.services.count)": [[23, "blocksnet.analysis.services.count.services_count"]], "blocksnet.analysis.services.count.core": [[24, "module-blocksnet.analysis.services.count.core"]], "services_count() (in module blocksnet.analysis.services.count.core)": [[24, "blocksnet.analysis.services.count.core.services_count"]], "blocksservicesschema (class in blocksnet.analysis.services.count.schemas)": [[25, "blocksnet.analysis.services.count.schemas.BlocksServicesSchema"]], "blocksnet.analysis.services.count.schemas": [[25, "module-blocksnet.analysis.services.count.schemas"]], "blocksnet.analysis.services.density": [[26, "module-blocksnet.analysis.services.density"]], "services_density() (in module blocksnet.analysis.services.density)": [[26, "blocksnet.analysis.services.density.services_density"]], "blocksnet.analysis.services.density.core": [[27, "module-blocksnet.analysis.services.density.core"]], "services_density() (in module blocksnet.analysis.services.density.core)": [[27, "blocksnet.analysis.services.density.core.services_density"]], "blocksareaschema (class in blocksnet.analysis.services.density.schemas)": [[28, "blocksnet.analysis.services.density.schemas.BlocksAreaSchema"]], "blocksnet.analysis.services.density.schemas": [[28, "module-blocksnet.analysis.services.density.schemas"]], "blocksnet.blocks": [[29, "module-blocksnet.blocks"]], "aggregate_objects() (in module blocksnet.blocks.aggregation)": [[30, "blocksnet.blocks.aggregation.aggregate_objects"]], "blocksnet.blocks.aggregation": [[30, "module-blocksnet.blocks.aggregation"]], "aggregate_objects() (in module blocksnet.blocks.aggregation.core)": [[31, "blocksnet.blocks.aggregation.core.aggregate_objects"]], "blocksnet.blocks.aggregation.core": [[31, "module-blocksnet.blocks.aggregation.core"]], "blocksschema (class in blocksnet.blocks.aggregation.schemas)": [[32, "blocksnet.blocks.aggregation.schemas.BlocksSchema"]], "blocksnet.blocks.aggregation.schemas": [[32, "module-blocksnet.blocks.aggregation.schemas"]], "assign_land_use() (in module blocksnet.blocks.assignment)": [[33, "blocksnet.blocks.assignment.assign_land_use"]], "blocksnet.blocks.assignment": [[33, "module-blocksnet.blocks.assignment"]], "assign_land_use() (in module blocksnet.blocks.assignment.core)": [[34, "blocksnet.blocks.assignment.core.assign_land_use"]], "blocksnet.blocks.assignment.core": [[34, "module-blocksnet.blocks.assignment.core"]], "blocksschema (class in blocksnet.blocks.assignment.schemas)": [[35, "blocksnet.blocks.assignment.schemas.BlocksSchema"]], "functionalzonesschema (class in blocksnet.blocks.assignment.schemas)": [[35, "blocksnet.blocks.assignment.schemas.FunctionalZonesSchema"]], "blocksnet.blocks.assignment.schemas": [[35, "module-blocksnet.blocks.assignment.schemas"]], "functional_zone (blocksnet.blocks.assignment.schemas.functionalzonesschema attribute)": [[35, "blocksnet.blocks.assignment.schemas.FunctionalZonesSchema.functional_zone"]], "blocksnet.blocks.assignment.utils": [[36, "module-blocksnet.blocks.assignment.utils"]], "sjoin_intersections() (in module blocksnet.blocks.assignment.utils)": [[36, "blocksnet.blocks.assignment.utils.sjoin_intersections"]], "blocksnet.blocks.postprocessing": [[37, "module-blocksnet.blocks.postprocessing"]], "postprocess_urban_blocks() (in module blocksnet.blocks.postprocessing)": [[37, "blocksnet.blocks.postprocessing.postprocess_urban_blocks"]], "blocksnet.blocks.postprocessing.core": [[38, "module-blocksnet.blocks.postprocessing.core"]], "postprocess_urban_blocks() (in module blocksnet.blocks.postprocessing.core)": [[38, "blocksnet.blocks.postprocessing.core.postprocess_urban_blocks"]], "blocksschema (class in blocksnet.blocks.postprocessing.schemas)": [[39, "blocksnet.blocks.postprocessing.schemas.BlocksSchema"]], "blocksnet.blocks.postprocessing.schemas": [[39, "module-blocksnet.blocks.postprocessing.schemas"]], "agriculture (blocksnet.enums.landuse attribute)": [[40, "blocksnet.enums.LandUse.AGRICULTURE"]], "business (blocksnet.enums.landuse attribute)": [[40, "blocksnet.enums.LandUse.BUSINESS"]], "blockcategory (class in blocksnet.enums)": [[40, "blocksnet.enums.BlockCategory"]], "industrial (blocksnet.enums.landuse attribute)": [[40, "blocksnet.enums.LandUse.INDUSTRIAL"]], "industrial (blocksnet.enums.landusecategory attribute)": [[40, "blocksnet.enums.LandUseCategory.INDUSTRIAL"]], "invalid (blocksnet.enums.blockcategory attribute)": [[40, "blocksnet.enums.BlockCategory.INVALID"]], "large (blocksnet.enums.blockcategory attribute)": [[40, "blocksnet.enums.BlockCategory.LARGE"]], "landuse (class in blocksnet.enums)": [[40, "blocksnet.enums.LandUse"]], "landusecategory (class in blocksnet.enums)": [[40, "blocksnet.enums.LandUseCategory"]], "non_urban (blocksnet.enums.landusecategory attribute)": [[40, "blocksnet.enums.LandUseCategory.NON_URBAN"]], "normal (blocksnet.enums.blockcategory attribute)": [[40, "blocksnet.enums.BlockCategory.NORMAL"]], "recreation (blocksnet.enums.landuse attribute)": [[40, "blocksnet.enums.LandUse.RECREATION"]], "residential (blocksnet.enums.landuse attribute)": [[40, "blocksnet.enums.LandUse.RESIDENTIAL"]], "special (blocksnet.enums.landuse attribute)": [[40, "blocksnet.enums.LandUse.SPECIAL"]], "suburb (blocksnet.enums.settlementcategory attribute)": [[40, "blocksnet.enums.SettlementCategory.SUBURB"]], "settlementcategory (class in blocksnet.enums)": [[40, "blocksnet.enums.SettlementCategory"]], "town (blocksnet.enums.settlementcategory attribute)": [[40, "blocksnet.enums.SettlementCategory.TOWN"]], "transport (blocksnet.enums.landuse attribute)": [[40, "blocksnet.enums.LandUse.TRANSPORT"]], "urban (blocksnet.enums.landusecategory attribute)": [[40, "blocksnet.enums.LandUseCategory.URBAN"]], "village (blocksnet.enums.settlementcategory attribute)": [[40, "blocksnet.enums.SettlementCategory.VILLAGE"]], "blocksnet.enums": [[40, "module-blocksnet.enums"]], "from_land_use() (blocksnet.enums.landusecategory class method)": [[40, "blocksnet.enums.LandUseCategory.from_land_use"]], "to_land_use() (blocksnet.enums.landusecategory method)": [[40, "blocksnet.enums.LandUseCategory.to_land_use"]], "to_one_hot() (blocksnet.enums.landuse method)": [[40, "blocksnet.enums.LandUse.to_one_hot"]], "blockcategory (class in blocksnet.enums.block_category)": [[41, "blocksnet.enums.block_category.BlockCategory"]], "invalid (blocksnet.enums.block_category.blockcategory attribute)": [[41, "blocksnet.enums.block_category.BlockCategory.INVALID"]], "large (blocksnet.enums.block_category.blockcategory attribute)": [[41, "blocksnet.enums.block_category.BlockCategory.LARGE"]], "normal (blocksnet.enums.block_category.blockcategory attribute)": [[41, "blocksnet.enums.block_category.BlockCategory.NORMAL"]], "blocksnet.enums.block_category": [[41, "module-blocksnet.enums.block_category"]], "agriculture (blocksnet.enums.land_use.landuse attribute)": [[42, "blocksnet.enums.land_use.LandUse.AGRICULTURE"]], "business (blocksnet.enums.land_use.landuse attribute)": [[42, "blocksnet.enums.land_use.LandUse.BUSINESS"]], "industrial (blocksnet.enums.land_use.landuse attribute)": [[42, "blocksnet.enums.land_use.LandUse.INDUSTRIAL"]], "landuse (class in blocksnet.enums.land_use)": [[42, "blocksnet.enums.land_use.LandUse"]], "recreation (blocksnet.enums.land_use.landuse attribute)": [[42, "blocksnet.enums.land_use.LandUse.RECREATION"]], "residential (blocksnet.enums.land_use.landuse attribute)": [[42, "blocksnet.enums.land_use.LandUse.RESIDENTIAL"]], "special (blocksnet.enums.land_use.landuse attribute)": [[42, "blocksnet.enums.land_use.LandUse.SPECIAL"]], "transport (blocksnet.enums.land_use.landuse attribute)": [[42, "blocksnet.enums.land_use.LandUse.TRANSPORT"]], "blocksnet.enums.land_use": [[42, "module-blocksnet.enums.land_use"]], "to_one_hot() (blocksnet.enums.land_use.landuse method)": [[42, "blocksnet.enums.land_use.LandUse.to_one_hot"]], "industrial (blocksnet.enums.land_use_category.landusecategory attribute)": [[43, "blocksnet.enums.land_use_category.LandUseCategory.INDUSTRIAL"]], "landusecategory (class in blocksnet.enums.land_use_category)": [[43, "blocksnet.enums.land_use_category.LandUseCategory"]], "non_urban (blocksnet.enums.land_use_category.landusecategory attribute)": [[43, "blocksnet.enums.land_use_category.LandUseCategory.NON_URBAN"]], "urban (blocksnet.enums.land_use_category.landusecategory attribute)": [[43, "blocksnet.enums.land_use_category.LandUseCategory.URBAN"]], "blocksnet.enums.land_use_category": [[43, "module-blocksnet.enums.land_use_category"]], "from_land_use() (blocksnet.enums.land_use_category.landusecategory class method)": [[43, "blocksnet.enums.land_use_category.LandUseCategory.from_land_use"]], "to_land_use() (blocksnet.enums.land_use_category.landusecategory method)": [[43, "blocksnet.enums.land_use_category.LandUseCategory.to_land_use"]], "suburb (blocksnet.enums.settlement_category.settlementcategory attribute)": [[44, "blocksnet.enums.settlement_category.SettlementCategory.SUBURB"]], "settlementcategory (class in blocksnet.enums.settlement_category)": [[44, "blocksnet.enums.settlement_category.SettlementCategory"]], "town (blocksnet.enums.settlement_category.settlementcategory attribute)": [[44, "blocksnet.enums.settlement_category.SettlementCategory.TOWN"]], "village (blocksnet.enums.settlement_category.settlementcategory attribute)": [[44, "blocksnet.enums.settlement_category.SettlementCategory.VILLAGE"]], "blocksnet.enums.settlement_category": [[44, "module-blocksnet.enums.settlement_category"]], "basecontext (class in blocksnet.machine_learning)": [[45, "blocksnet.machine_learning.BaseContext"]], "basestrategy (class in blocksnet.machine_learning)": [[45, "blocksnet.machine_learning.BaseStrategy"]], "classificationbase (class in blocksnet.machine_learning)": [[45, "blocksnet.machine_learning.ClassificationBase"]], "blocksnet.machine_learning": [[45, "module-blocksnet.machine_learning"]], "default() (blocksnet.machine_learning.basecontext class method)": [[45, "blocksnet.machine_learning.BaseContext.default"]], "load() (blocksnet.machine_learning.basestrategy method)": [[45, "blocksnet.machine_learning.BaseStrategy.load"]], "model (blocksnet.machine_learning.basestrategy property)": [[45, "blocksnet.machine_learning.BaseStrategy.model"]], "predict() (blocksnet.machine_learning.basestrategy method)": [[45, "blocksnet.machine_learning.BaseStrategy.predict"]], "predict_proba() (blocksnet.machine_learning.classificationbase method)": [[45, "blocksnet.machine_learning.ClassificationBase.predict_proba"]], "run() (blocksnet.machine_learning.basecontext method)": [[45, "blocksnet.machine_learning.BaseContext.run"]], "save() (blocksnet.machine_learning.basestrategy method)": [[45, "blocksnet.machine_learning.BaseStrategy.save"]], "strategy (blocksnet.machine_learning.basecontext property)": [[45, "blocksnet.machine_learning.BaseContext.strategy"]], "train() (blocksnet.machine_learning.basecontext method)": [[45, "blocksnet.machine_learning.BaseContext.train"]], "train() (blocksnet.machine_learning.basestrategy method)": [[45, "blocksnet.machine_learning.BaseStrategy.train"]], "basecontext (class in blocksnet.machine_learning.context)": [[46, "blocksnet.machine_learning.context.BaseContext"]], "blocksnet.machine_learning.context": [[46, "module-blocksnet.machine_learning.context"]], "default() (blocksnet.machine_learning.context.basecontext class method)": [[46, "blocksnet.machine_learning.context.BaseContext.default"]], "run() (blocksnet.machine_learning.context.basecontext method)": [[46, "blocksnet.machine_learning.context.BaseContext.run"]], "strategy (blocksnet.machine_learning.context.basecontext property)": [[46, "blocksnet.machine_learning.context.BaseContext.strategy"]], "train() (blocksnet.machine_learning.context.basecontext method)": [[46, "blocksnet.machine_learning.context.BaseContext.train"]], "basecontext (class in blocksnet.machine_learning.context.base_context)": [[47, "blocksnet.machine_learning.context.base_context.BaseContext"]], "blocksnet.machine_learning.context.base_context": [[47, "module-blocksnet.machine_learning.context.base_context"]], "default() (blocksnet.machine_learning.context.base_context.basecontext class method)": [[47, "blocksnet.machine_learning.context.base_context.BaseContext.default"]], "run() (blocksnet.machine_learning.context.base_context.basecontext method)": [[47, "blocksnet.machine_learning.context.base_context.BaseContext.run"]], "strategy (blocksnet.machine_learning.context.base_context.basecontext property)": [[47, "blocksnet.machine_learning.context.base_context.BaseContext.strategy"]], "train() (blocksnet.machine_learning.context.base_context.basecontext method)": [[47, "blocksnet.machine_learning.context.base_context.BaseContext.train"]], "basestrategy (class in blocksnet.machine_learning.strategy)": [[48, "blocksnet.machine_learning.strategy.BaseStrategy"]], "classificationbase (class in blocksnet.machine_learning.strategy)": [[48, "blocksnet.machine_learning.strategy.ClassificationBase"]], "blocksnet.machine_learning.strategy": [[48, "module-blocksnet.machine_learning.strategy"]], "load() (blocksnet.machine_learning.strategy.basestrategy method)": [[48, "blocksnet.machine_learning.strategy.BaseStrategy.load"]], "model (blocksnet.machine_learning.strategy.basestrategy property)": [[48, "blocksnet.machine_learning.strategy.BaseStrategy.model"]], "predict() (blocksnet.machine_learning.strategy.basestrategy method)": [[48, "blocksnet.machine_learning.strategy.BaseStrategy.predict"]], "predict_proba() (blocksnet.machine_learning.strategy.classificationbase method)": [[48, "blocksnet.machine_learning.strategy.ClassificationBase.predict_proba"]], "save() (blocksnet.machine_learning.strategy.basestrategy method)": [[48, "blocksnet.machine_learning.strategy.BaseStrategy.save"]], "train() (blocksnet.machine_learning.strategy.basestrategy method)": [[48, "blocksnet.machine_learning.strategy.BaseStrategy.train"]], "basestrategy (class in blocksnet.machine_learning.strategy.base_strategy)": [[49, "blocksnet.machine_learning.strategy.base_strategy.BaseStrategy"]], "blocksnet.machine_learning.strategy.base_strategy": [[49, "module-blocksnet.machine_learning.strategy.base_strategy"]], "load() (blocksnet.machine_learning.strategy.base_strategy.basestrategy method)": [[49, "blocksnet.machine_learning.strategy.base_strategy.BaseStrategy.load"]], "model (blocksnet.machine_learning.strategy.base_strategy.basestrategy property)": [[49, "blocksnet.machine_learning.strategy.base_strategy.BaseStrategy.model"]], "predict() (blocksnet.machine_learning.strategy.base_strategy.basestrategy method)": [[49, "blocksnet.machine_learning.strategy.base_strategy.BaseStrategy.predict"]], "save() (blocksnet.machine_learning.strategy.base_strategy.basestrategy method)": [[49, "blocksnet.machine_learning.strategy.base_strategy.BaseStrategy.save"]], "train() (blocksnet.machine_learning.strategy.base_strategy.basestrategy method)": [[49, "blocksnet.machine_learning.strategy.base_strategy.BaseStrategy.train"]], "catboostbasestrategy (class in blocksnet.machine_learning.strategy.catboost)": [[50, "blocksnet.machine_learning.strategy.catboost.CatBoostBaseStrategy"]], "catboostclassificationstrategy (class in blocksnet.machine_learning.strategy.catboost)": [[50, "blocksnet.machine_learning.strategy.catboost.CatBoostClassificationStrategy"]], "catboostregressionstrategy (class in blocksnet.machine_learning.strategy.catboost)": [[50, "blocksnet.machine_learning.strategy.catboost.CatBoostRegressionStrategy"]], "blocksnet.machine_learning.strategy.catboost": [[50, "module-blocksnet.machine_learning.strategy.catboost"]], "predict() (blocksnet.machine_learning.strategy.catboost.catboostbasestrategy method)": [[50, "blocksnet.machine_learning.strategy.catboost.CatBoostBaseStrategy.predict"]], "predict_proba() (blocksnet.machine_learning.strategy.catboost.catboostclassificationstrategy method)": [[50, "blocksnet.machine_learning.strategy.catboost.CatBoostClassificationStrategy.predict_proba"]], "train() (blocksnet.machine_learning.strategy.catboost.catboostbasestrategy method)": [[50, "blocksnet.machine_learning.strategy.catboost.CatBoostBaseStrategy.train"]], "catboostbasestrategy (class in blocksnet.machine_learning.strategy.catboost.base_strategy)": [[51, "blocksnet.machine_learning.strategy.catboost.base_strategy.CatBoostBaseStrategy"]], "blocksnet.machine_learning.strategy.catboost.base_strategy": [[51, "module-blocksnet.machine_learning.strategy.catboost.base_strategy"]], "predict() (blocksnet.machine_learning.strategy.catboost.base_strategy.catboostbasestrategy method)": [[51, "blocksnet.machine_learning.strategy.catboost.base_strategy.CatBoostBaseStrategy.predict"]], "train() (blocksnet.machine_learning.strategy.catboost.base_strategy.catboostbasestrategy method)": [[51, "blocksnet.machine_learning.strategy.catboost.base_strategy.CatBoostBaseStrategy.train"]], "catboostclassificationstrategy (class in blocksnet.machine_learning.strategy.catboost.classification_strategy)": [[52, "blocksnet.machine_learning.strategy.catboost.classification_strategy.CatBoostClassificationStrategy"]], "blocksnet.machine_learning.strategy.catboost.classification_strategy": [[52, "module-blocksnet.machine_learning.strategy.catboost.classification_strategy"]], "predict_proba() (blocksnet.machine_learning.strategy.catboost.classification_strategy.catboostclassificationstrategy method)": [[52, "blocksnet.machine_learning.strategy.catboost.classification_strategy.CatBoostClassificationStrategy.predict_proba"]], "catboostregressionstrategy (class in blocksnet.machine_learning.strategy.catboost.regression_strategy)": [[53, "blocksnet.machine_learning.strategy.catboost.regression_strategy.CatBoostRegressionStrategy"]], "blocksnet.machine_learning.strategy.catboost.regression_strategy": [[53, "module-blocksnet.machine_learning.strategy.catboost.regression_strategy"]], "classificationbase (class in blocksnet.machine_learning.strategy.classification_base)": [[54, "blocksnet.machine_learning.strategy.classification_base.ClassificationBase"]], "blocksnet.machine_learning.strategy.classification_base": [[54, "module-blocksnet.machine_learning.strategy.classification_base"]], "predict_proba() (blocksnet.machine_learning.strategy.classification_base.classificationbase method)": [[54, "blocksnet.machine_learning.strategy.classification_base.ClassificationBase.predict_proba"]], "blocksnet.machine_learning.strategy.sklearn": [[55, "module-blocksnet.machine_learning.strategy.sklearn"]], "sklearnbasestrategy (class in blocksnet.machine_learning.strategy.sklearn.base_strategy)": [[56, "blocksnet.machine_learning.strategy.sklearn.base_strategy.SKLearnBaseStrategy"]], "blocksnet.machine_learning.strategy.sklearn.base_strategy": [[56, "module-blocksnet.machine_learning.strategy.sklearn.base_strategy"]], "blocksnet.machine_learning.strategy.sklearn.ensemble": [[57, "module-blocksnet.machine_learning.strategy.sklearn.ensemble"]], "sklearnensemblebasestrategy (class in blocksnet.machine_learning.strategy.sklearn.ensemble.base_strategy)": [[58, "blocksnet.machine_learning.strategy.sklearn.ensemble.base_strategy.SKLearnEnsembleBaseStrategy"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.base_strategy": [[58, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.base_strategy"]], "estimators (blocksnet.machine_learning.strategy.sklearn.ensemble.base_strategy.sklearnensemblebasestrategy property)": [[58, "blocksnet.machine_learning.strategy.sklearn.ensemble.base_strategy.SKLearnEnsembleBaseStrategy.estimators"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.voting": [[59, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.voting"]], "sklearnvotingbasestrategy (class in blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy)": [[60, "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy.SKLearnVotingBaseStrategy"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy": [[60, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy"]], "predict() (blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy.sklearnvotingbasestrategy method)": [[60, "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy.SKLearnVotingBaseStrategy.predict"]], "train() (blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy.sklearnvotingbasestrategy method)": [[60, "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.base_strategy.SKLearnVotingBaseStrategy.train"]], "sklearnvotingclassificationstrategy (class in blocksnet.machine_learning.strategy.sklearn.ensemble.voting.classification_strategy)": [[61, "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.classification_strategy.SKLearnVotingClassificationStrategy"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.classification_strategy": [[61, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.voting.classification_strategy"]], "predict_proba() (blocksnet.machine_learning.strategy.sklearn.ensemble.voting.classification_strategy.sklearnvotingclassificationstrategy method)": [[61, "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.classification_strategy.SKLearnVotingClassificationStrategy.predict_proba"]], "sklearnvotingregressionstrategy (class in blocksnet.machine_learning.strategy.sklearn.ensemble.voting.regression_strategy)": [[62, "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.regression_strategy.SKLearnVotingRegressionStrategy"]], "blocksnet.machine_learning.strategy.sklearn.ensemble.voting.regression_strategy": [[62, "module-blocksnet.machine_learning.strategy.sklearn.ensemble.voting.regression_strategy"]], "xgboostbasestrategy (class in blocksnet.machine_learning.strategy.xgboost)": [[63, "blocksnet.machine_learning.strategy.xgboost.XGBoostBaseStrategy"]], "xgboostclassificationstrategy (class in blocksnet.machine_learning.strategy.xgboost)": [[63, "blocksnet.machine_learning.strategy.xgboost.XGBoostClassificationStrategy"]], "xgboostregressionstrategy (class in blocksnet.machine_learning.strategy.xgboost)": [[63, "blocksnet.machine_learning.strategy.xgboost.XGBoostRegressionStrategy"]], "blocksnet.machine_learning.strategy.xgboost": [[63, "module-blocksnet.machine_learning.strategy.xgboost"]], "predict() (blocksnet.machine_learning.strategy.xgboost.xgboostbasestrategy method)": [[63, "blocksnet.machine_learning.strategy.xgboost.XGBoostBaseStrategy.predict"]], "predict_proba() (blocksnet.machine_learning.strategy.xgboost.xgboostclassificationstrategy method)": [[63, "blocksnet.machine_learning.strategy.xgboost.XGBoostClassificationStrategy.predict_proba"]], "train() (blocksnet.machine_learning.strategy.xgboost.xgboostbasestrategy method)": [[63, "blocksnet.machine_learning.strategy.xgboost.XGBoostBaseStrategy.train"]], "xgboostbasestrategy (class in blocksnet.machine_learning.strategy.xgboost.base_strategy)": [[64, "blocksnet.machine_learning.strategy.xgboost.base_strategy.XGBoostBaseStrategy"]], "blocksnet.machine_learning.strategy.xgboost.base_strategy": [[64, "module-blocksnet.machine_learning.strategy.xgboost.base_strategy"]], "predict() (blocksnet.machine_learning.strategy.xgboost.base_strategy.xgboostbasestrategy method)": [[64, "blocksnet.machine_learning.strategy.xgboost.base_strategy.XGBoostBaseStrategy.predict"]], "train() (blocksnet.machine_learning.strategy.xgboost.base_strategy.xgboostbasestrategy method)": [[64, "blocksnet.machine_learning.strategy.xgboost.base_strategy.XGBoostBaseStrategy.train"]], "xgboostclassificationstrategy (class in blocksnet.machine_learning.strategy.xgboost.classification_strategy)": [[65, "blocksnet.machine_learning.strategy.xgboost.classification_strategy.XGBoostClassificationStrategy"]], "blocksnet.machine_learning.strategy.xgboost.classification_strategy": [[65, "module-blocksnet.machine_learning.strategy.xgboost.classification_strategy"]], "predict_proba() (blocksnet.machine_learning.strategy.xgboost.classification_strategy.xgboostclassificationstrategy method)": [[65, "blocksnet.machine_learning.strategy.xgboost.classification_strategy.XGBoostClassificationStrategy.predict_proba"]], "xgboostregressionstrategy (class in blocksnet.machine_learning.strategy.xgboost.regression_strategy)": [[66, "blocksnet.machine_learning.strategy.xgboost.regression_strategy.XGBoostRegressionStrategy"]], "blocksnet.machine_learning.strategy.xgboost.regression_strategy": [[66, "module-blocksnet.machine_learning.strategy.xgboost.regression_strategy"]], "blocksnet.optimization": [[67, "module-blocksnet.optimization"]], "blocksnet.preprocessing": [[68, "module-blocksnet.preprocessing"]], "accessibility_graph_to_gdfs() (in module blocksnet.relations)": [[69, "blocksnet.relations.accessibility_graph_to_gdfs"]], "blocksnet.relations": [[69, "module-blocksnet.relations"]], "calculate_accessibility_matrix() (in module blocksnet.relations)": [[69, "blocksnet.relations.calculate_accessibility_matrix"]], "calculate_distance_matrix() (in module blocksnet.relations)": [[69, "blocksnet.relations.calculate_distance_matrix"]], "generate_adjacency_graph() (in module blocksnet.relations)": [[69, "blocksnet.relations.generate_adjacency_graph"]], "get_accessibility_context() (in module blocksnet.relations)": [[69, "blocksnet.relations.get_accessibility_context"]], "get_accessibility_graph() (in module blocksnet.relations)": [[69, "blocksnet.relations.get_accessibility_graph"]], "get_adjacency_context() (in module blocksnet.relations)": [[69, "blocksnet.relations.get_adjacency_context"]], "validate_accessibility_graph() (in module blocksnet.relations)": [[69, "blocksnet.relations.validate_accessibility_graph"]], "validate_accessibility_matrix() (in module blocksnet.relations)": [[69, "blocksnet.relations.validate_accessibility_matrix"]], "validate_adjacency_graph() (in module blocksnet.relations)": [[69, "blocksnet.relations.validate_adjacency_graph"]], "accessibility_graph_to_gdfs() (in module blocksnet.relations.accessibility)": [[70, "blocksnet.relations.accessibility.accessibility_graph_to_gdfs"]], "blocksnet.relations.accessibility": [[70, "module-blocksnet.relations.accessibility"]], "calculate_accessibility_matrix() (in module blocksnet.relations.accessibility)": [[70, "blocksnet.relations.accessibility.calculate_accessibility_matrix"]], "get_accessibility_context() (in module blocksnet.relations.accessibility)": [[70, "blocksnet.relations.accessibility.get_accessibility_context"]], "get_accessibility_graph() (in module blocksnet.relations.accessibility)": [[70, "blocksnet.relations.accessibility.get_accessibility_graph"]], "validate_accessibility_graph() (in module blocksnet.relations.accessibility)": [[70, "blocksnet.relations.accessibility.validate_accessibility_graph"]], "validate_accessibility_matrix() (in module blocksnet.relations.accessibility)": [[70, "blocksnet.relations.accessibility.validate_accessibility_matrix"]], "accessibility_graph_to_gdfs() (in module blocksnet.relations.accessibility.graph)": [[71, "blocksnet.relations.accessibility.graph.accessibility_graph_to_gdfs"]], "blocksnet.relations.accessibility.graph": [[71, "module-blocksnet.relations.accessibility.graph"]], "get_accessibility_graph() (in module blocksnet.relations.accessibility.graph)": [[71, "blocksnet.relations.accessibility.graph.get_accessibility_graph"]], "validate_accessibility_graph() (in module blocksnet.relations.accessibility.graph)": [[71, "blocksnet.relations.accessibility.graph.validate_accessibility_graph"]], "blocksnet.relations.accessibility.graph.core": [[72, "module-blocksnet.relations.accessibility.graph.core"]], "get_accessibility_graph() (in module blocksnet.relations.accessibility.graph.core)": [[72, "blocksnet.relations.accessibility.graph.core.get_accessibility_graph"]], "territoryschema (class in blocksnet.relations.accessibility.graph.schemas)": [[73, "blocksnet.relations.accessibility.graph.schemas.TerritorySchema"]], "blocksnet.relations.accessibility.graph.schemas": [[73, "module-blocksnet.relations.accessibility.graph.schemas"]], "validate_accessibility_graph() (in module blocksnet.relations.accessibility.graph.schemas)": [[73, "blocksnet.relations.accessibility.graph.schemas.validate_accessibility_graph"]], "accessibility_graph_to_gdfs() (in module blocksnet.relations.accessibility.graph.utils)": [[74, "blocksnet.relations.accessibility.graph.utils.accessibility_graph_to_gdfs"]], "blocksnet.relations.accessibility.graph.utils": [[74, "module-blocksnet.relations.accessibility.graph.utils"]], "blocksnet.relations.accessibility.matrix": [[75, "module-blocksnet.relations.accessibility.matrix"]], "calculate_accessibility_matrix() (in module blocksnet.relations.accessibility.matrix)": [[75, "blocksnet.relations.accessibility.matrix.calculate_accessibility_matrix"]], "get_accessibility_context() (in module blocksnet.relations.accessibility.matrix)": [[75, "blocksnet.relations.accessibility.matrix.get_accessibility_context"]], "validate_accessibility_matrix() (in module blocksnet.relations.accessibility.matrix)": [[75, "blocksnet.relations.accessibility.matrix.validate_accessibility_matrix"]], "blocksnet.relations.accessibility.matrix.core": [[76, "module-blocksnet.relations.accessibility.matrix.core"]], "calculate_accessibility_matrix() (in module blocksnet.relations.accessibility.matrix.core)": [[76, "blocksnet.relations.accessibility.matrix.core.calculate_accessibility_matrix"]], "get_accessibility_context() (in module blocksnet.relations.accessibility.matrix.core)": [[76, "blocksnet.relations.accessibility.matrix.core.get_accessibility_context"]], "blocksschema (class in blocksnet.relations.accessibility.matrix.schemas)": [[77, "blocksnet.relations.accessibility.matrix.schemas.BlocksSchema"]], "blocksnet.relations.accessibility.matrix.schemas": [[77, "module-blocksnet.relations.accessibility.matrix.schemas"]], "validate_accessibility_matrix() (in module blocksnet.relations.accessibility.matrix.schemas)": [[77, "blocksnet.relations.accessibility.matrix.schemas.validate_accessibility_matrix"]], "blocksnet.relations.adjacency": [[78, "module-blocksnet.relations.adjacency"]], "generate_adjacency_graph() (in module blocksnet.relations.adjacency)": [[78, "blocksnet.relations.adjacency.generate_adjacency_graph"]], "get_adjacency_context() (in module blocksnet.relations.adjacency)": [[78, "blocksnet.relations.adjacency.get_adjacency_context"]], "validate_adjacency_graph() (in module blocksnet.relations.adjacency)": [[78, "blocksnet.relations.adjacency.validate_adjacency_graph"]], "blocksnet.relations.adjacency.core": [[79, "module-blocksnet.relations.adjacency.core"]], "generate_adjacency_graph() (in module blocksnet.relations.adjacency.core)": [[79, "blocksnet.relations.adjacency.core.generate_adjacency_graph"]], "get_adjacency_context() (in module blocksnet.relations.adjacency.core)": [[79, "blocksnet.relations.adjacency.core.get_adjacency_context"]], "blocksschema (class in blocksnet.relations.adjacency.schemas)": [[80, "blocksnet.relations.adjacency.schemas.BlocksSchema"]], "blocksnet.relations.adjacency.schemas": [[80, "module-blocksnet.relations.adjacency.schemas"]], "validate_adjacency_graph() (in module blocksnet.relations.adjacency.schemas)": [[80, "blocksnet.relations.adjacency.schemas.validate_adjacency_graph"]], "blocksnet.relations.distance": [[81, "module-blocksnet.relations.distance"]], "calculate_distance_matrix() (in module blocksnet.relations.distance)": [[81, "blocksnet.relations.distance.calculate_distance_matrix"]], "blocksnet.relations.distance.core": [[82, "module-blocksnet.relations.distance.core"]], "calculate_distance_matrix() (in module blocksnet.relations.distance.core)": [[82, "blocksnet.relations.distance.core.calculate_distance_matrix"]], "blocksschema (class in blocksnet.relations.distance.schemas)": [[83, "blocksnet.relations.distance.schemas.BlocksSchema"]], "blocksnet.relations.distance.schemas": [[83, "module-blocksnet.relations.distance.schemas"]], "centrify() (blocksnet.relations.distance.schemas.blocksschema method)": [[83, "blocksnet.relations.distance.schemas.BlocksSchema.centrify"]], "blocksnet.synthesis": [[84, "module-blocksnet.synthesis"]], "blocksnet.utils": [[85, "module-blocksnet.utils"]], "dfschema (class in blocksnet.utils.validation)": [[86, "blocksnet.utils.validation.DfSchema"]], "dfschema.config (class in blocksnet.utils.validation)": [[86, "blocksnet.utils.validation.DfSchema.Config"]], "gdfschema (class in blocksnet.utils.validation)": [[86, "blocksnet.utils.validation.GdfSchema"]], "landuseschema (class in blocksnet.utils.validation)": [[86, "blocksnet.utils.validation.LandUseSchema"]], "add_missing_columns (blocksnet.utils.validation.dfschema.config attribute)": [[86, "blocksnet.utils.validation.DfSchema.Config.add_missing_columns"]], "blocksnet.utils.validation": [[86, "module-blocksnet.utils.validation"]], "coerce (blocksnet.utils.validation.dfschema.config attribute)": [[86, "blocksnet.utils.validation.DfSchema.Config.coerce"]], "columns_() (blocksnet.utils.validation.dfschema class method)": [[86, "blocksnet.utils.validation.DfSchema.columns_"]], "create_empty() (blocksnet.utils.validation.dfschema class method)": [[86, "blocksnet.utils.validation.DfSchema.create_empty"]], "create_empty() (blocksnet.utils.validation.gdfschema class method)": [[86, "blocksnet.utils.validation.GdfSchema.create_empty"]], "ensure_crs() (in module blocksnet.utils.validation)": [[86, "blocksnet.utils.validation.ensure_crs"]], "geometry (blocksnet.utils.validation.gdfschema attribute)": [[86, "blocksnet.utils.validation.GdfSchema.geometry"]], "strict (blocksnet.utils.validation.dfschema.config attribute)": [[86, "blocksnet.utils.validation.DfSchema.Config.strict"]], "validate() (blocksnet.utils.validation.dfschema class method)": [[86, "blocksnet.utils.validation.DfSchema.validate"]], "validate_graph() (in module blocksnet.utils.validation)": [[86, "blocksnet.utils.validation.validate_graph"]], "validate_matrix() (in module blocksnet.utils.validation)": [[86, "blocksnet.utils.validation.validate_matrix"]], "dfschema (class in blocksnet.utils.validation.df_schema)": [[87, "blocksnet.utils.validation.df_schema.DfSchema"]], "dfschema.config (class in blocksnet.utils.validation.df_schema)": [[87, "blocksnet.utils.validation.df_schema.DfSchema.Config"]], "add_missing_columns (blocksnet.utils.validation.df_schema.dfschema.config attribute)": [[87, "blocksnet.utils.validation.df_schema.DfSchema.Config.add_missing_columns"]], "blocksnet.utils.validation.df_schema": [[87, "module-blocksnet.utils.validation.df_schema"]], "coerce (blocksnet.utils.validation.df_schema.dfschema.config attribute)": [[87, "blocksnet.utils.validation.df_schema.DfSchema.Config.coerce"]], "columns_() (blocksnet.utils.validation.df_schema.dfschema class method)": [[87, "blocksnet.utils.validation.df_schema.DfSchema.columns_"]], "create_empty() (blocksnet.utils.validation.df_schema.dfschema class method)": [[87, "blocksnet.utils.validation.df_schema.DfSchema.create_empty"]], "strict (blocksnet.utils.validation.df_schema.dfschema.config attribute)": [[87, "blocksnet.utils.validation.df_schema.DfSchema.Config.strict"]], "validate() (blocksnet.utils.validation.df_schema.dfschema class method)": [[87, "blocksnet.utils.validation.df_schema.DfSchema.validate"]], "gdfschema (class in blocksnet.utils.validation.gdf_schema)": [[88, "blocksnet.utils.validation.gdf_schema.GdfSchema"]], "blocksnet.utils.validation.gdf_schema": [[88, "module-blocksnet.utils.validation.gdf_schema"]], "create_empty() (blocksnet.utils.validation.gdf_schema.gdfschema class method)": [[88, "blocksnet.utils.validation.gdf_schema.GdfSchema.create_empty"]], "geometry (blocksnet.utils.validation.gdf_schema.gdfschema attribute)": [[88, "blocksnet.utils.validation.gdf_schema.GdfSchema.geometry"]], "landuseschema (class in blocksnet.utils.validation.land_use_schema)": [[89, "blocksnet.utils.validation.land_use_schema.LandUseSchema"]], "blocksnet.utils.validation.land_use_schema": [[89, "module-blocksnet.utils.validation.land_use_schema"]], "blocksnet.utils.validation.utils": [[90, "module-blocksnet.utils.validation.utils"]], "ensure_crs() (in module blocksnet.utils.validation.utils)": [[90, "blocksnet.utils.validation.utils.ensure_crs"]], "validate_graph() (in module blocksnet.utils.validation.utils)": [[90, "blocksnet.utils.validation.utils.validate_graph"]], "validate_matrix() (in module blocksnet.utils.validation.utils)": [[90, "blocksnet.utils.validation.utils.validate_matrix"]]}})